{"version":3,"sources":["webpack:///../node_modules/@theia/monaco/src/browser/monaco-indexed-db.ts","webpack:///../node_modules/@theia/monaco/src/browser/monaco-snippet-suggest-provider.ts","webpack:///../node_modules/@theia/monaco/src/browser/monaco-theming-service.ts","webpack:///../node_modules/fast-plist/release/src/main.js","webpack:///../node_modules/idb/build/esm/chunk.js","webpack:///../node_modules/idb/build/esm/index.js"],"names":[],"mappings":"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AAC,IAAK,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;gCACrE,sBAAoB,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;6BAC1C;;;;;;;;;;;;wBAED,OAAO,CAAC,KAAK,CAAC,iCAAiC,EAAE,GAAC,CAAC,CAAC;;;;;;KAE3D;IAED,uDAAuD;IACtC,kCAAa,GAA9B,UAA+B,GAAW;QACtC,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC;QAC1C,IAAI,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE;YAChC,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;SACnB;QACD,OAAO,GAAG,CAAC;IACf,CAAC;;IAlDgB,oCAAe,GAAG,IAAI,iCAAoB,EAAE,CAAC;IA9F9D;QADC,kBAAM,CAAC,uBAAU,CAAC;;4DACuB;IAHjC,oBAAoB;QADhC,sBAAU,EAAE;OACA,oBAAoB,CAqJhC;IAAD,2BAAC;CAAA;AArJY,oDAAoB;;;;;;;;;;;;;AC1DjC;AACA;AACA;AACa;AACbuCAAuC;AACvC;AACA,SAAS,0BAA0B;AACnC;AACA,SAAS,gBAAgB,KAAK,KAAK,OAAO,OAAO;AACjD;AACA,2BAA2B;AAC3B,0BAA0B;AAC1B,0BAA0B;AAC1B,4BAA4B;AAC5B,4BAA4B;AAC5B;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gC;;;;;;;;;;;;AClcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,sBAAsB,EAAE;AACxiG;;;;;;;;;;;;;ACpLjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsD;AACF;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,6BAA6B,KAAK;AAClE;AACA,wBAAwB,mDAAI;AAC5B;AACA;AACA,oBAAoB,mDAAI,sDAAsD,mDAAI;AAClF,SAAS;AACT;AACA;AACA;AACA;AACA,4FAA4F,EAAE;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,UAAU,KAAK;AACxC;AACA;AACA;AACA,WAAW,mDAAI;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAQ;AACR;AACA;AACA,CAAC;;AAE2B","file":"41.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2020 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport * as idb from 'idb';\nimport { Disposable, DisposableCollection } from '@theia/core/lib/common/disposable';\ntype ThemeMix = import('./textmate/monaco-theme-registry').ThemeMix;\n\nlet _monacoDB: Promise<idb.IDBPDatabase> | undefined;\nif ('indexedDB' in window) {\n    _monacoDB = idb.openDB('theia-monaco', 1, {\n        upgrade: db => {\n            if (!db.objectStoreNames.contains('themes')) {\n                db.createObjectStore('themes', { keyPath: 'id' });\n            }\n        }\n    });\n}\n\nexport const monacoDB = _monacoDB;\n\nexport interface MonacoThemeState {\n    id: string,\n    label: string,\n    description?: string,\n    uiTheme: monaco.editor.BuiltinTheme\n    data: ThemeMix\n}\nexport namespace MonacoThemeState {\n    export function is(state: Object | undefined): state is MonacoThemeState {\n        return !!state && typeof state === 'object' && 'id' in state && 'label' in state && 'uiTheme' in state && 'data' in state;\n    }\n}\n\nexport async function getThemes(): Promise<MonacoThemeState[]> {\n    if (!monacoDB) {\n        return [];\n    }\n    const db = await monacoDB;\n    const result = await db.transaction('themes', 'readonly').objectStore('themes').getAll();\n    return result.filter(MonacoThemeState.is);\n}\n\nexport function putTheme(state: MonacoThemeState): Disposable {\n    const toDispose = new DisposableCollection(Disposable.create(() => { /* mark as not disposed */ }));\n    doPutTheme(state, toDispose);\n    return toDispose;\n}\nasync function doPutTheme(state: MonacoThemeState, toDispose: DisposableCollection): Promise<void> {\n    if (!monacoDB) {\n        return;\n    }\n    const db = await monacoDB;\n    if (toDispose.disposed) {\n        return;\n    }\n    const id = state.id;\n    await db.transaction('themes', 'readwrite').objectStore('themes').put(state);\n    if (toDispose.disposed) {\n        await deleteTheme(id);\n        return;\n    }\n    toDispose.push(Disposable.create(() => deleteTheme(id)));\n}\n\nexport async function deleteTheme(id: string): Promise<void> {\n    if (!monacoDB) {\n        return;\n    }\n    const db = await monacoDB;\n    await db.transaction('themes', 'readwrite').objectStore('themes').delete(id);\n}\n","/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as jsoncparser from 'jsonc-parser';\nimport { injectable, inject } from 'inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { Disposable, DisposableCollection } from '@theia/core/lib/common/disposable';\nimport { FileSystem, FileSystemError } from '@theia/filesystem/lib/common';\nimport { CompletionTriggerKind } from '@theia/languages/lib/browser';\n\n@injectable()\nexport class MonacoSnippetSuggestProvider implements monaco.languages.CompletionItemProvider {\n\n    private static readonly _maxPrefix = 10000;\n\n    @inject(FileSystem)\n    protected readonly filesystem: FileSystem;\n\n    protected readonly snippets = new Map<string, Snippet[]>();\n    protected readonly pendingSnippets = new Map<string, Promise<void>[]>();\n\n    async provideCompletionItems(model: monaco.editor.ITextModel, position: monaco.Position,\n        context: monaco.languages.CompletionContext): Promise<monaco.languages.CompletionList | undefined> {\n\n        // copied and modified from https://github.com/microsoft/vscode/blob/master/src/vs/workbench/contrib/snippets/browser/snippetCompletionProvider.ts\n        if (position.column >= MonacoSnippetSuggestProvider._maxPrefix) {\n            return undefined;\n        }\n\n        if (context.triggerKind === CompletionTriggerKind.TriggerCharacter && context.triggerCharacter === ' ') {\n            // no snippets when suggestions have been triggered by space\n            return undefined;\n        }\n\n        const languageId = model.getModeId(); // TODO: look up a language id at the position\n        await this.loadSnippets(languageId);\n        const snippetsForLanguage = this.snippets.get(languageId) || [];\n\n        const pos = { lineNumber: position.lineNumber, column: 1 };\n        const lineOffsets: number[] = [];\n        const linePrefixLow = model.getLineContent(position.lineNumber).substr(0, position.column - 1).toLowerCase();\n        const endsInWhitespace = linePrefixLow.match(/\\s$/);\n\n        while (pos.column < position.column) {\n            const word = model.getWordAtPosition(pos);\n            if (word) {\n                // at a word\n                lineOffsets.push(word.startColumn - 1);\n                pos.column = word.endColumn + 1;\n                if (word.endColumn - 1 < linePrefixLow.length && !/\\s/.test(linePrefixLow[word.endColumn - 1])) {\n                    lineOffsets.push(word.endColumn - 1);\n                }\n            } else if (!/\\s/.test(linePrefixLow[pos.column - 1])) {\n                // at a none-whitespace character\n                lineOffsets.push(pos.column - 1);\n                pos.column += 1;\n            } else {\n                // always advance!\n                pos.column += 1;\n            }\n        }\n\n        const availableSnippets = new Set<Snippet>();\n        snippetsForLanguage.forEach(availableSnippets.add, availableSnippets);\n        const suggestions: MonacoSnippetSuggestion[] = [];\n        for (const start of lineOffsets) {\n            availableSnippets.forEach(snippet => {\n                if (this.isPatternInWord(linePrefixLow, start, linePrefixLow.length, snippet.prefix.toLowerCase(), 0, snippet.prefix.length)) {\n                    suggestions.push(new MonacoSnippetSuggestion(snippet, monaco.Range.fromPositions(position.delta(0, -(linePrefixLow.length - start)), position)));\n                    availableSnippets.delete(snippet);\n                }\n            });\n        }\n        if (endsInWhitespace || lineOffsets.length === 0) {\n            // add remaining snippets when the current prefix ends in whitespace or when no\n            // interesting positions have been found\n            availableSnippets.forEach(snippet => {\n                suggestions.push(new MonacoSnippetSuggestion(snippet, monaco.Range.fromPositions(position)));\n            });\n        }\n\n        // disambiguate suggestions with same labels\n        suggestions.sort(MonacoSnippetSuggestion.compareByLabel);\n        return { suggestions };\n    }\n\n    resolveCompletionItem(textModel: monaco.editor.ITextModel, position: monaco.Position, item: monaco.languages.CompletionItem): monaco.languages.CompletionItem {\n        return item instanceof MonacoSnippetSuggestion ? item.resolve() : item;\n    }\n\n    protected async loadSnippets(scope: string): Promise<void> {\n        const pending: Promise<void>[] = [];\n        pending.push(...(this.pendingSnippets.get(scope) || []));\n        pending.push(...(this.pendingSnippets.get('*') || []));\n        if (pending.length) {\n            await Promise.all(pending);\n        }\n    }\n\n    fromURI(uri: string | URI, options: SnippetLoadOptions): Disposable {\n        const toDispose = new DisposableCollection(Disposable.create(() => { /* mark as not disposed */ }));\n        const pending = this.loadURI(uri, options, toDispose);\n        const { language } = options;\n        const scopes = Array.isArray(language) ? language : !!language ? [language] : ['*'];\n        for (const scope of scopes) {\n            const pendingSnippets = this.pendingSnippets.get(scope) || [];\n            pendingSnippets.push(pending);\n            this.pendingSnippets.set(scope, pendingSnippets);\n            toDispose.push(Disposable.create(() => {\n                const index = pendingSnippets.indexOf(pending);\n                if (index !== -1) {\n                    pendingSnippets.splice(index, 1);\n                }\n            }));\n        }\n        return toDispose;\n    }\n\n    /**\n     * should NOT throw to prevent load errors on suggest\n     */\n    protected async loadURI(uri: string | URI, options: SnippetLoadOptions, toDispose: DisposableCollection): Promise<void> {\n        try {\n            const { content } = await this.filesystem.resolveContent(uri.toString(), { encoding: 'utf-8' });\n            if (toDispose.disposed) {\n                return;\n            }\n            const snippets = content && jsoncparser.parse(content, undefined, { disallowComments: false });\n            toDispose.push(this.fromJSON(snippets, options));\n        } catch (e) {\n            if (!FileSystemError.FileNotFound.is(e) && !FileSystemError.FileIsDirectory.is(e)) {\n                console.error(e);\n            }\n        }\n    }\n\n    fromJSON(snippets: JsonSerializedSnippets | undefined, { language, source }: SnippetLoadOptions): Disposable {\n        const toDispose = new DisposableCollection();\n        this.parseSnippets(snippets, (name, snippet) => {\n            const { prefix, body, description } = snippet;\n            const parsedBody = Array.isArray(body) ? body.join('\\n') : body;\n            const parsedPrefixes = Array.isArray(prefix) ? prefix : [prefix];\n\n            if (typeof parsedBody !== 'string') {\n                return;\n            }\n            const scopes: string[] = [];\n            if (language) {\n                if (Array.isArray(language)) {\n                    scopes.push(...language);\n                } else {\n                    scopes.push(language);\n                }\n            } else if (typeof snippet.scope === 'string') {\n                for (const rawScope of snippet.scope.split(',')) {\n                    const scope = rawScope.trim();\n                    if (scope) {\n                        scopes.push(scope);\n                    }\n                }\n            }\n            parsedPrefixes.forEach(parsedPrefix => toDispose.push(this.push({\n                scopes,\n                name,\n                prefix: parsedPrefix,\n                description,\n                body: parsedBody,\n                source\n            })));\n        });\n        return toDispose;\n    }\n    protected parseSnippets(snippets: JsonSerializedSnippets | undefined, accept: (name: string, snippet: JsonSerializedSnippet) => void): void {\n        if (typeof snippets === 'object') {\n            // eslint-disable-next-line guard-for-in\n            for (const name in snippets) {\n                const scopeOrTemplate = snippets[name];\n                if (JsonSerializedSnippet.is(scopeOrTemplate)) {\n                    accept(name, scopeOrTemplate);\n                } else {\n                    this.parseSnippets(scopeOrTemplate, accept);\n                }\n            }\n        }\n    }\n\n    push(...snippets: Snippet[]): Disposable {\n        const toDispose = new DisposableCollection();\n        for (const snippet of snippets) {\n            for (const scope of snippet.scopes) {\n                const languageSnippets = this.snippets.get(scope) || [];\n                languageSnippets.push(snippet);\n                this.snippets.set(scope, languageSnippets);\n                toDispose.push(Disposable.create(() => {\n                    const index = languageSnippets.indexOf(snippet);\n                    if (index !== -1) {\n                        languageSnippets.splice(index, 1);\n                    }\n                }));\n            }\n        }\n        return toDispose;\n    }\n\n    protected isPatternInWord(patternLow: string, patternPos: number, patternLen: number, wordLow: string, wordPos: number, wordLen: number): boolean {\n        while (patternPos < patternLen && wordPos < wordLen) {\n            if (patternLow[patternPos] === wordLow[wordPos]) {\n                patternPos += 1;\n            }\n            wordPos += 1;\n        }\n        return patternPos === patternLen; // pattern must be exhausted\n    }\n\n}\n\nexport interface SnippetLoadOptions {\n    language?: string | string[]\n    source: string\n}\n\nexport interface JsonSerializedSnippets {\n    [name: string]: JsonSerializedSnippet | { [name: string]: JsonSerializedSnippet };\n}\nexport interface JsonSerializedSnippet {\n    body: string | string[];\n    scope: string;\n    prefix: string | string[];\n    description: string;\n}\nexport namespace JsonSerializedSnippet {\n    export function is(obj: Object | undefined): obj is JsonSerializedSnippet {\n        return typeof obj === 'object' && 'body' in obj && 'prefix' in obj;\n    }\n}\n\nexport interface Snippet {\n    readonly scopes: string[]\n    readonly name: string\n    readonly prefix: string\n    readonly description: string\n    readonly body: string\n    readonly source: string\n}\n\nexport class MonacoSnippetSuggestion implements monaco.languages.CompletionItem {\n\n    readonly label: string;\n    readonly detail: string;\n    readonly sortText: string;\n    readonly noAutoAccept = true;\n    readonly kind = monaco.languages.CompletionItemKind.Snippet;\n    readonly insertTextRules = monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet;\n\n    insertText: string;\n    documentation?: monaco.IMarkdownString;\n\n    constructor(\n        protected readonly snippet: Snippet,\n        readonly range: monaco.Range\n    ) {\n        this.label = snippet.prefix;\n        this.detail = `${snippet.description || snippet.name} (${snippet.source})`;\n        this.insertText = snippet.body;\n        this.sortText = `z-${snippet.prefix}`;\n        this.range = range;\n    }\n\n    protected resolved = false;\n    resolve(): MonacoSnippetSuggestion {\n        if (!this.resolved) {\n            const codeSnippet = new monaco.snippetParser.SnippetParser().parse(this.snippet.body).toString();\n            this.documentation = { value: '```\\n' + codeSnippet + '```' };\n            this.resolved = true;\n        }\n        return this;\n    }\n\n    static compareByLabel(a: MonacoSnippetSuggestion, b: MonacoSnippetSuggestion): number {\n        return a.label > b.label ? 1 : a.label < b.label ? -1 : 0;\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { injectable, inject } from 'inversify';\nimport * as jsoncparser from 'jsonc-parser';\nimport * as plistparser from 'fast-plist';\nimport { ThemeService, BuiltinThemeProvider } from '@theia/core/lib/browser/theming';\nimport URI from '@theia/core/lib/common/uri';\nimport { Disposable, DisposableCollection } from '@theia/core/lib/common/disposable';\nimport { FileSystem } from '@theia/filesystem/lib/common/filesystem';\nimport { MonacoThemeRegistry } from './textmate/monaco-theme-registry';\nimport { getThemes, putTheme, MonacoThemeState } from './monaco-indexed-db';\n\nexport interface MonacoTheme {\n    id?: string;\n    label?: string;\n    uiTheme?: monaco.editor.BuiltinTheme;\n    description?: string;\n    uri: string;\n}\n\nexport interface MonacoThemeJson {\n    /**\n     * theme id (optional), label is used if not provided\n     */\n    id?: string;\n    label: string;\n    /**\n     * theme type, `vs-dark` if not provided\n     */\n    uiTheme?: monaco.editor.BuiltinTheme;\n    description?: string;\n    /**\n     * Follow https://code.visualstudio.com/api/extension-guides/color-theme#create-a-new-color-theme to create a custom theme.\n     */\n    json: any\n    /**\n     * Themes can include each other. It specifies how inclusions should be resolved.\n     */\n    includes?: { [includePath: string]: any }\n}\n\n@injectable()\nexport class MonacoThemingService {\n\n    @inject(FileSystem)\n    protected readonly fileSystem: FileSystem;\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    register(theme: MonacoTheme, pending: { [uri: string]: Promise<any> } = {}): Disposable {\n        const toDispose = new DisposableCollection(Disposable.create(() => { /* mark as not disposed */ }));\n        this.doRegister(theme, pending, toDispose);\n        return toDispose;\n    }\n\n    protected async doRegister(theme: MonacoTheme,\n        pending: { [uri: string]: Promise<any> },\n        toDispose: DisposableCollection\n    ): Promise<void> {\n        try {\n            const includes = {};\n            const json = await this.loadTheme(theme.uri, includes, pending, toDispose);\n            if (toDispose.disposed) {\n                return;\n            }\n            const label = theme.label || new URI(theme.uri).path.base;\n            const { id, description, uiTheme } = theme;\n            toDispose.push(MonacoThemingService.register({ id, label, description, uiTheme: uiTheme, json, includes }));\n        } catch (e) {\n            console.error('Failed to load theme from ' + theme.uri, e);\n        }\n    }\n\n    protected async loadTheme(\n        uri: string,\n        includes: { [include: string]: any },\n        pending: { [uri: string]: Promise<any> },\n        toDispose: DisposableCollection\n    ): Promise<any> {\n        /* eslint-enable @typescript-eslint/no-explicit-any */\n        const { content } = await this.fileSystem.resolveContent(uri);\n        if (toDispose.disposed) {\n            return;\n        }\n        const themeUri = new URI(uri);\n        if (themeUri.path.ext !== '.json') {\n            const value = plistparser.parse(content);\n            if (value && 'settings' in value && Array.isArray(value.settings)) {\n                return { tokenColors: value.settings };\n            }\n            throw new Error(`Problem parsing tmTheme file: ${uri}. 'settings' is not array.`);\n        }\n        const json = jsoncparser.parse(content, undefined, { disallowComments: false });\n        if ('tokenColors' in json && typeof json.tokenColors === 'string') {\n            const value = await this.doLoadTheme(themeUri, json.tokenColors, includes, pending, toDispose);\n            if (toDispose.disposed) {\n                return;\n            }\n            json.tokenColors = value.tokenColors;\n        }\n        if (json.include) {\n            includes[json.include] = await this.doLoadTheme(themeUri, json.include, includes, pending, toDispose);\n            if (toDispose.disposed) {\n                return;\n            }\n        }\n        return json;\n    }\n\n    /* eslint-disable @typescript-eslint/no-explicit-any */\n    protected doLoadTheme(\n        themeUri: URI,\n        referencedPath: string,\n        includes: { [include: string]: any },\n        pending: { [uri: string]: Promise<any> },\n        toDispose: DisposableCollection\n    ): Promise<any> {\n        const referencedUri = themeUri.parent.resolve(referencedPath).toString();\n        if (!pending[referencedUri]) {\n            pending[referencedUri] = this.loadTheme(referencedUri, includes, pending, toDispose);\n        }\n        return pending[referencedUri];\n    }\n    /* eslint-enable @typescript-eslint/no-explicit-any */\n\n    static init(): void {\n        this.updateBodyUiTheme();\n        ThemeService.get().onThemeChange(() => this.updateBodyUiTheme());\n        this.restore();\n    }\n\n    static register(theme: MonacoThemeJson): Disposable {\n        const uiTheme = theme.uiTheme || 'vs-dark';\n        const { label, description, json, includes } = theme;\n        const id = theme.id || label;\n        const cssSelector = MonacoThemingService.toCssSelector(id);\n        const data = MonacoThemeRegistry.SINGLETON.register(json, includes, cssSelector, uiTheme);\n        return MonacoThemingService.doRegister({ id, label, description, uiTheme, data });\n    }\n\n    protected static toUpdateUiTheme = new DisposableCollection();\n    protected static updateBodyUiTheme(): void {\n        this.toUpdateUiTheme.dispose();\n        const type = ThemeService.get().getCurrentTheme().type;\n        const uiTheme: monaco.editor.BuiltinTheme = type === 'hc' ? 'hc-black' : type === 'light' ? 'vs' : 'vs-dark';\n        document.body.classList.add(uiTheme);\n        this.toUpdateUiTheme.push(Disposable.create(() => document.body.classList.remove(uiTheme)));\n    }\n\n    protected static doRegister(state: MonacoThemeState): Disposable {\n        const { id, label, description, uiTheme, data } = state;\n        const type = uiTheme === 'vs' ? 'light' : uiTheme === 'vs-dark' ? 'dark' : 'hc';\n        const builtInTheme = uiTheme === 'vs' ? BuiltinThemeProvider.lightCss : BuiltinThemeProvider.darkCss;\n        return new DisposableCollection(\n            ThemeService.get().register({\n                type,\n                id,\n                label,\n                description: description,\n                editorTheme: data.name!,\n                activate(): void {\n                    builtInTheme.use();\n                },\n                deactivate(): void {\n                    builtInTheme.unuse();\n                }\n            }),\n            putTheme(state)\n        );\n    }\n\n    protected static async restore(): Promise<void> {\n        try {\n            const themes = await getThemes();\n            for (const state of themes) {\n                MonacoThemeRegistry.SINGLETON.setTheme(state.data.name!, state.data);\n                MonacoThemingService.doRegister(state);\n            }\n        } catch (e) {\n            console.error('Failed to restore monaco themes', e);\n        }\n    }\n\n    /* remove all characters that are not allowed in css */\n    protected static toCssSelector(str: string): string {\n        str = str.replace(/[^\\-a-zA-Z0-9]/g, '-');\n        if (str.charAt(0).match(/[0-9\\-]/)) {\n            str = '-' + str;\n        }\n        return str;\n    }\n\n}\n","/*---------------------------------------------------------\r\n * Copyright (C) Microsoft Corporation. All rights reserved.\r\n *--------------------------------------------------------*/\r\n'use strict';\r\nfunction parseWithLocation(content, filename, locationKeyName) {\r\n    return _parse(content, filename, locationKeyName);\r\n}\r\nexports.parseWithLocation = parseWithLocation;\r\n/**\r\n * A very fast plist parser\r\n */\r\nfunction parse(content) {\r\n    return _parse(content, null, null);\r\n}\r\nexports.parse = parse;\r\nfunction _parse(content, filename, locationKeyName) {\r\n    var len = content.length;\r\n    var pos = 0;\r\n    var line = 1;\r\n    var char = 0;\r\n    // Skip UTF8 BOM\r\n    if (len > 0 && content.charCodeAt(0) === 65279 /* BOM */) {\r\n        pos = 1;\r\n    }\r\n    function advancePosBy(by) {\r\n        if (locationKeyName === null) {\r\n            pos = pos + by;\r\n        }\r\n        else {\r\n            while (by > 0) {\r\n                var chCode = content.charCodeAt(pos);\r\n                if (chCode === 10 /* LINE_FEED */) {\r\n                    pos++;\r\n                    line++;\r\n                    char = 0;\r\n                }\r\n                else {\r\n                    pos++;\r\n                    char++;\r\n                }\r\n                by--;\r\n            }\r\n        }\r\n    }\r\n    function advancePosTo(to) {\r\n        if (locationKeyName === null) {\r\n            pos = to;\r\n        }\r\n        else {\r\n            advancePosBy(to - pos);\r\n        }\r\n    }\r\n    function skipWhitespace() {\r\n        while (pos < len) {\r\n            var chCode = content.charCodeAt(pos);\r\n            if (chCode !== 32 /* SPACE */ && chCode !== 9 /* TAB */ && chCode !== 13 /* CARRIAGE_RETURN */ && chCode !== 10 /* LINE_FEED */) {\r\n                break;\r\n            }\r\n            advancePosBy(1);\r\n        }\r\n    }\r\n    function advanceIfStartsWith(str) {\r\n        if (content.substr(pos, str.length) === str) {\r\n            advancePosBy(str.length);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    function advanceUntil(str) {\r\n        var nextOccurence = content.indexOf(str, pos);\r\n        if (nextOccurence !== -1) {\r\n            advancePosTo(nextOccurence + str.length);\r\n        }\r\n        else {\r\n            // EOF\r\n            advancePosTo(len);\r\n        }\r\n    }\r\n    function captureUntil(str) {\r\n        var nextOccurence = content.indexOf(str, pos);\r\n        if (nextOccurence !== -1) {\r\n            var r = content.substring(pos, nextOccurence);\r\n            advancePosTo(nextOccurence + str.length);\r\n            return r;\r\n        }\r\n        else {\r\n            // EOF\r\n            var r = content.substr(pos);\r\n            advancePosTo(len);\r\n            return r;\r\n        }\r\n    }\r\n    var state = 0 /* ROOT_STATE */;\r\n    var cur = null;\r\n    var stateStack = [];\r\n    var objStack = [];\r\n    var curKey = null;\r\n    function pushState(newState, newCur) {\r\n        stateStack.push(state);\r\n        objStack.push(cur);\r\n        state = newState;\r\n        cur = newCur;\r\n    }\r\n    function popState() {\r\n        state = stateStack.pop();\r\n        cur = objStack.pop();\r\n    }\r\n    function fail(msg) {\r\n        throw new Error('Near offset ' + pos + ': ' + msg + ' ~~~' + content.substr(pos, 50) + '~~~');\r\n    }\r\n    var dictState = {\r\n        enterDict: function () {\r\n            if (curKey === null) {\r\n                fail('missing <key>');\r\n            }\r\n            var newDict = {};\r\n            if (locationKeyName !== null) {\r\n                newDict[locationKeyName] = {\r\n                    filename: filename,\r\n                    line: line,\r\n                    char: char\r\n                };\r\n            }\r\n            cur[curKey] = newDict;\r\n            curKey = null;\r\n            pushState(1 /* DICT_STATE */, newDict);\r\n        },\r\n        enterArray: function () {\r\n            if (curKey === null) {\r\n                fail('missing <key>');\r\n            }\r\n            var newArr = [];\r\n            cur[curKey] = newArr;\r\n            curKey = null;\r\n            pushState(2 /* ARR_STATE */, newArr);\r\n        }\r\n    };\r\n    var arrState = {\r\n        enterDict: function () {\r\n            var newDict = {};\r\n            if (locationKeyName !== null) {\r\n                newDict[locationKeyName] = {\r\n                    filename: filename,\r\n                    line: line,\r\n                    char: char\r\n                };\r\n            }\r\n            cur.push(newDict);\r\n            pushState(1 /* DICT_STATE */, newDict);\r\n        },\r\n        enterArray: function () {\r\n            var newArr = [];\r\n            cur.push(newArr);\r\n            pushState(2 /* ARR_STATE */, newArr);\r\n        }\r\n    };\r\n    function enterDict() {\r\n        if (state === 1 /* DICT_STATE */) {\r\n            dictState.enterDict();\r\n        }\r\n        else if (state === 2 /* ARR_STATE */) {\r\n            arrState.enterDict();\r\n        }\r\n        else {\r\n            cur = {};\r\n            if (locationKeyName !== null) {\r\n                cur[locationKeyName] = {\r\n                    filename: filename,\r\n                    line: line,\r\n                    char: char\r\n                };\r\n            }\r\n            pushState(1 /* DICT_STATE */, cur);\r\n        }\r\n    }\r\n    function leaveDict() {\r\n        if (state === 1 /* DICT_STATE */) {\r\n            popState();\r\n        }\r\n        else if (state === 2 /* ARR_STATE */) {\r\n            fail('unexpected </dict>');\r\n        }\r\n        else {\r\n            fail('unexpected </dict>');\r\n        }\r\n    }\r\n    function enterArray() {\r\n        if (state === 1 /* DICT_STATE */) {\r\n            dictState.enterArray();\r\n        }\r\n        else if (state === 2 /* ARR_STATE */) {\r\n            arrState.enterArray();\r\n        }\r\n        else {\r\n            cur = [];\r\n            pushState(2 /* ARR_STATE */, cur);\r\n        }\r\n    }\r\n    function leaveArray() {\r\n        if (state === 1 /* DICT_STATE */) {\r\n            fail('unexpected </array>');\r\n        }\r\n        else if (state === 2 /* ARR_STATE */) {\r\n            popState();\r\n        }\r\n        else {\r\n            fail('unexpected </array>');\r\n        }\r\n    }\r\n    function acceptKey(val) {\r\n        if (state === 1 /* DICT_STATE */) {\r\n            if (curKey !== null) {\r\n                fail('too many <key>');\r\n            }\r\n            curKey = val;\r\n        }\r\n        else if (state === 2 /* ARR_STATE */) {\r\n            fail('unexpected <key>');\r\n        }\r\n        else {\r\n            fail('unexpected <key>');\r\n        }\r\n    }\r\n    function acceptString(val) {\r\n        if (state === 1 /* DICT_STATE */) {\r\n            if (curKey === null) {\r\n                fail('missing <key>');\r\n            }\r\n            cur[curKey] = val;\r\n            curKey = null;\r\n        }\r\n        else if (state === 2 /* ARR_STATE */) {\r\n            cur.push(val);\r\n        }\r\n        else {\r\n            cur = val;\r\n        }\r\n    }\r\n    function acceptReal(val) {\r\n        if (isNaN(val)) {\r\n            fail('cannot parse float');\r\n        }\r\n        if (state === 1 /* DICT_STATE */) {\r\n            if (curKey === null) {\r\n                fail('missing <key>');\r\n            }\r\n            cur[curKey] = val;\r\n            curKey = null;\r\n        }\r\n        else if (state === 2 /* ARR_STATE */) {\r\n            cur.push(val);\r\n        }\r\n        else {\r\n            cur = val;\r\n        }\r\n    }\r\n    function acceptInteger(val) {\r\n        if (isNaN(val)) {\r\n            fail('cannot parse integer');\r\n        }\r\n        if (state === 1 /* DICT_STATE */) {\r\n            if (curKey === null) {\r\n                fail('missing <key>');\r\n            }\r\n            cur[curKey] = val;\r\n            curKey = null;\r\n        }\r\n        else if (state === 2 /* ARR_STATE */) {\r\n            cur.push(val);\r\n        }\r\n        else {\r\n            cur = val;\r\n        }\r\n    }\r\n    function acceptDate(val) {\r\n        if (state === 1 /* DICT_STATE */) {\r\n            if (curKey === null) {\r\n                fail('missing <key>');\r\n            }\r\n            cur[curKey] = val;\r\n            curKey = null;\r\n        }\r\n        else if (state === 2 /* ARR_STATE */) {\r\n            cur.push(val);\r\n        }\r\n        else {\r\n            cur = val;\r\n        }\r\n    }\r\n    function acceptData(val) {\r\n        if (state === 1 /* DICT_STATE */) {\r\n            if (curKey === null) {\r\n                fail('missing <key>');\r\n            }\r\n            cur[curKey] = val;\r\n            curKey = null;\r\n        }\r\n        else if (state === 2 /* ARR_STATE */) {\r\n            cur.push(val);\r\n        }\r\n        else {\r\n            cur = val;\r\n        }\r\n    }\r\n    function acceptBool(val) {\r\n        if (state === 1 /* DICT_STATE */) {\r\n            if (curKey === null) {\r\n                fail('missing <key>');\r\n            }\r\n            cur[curKey] = val;\r\n            curKey = null;\r\n        }\r\n        else if (state === 2 /* ARR_STATE */) {\r\n            cur.push(val);\r\n        }\r\n        else {\r\n            cur = val;\r\n        }\r\n    }\r\n    function escapeVal(str) {\r\n        return str.replace(/&#([0-9]+);/g, function (_, m0) {\r\n            return String.fromCodePoint(parseInt(m0, 10));\r\n        }).replace(/&#x([0-9a-f]+);/g, function (_, m0) {\r\n            return String.fromCodePoint(parseInt(m0, 16));\r\n        }).replace(/&amp;|&lt;|&gt;|&quot;|&apos;/g, function (_) {\r\n            switch (_) {\r\n                case '&amp;': return '&';\r\n                case '&lt;': return '<';\r\n                case '&gt;': return '>';\r\n                case '&quot;': return '\"';\r\n                case '&apos;': return '\\'';\r\n            }\r\n            return _;\r\n        });\r\n    }\r\n    function parseOpenTag() {\r\n        var r = captureUntil('>');\r\n        var isClosed = false;\r\n        if (r.charCodeAt(r.length - 1) === 47 /* SLASH */) {\r\n            isClosed = true;\r\n            r = r.substring(0, r.length - 1);\r\n        }\r\n        return {\r\n            name: r.trim(),\r\n            isClosed: isClosed\r\n        };\r\n    }\r\n    function parseTagValue(tag) {\r\n        if (tag.isClosed) {\r\n            return '';\r\n        }\r\n        var val = captureUntil('</');\r\n        advanceUntil('>');\r\n        return escapeVal(val);\r\n    }\r\n    while (pos < len) {\r\n        skipWhitespace();\r\n        if (pos >= len) {\r\n            break;\r\n        }\r\n        var chCode = content.charCodeAt(pos);\r\n        advancePosBy(1);\r\n        if (chCode !== 60 /* LESS_THAN */) {\r\n            fail('expected <');\r\n        }\r\n        if (pos >= len) {\r\n            fail('unexpected end of input');\r\n        }\r\n        var peekChCode = content.charCodeAt(pos);\r\n        if (peekChCode === 63 /* QUESTION_MARK */) {\r\n            advancePosBy(1);\r\n            advanceUntil('?>');\r\n            continue;\r\n        }\r\n        if (peekChCode === 33 /* EXCLAMATION_MARK */) {\r\n            advancePosBy(1);\r\n            if (advanceIfStartsWith('--')) {\r\n                advanceUntil('-->');\r\n                continue;\r\n            }\r\n            advanceUntil('>');\r\n            continue;\r\n        }\r\n        if (peekChCode === 47 /* SLASH */) {\r\n            advancePosBy(1);\r\n            skipWhitespace();\r\n            if (advanceIfStartsWith('plist')) {\r\n                advanceUntil('>');\r\n                continue;\r\n            }\r\n            if (advanceIfStartsWith('dict')) {\r\n                advanceUntil('>');\r\n                leaveDict();\r\n                continue;\r\n            }\r\n            if (advanceIfStartsWith('array')) {\r\n                advanceUntil('>');\r\n                leaveArray();\r\n                continue;\r\n            }\r\n            fail('unexpected closed tag');\r\n        }\r\n        var tag = parseOpenTag();\r\n        switch (tag.name) {\r\n            case 'dict':\r\n                enterDict();\r\n                if (tag.isClosed) {\r\n                    leaveDict();\r\n                }\r\n                continue;\r\n            case 'array':\r\n                enterArray();\r\n                if (tag.isClosed) {\r\n                    leaveArray();\r\n                }\r\n                continue;\r\n            case 'key':\r\n                acceptKey(parseTagValue(tag));\r\n                continue;\r\n            case 'string':\r\n                acceptString(parseTagValue(tag));\r\n                continue;\r\n            case 'real':\r\n                acceptReal(parseFloat(parseTagValue(tag)));\r\n                continue;\r\n            case 'integer':\r\n                acceptInteger(parseInt(parseTagValue(tag), 10));\r\n                continue;\r\n            case 'date':\r\n                acceptDate(new Date(parseTagValue(tag)));\r\n                continue;\r\n            case 'data':\r\n                acceptData(parseTagValue(tag));\r\n                continue;\r\n            case 'true':\r\n                parseTagValue(tag);\r\n                acceptBool(true);\r\n                continue;\r\n            case 'false':\r\n                parseTagValue(tag);\r\n                acceptBool(false);\r\n                continue;\r\n        }\r\n        if (/^plist/.test(tag.name)) {\r\n            continue;\r\n        }\r\n        fail('unexpected opened tag ' + tag.name);\r\n    }\r\n    return cur;\r\n}\r\n//# sourceMappingURL=main.js.map","const instanceOfAny = (object, constructors) => constructors.some(c => object instanceof c);\n\nlet idbProxyableTypes;\r\nlet cursorAdvanceMethods;\r\n// This is a function to prevent it throwing up in node environments.\r\nfunction getIdbProxyableTypes() {\r\n    return (idbProxyableTypes ||\r\n        (idbProxyableTypes = [\r\n            IDBDatabase,\r\n            IDBObjectStore,\r\n            IDBIndex,\r\n            IDBCursor,\r\n            IDBTransaction,\r\n        ]));\r\n}\r\n// This is a function to prevent it throwing up in node environments.\r\nfunction getCursorAdvanceMethods() {\r\n    return (cursorAdvanceMethods ||\r\n        (cursorAdvanceMethods = [\r\n            IDBCursor.prototype.advance,\r\n            IDBCursor.prototype.continue,\r\n            IDBCursor.prototype.continuePrimaryKey,\r\n        ]));\r\n}\r\nconst cursorRequestMap = new WeakMap();\r\nconst transactionDoneMap = new WeakMap();\r\nconst transactionStoreNamesMap = new WeakMap();\r\nconst transformCache = new WeakMap();\r\nconst reverseTransformCache = new WeakMap();\r\nfunction promisifyRequest(request) {\r\n    const promise = new Promise((resolve, reject) => {\r\n        const unlisten = () => {\r\n            request.removeEventListener('success', success);\r\n            request.removeEventListener('error', error);\r\n        };\r\n        const success = () => {\r\n            resolve(wrap(request.result));\r\n            unlisten();\r\n        };\r\n        const error = () => {\r\n            reject(request.error);\r\n            unlisten();\r\n        };\r\n        request.addEventListener('success', success);\r\n        request.addEventListener('error', error);\r\n    });\r\n    promise\r\n        .then(value => {\r\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\r\n        // (see wrapFunction).\r\n        if (value instanceof IDBCursor) {\r\n            cursorRequestMap.set(value, request);\r\n        }\r\n        // Catching to avoid \"Uncaught Promise exceptions\"\r\n    })\r\n        .catch(() => { });\r\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\r\n    // is because we create many promises from a single IDBRequest.\r\n    reverseTransformCache.set(promise, request);\r\n    return promise;\r\n}\r\nfunction cacheDonePromiseForTransaction(tx) {\r\n    // Early bail if we've already created a done promise for this transaction.\r\n    if (transactionDoneMap.has(tx))\r\n        return;\r\n    const done = new Promise((resolve, reject) => {\r\n        const unlisten = () => {\r\n            tx.removeEventListener('complete', complete);\r\n            tx.removeEventListener('error', error);\r\n            tx.removeEventListener('abort', error);\r\n        };\r\n        const complete = () => {\r\n            resolve();\r\n            unlisten();\r\n        };\r\n        const error = () => {\r\n            reject(tx.error);\r\n            unlisten();\r\n        };\r\n        tx.addEventListener('complete', complete);\r\n        tx.addEventListener('error', error);\r\n        tx.addEventListener('abort', error);\r\n    });\r\n    // Cache it for later retrieval.\r\n    transactionDoneMap.set(tx, done);\r\n}\r\nlet idbProxyTraps = {\r\n    get(target, prop, receiver) {\r\n        if (target instanceof IDBTransaction) {\r\n            // Special handling for transaction.done.\r\n            if (prop === 'done')\r\n                return transactionDoneMap.get(target);\r\n            // Polyfill for objectStoreNames because of Edge.\r\n            if (prop === 'objectStoreNames') {\r\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\r\n            }\r\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\r\n            if (prop === 'store') {\r\n                return receiver.objectStoreNames[1]\r\n                    ? undefined\r\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\r\n            }\r\n        }\r\n        // Else transform whatever we get back.\r\n        return wrap(target[prop]);\r\n    },\r\n    has(target, prop) {\r\n        if (target instanceof IDBTransaction &&\r\n            (prop === 'done' || prop === 'store')) {\r\n            return true;\r\n        }\r\n        return prop in target;\r\n    },\r\n};\r\nfunction addTraps(callback) {\r\n    idbProxyTraps = callback(idbProxyTraps);\r\n}\r\nfunction wrapFunction(func) {\r\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\r\n    // only create one new func per func.\r\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\r\n    if (func === IDBDatabase.prototype.transaction &&\r\n        !('objectStoreNames' in IDBTransaction.prototype)) {\r\n        return function (storeNames, ...args) {\r\n            const tx = func.call(unwrap(this), storeNames, ...args);\r\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\r\n            return wrap(tx);\r\n        };\r\n    }\r\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\r\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\r\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\r\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\r\n    // undefined if the end of the cursor has been reached.\r\n    if (getCursorAdvanceMethods().includes(func)) {\r\n        return function (...args) {\r\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\r\n            // the original object.\r\n            func.apply(unwrap(this), args);\r\n            return wrap(cursorRequestMap.get(this));\r\n        };\r\n    }\r\n    return function (...args) {\r\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\r\n        // the original object.\r\n        return wrap(func.apply(unwrap(this), args));\r\n    };\r\n}\r\nfunction transformCachableValue(value) {\r\n    if (typeof value === 'function')\r\n        return wrapFunction(value);\r\n    // This doesn't return, it just creates a 'done' promise for the transaction,\r\n    // which is later returned for transaction.done (see idbObjectHandler).\r\n    if (value instanceof IDBTransaction)\r\n        cacheDonePromiseForTransaction(value);\r\n    if (instanceOfAny(value, getIdbProxyableTypes()))\r\n        return new Proxy(value, idbProxyTraps);\r\n    // Return the same value back if we're not going to transform it.\r\n    return value;\r\n}\r\nfunction wrap(value) {\r\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\r\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\r\n    if (value instanceof IDBRequest)\r\n        return promisifyRequest(value);\r\n    // If we've already transformed this value before, reuse the transformed value.\r\n    // This is faster, but it also provides object equality.\r\n    if (transformCache.has(value))\r\n        return transformCache.get(value);\r\n    const newValue = transformCachableValue(value);\r\n    // Not all types are transformed.\r\n    // These may be primitive types, so they can't be WeakMap keys.\r\n    if (newValue !== value) {\r\n        transformCache.set(value, newValue);\r\n        reverseTransformCache.set(newValue, value);\r\n    }\r\n    return newValue;\r\n}\r\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { wrap as a, addTraps as b, instanceOfAny as c, reverseTransformCache as d, unwrap as e };\n","import { a as wrap, b as addTraps } from './chunk.js';\nexport { e as unwrap, a as wrap } from './chunk.js';\n\n/**\r\n * Open a database.\r\n *\r\n * @param name Name of the database.\r\n * @param version Schema version.\r\n * @param callbacks Additional callbacks.\r\n */\r\nfunction openDB(name, version, { blocked, upgrade, blocking } = {}) {\r\n    const request = indexedDB.open(name, version);\r\n    const openPromise = wrap(request);\r\n    if (upgrade) {\r\n        request.addEventListener('upgradeneeded', event => {\r\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction));\r\n        });\r\n    }\r\n    if (blocked)\r\n        request.addEventListener('blocked', () => blocked());\r\n    if (blocking) {\r\n        openPromise.then(db => db.addEventListener('versionchange', blocking)).catch(() => { });\r\n    }\r\n    return openPromise;\r\n}\r\n/**\r\n * Delete a database.\r\n *\r\n * @param name Name of the database.\r\n */\r\nfunction deleteDB(name, { blocked } = {}) {\r\n    const request = indexedDB.deleteDatabase(name);\r\n    if (blocked)\r\n        request.addEventListener('blocked', () => blocked());\r\n    return wrap(request).then(() => undefined);\r\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\r\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\r\nconst cachedMethods = new Map();\r\nfunction getMethod(target, prop) {\r\n    if (!(target instanceof IDBDatabase &&\r\n        !(prop in target) &&\r\n        typeof prop === 'string')) {\r\n        return;\r\n    }\r\n    if (cachedMethods.get(prop))\r\n        return cachedMethods.get(prop);\r\n    const targetFuncName = prop.replace(/FromIndex$/, '');\r\n    const useIndex = prop !== targetFuncName;\r\n    const isWrite = writeMethods.includes(targetFuncName);\r\n    if (\r\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\r\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\r\n        !(isWrite || readMethods.includes(targetFuncName))) {\r\n        return;\r\n    }\r\n    const method = async function (storeName, ...args) {\r\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\r\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\r\n        let target = tx.store;\r\n        if (useIndex)\r\n            target = target.index(args.shift());\r\n        const returnVal = target[targetFuncName](...args);\r\n        if (isWrite)\r\n            await tx.done;\r\n        return returnVal;\r\n    };\r\n    cachedMethods.set(prop, method);\r\n    return method;\r\n}\r\naddTraps(oldTraps => ({\r\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\r\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\r\n}));\n\nexport { openDB, deleteDB };\n"],"sourceRoot":""}