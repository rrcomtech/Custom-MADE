{"version":3,"sources":["webpack:///../node_modules/@theia/navigator/src/browser/index.ts","webpack:///../node_modules/@theia/navigator/src/browser/navigator-decorator-service.ts","webpack:///../node_modules/@theia/scm/src/browser/decorations/scm-decorations-service.ts","webpack:///../node_modules/@theia/scm/src/browser/dirty-diff/content-lines.ts","webpack:///../node_modules/@theia/scm/src/browser/dirty-diff/diff-computer.ts","webpack:///../node_modules/@theia/scm/src/browser/dirty-diff/dirty-diff-decorator.ts","webpack:///../node_modules/@theia/scm/src/browser/scm-contribution.ts","webpack:///../node_modules/@theia/scm/src/browser/scm-quick-open-service.ts","webpack:///../../src/convert/xml.js"],"names":["convertChangesToXML","changes","i","length","change","added","removed","ret","push","escapeHTML","value","join","s","n","replace"],"mappings":"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","file":"38.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport * from './navigator-model';\nexport * from './navigator-widget';\nexport * from './navigator-decorator-service';\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable, named } from 'inversify';\nimport { ContributionProvider } from '@theia/core/lib/common/contribution-provider';\nimport { TreeDecorator, AbstractTreeDecoratorService } from '@theia/core/lib/browser/tree/tree-decorator';\n\n/**\n * Symbol for all decorators that would like to contribute into the navigator.\n */\nexport const NavigatorTreeDecorator = Symbol('NavigatorTreeDecorator');\n\n/**\n * Decorator service for the navigator.\n */\n@injectable()\nexport class NavigatorDecoratorService extends AbstractTreeDecoratorService {\n\n    constructor(@inject(ContributionProvider) @named(NavigatorTreeDecorator) protected readonly contributions: ContributionProvider<TreeDecorator>) {\n        super(contributions.getContributions());\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2019 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport { Emitter, Event, ResourceProvider } from '@theia/core';\nimport { DirtyDiffDecorator } from '../dirty-diff/dirty-diff-decorator';\nimport { DiffComputer } from '../dirty-diff/diff-computer';\nimport { ContentLines } from '../dirty-diff/content-lines';\nimport { EditorManager, TextEditor } from '@theia/editor/lib/browser';\nimport { ScmService } from '../scm-service';\n\nexport interface DecorationData {\n    letter?: string;\n    title?: string;\n    color?: { id: string };\n    priority?: number;\n    bubble?: boolean;\n    source?: string;\n}\n\n@injectable()\nexport class ScmDecorationsService {\n    private readonly NavigatorDecorationsEmitter = new Emitter<Map<string, DecorationData>>();\n    private readonly diffComputer: DiffComputer;\n    private dirtyState: boolean = true;\n\n    constructor(@inject(DirtyDiffDecorator) protected readonly decorator: DirtyDiffDecorator,\n        @inject(ScmService) protected readonly scmService: ScmService,\n        @inject(EditorManager) protected readonly editorManager: EditorManager,\n        @inject(ResourceProvider) protected readonly resourceProvider: ResourceProvider) {\n        this.diffComputer = new DiffComputer();\n        this.editorManager.onCreated(async editor => this.applyEditorDecorations(editor.editor));\n        this.scmService.onDidAddRepository(repository => repository.provider.onDidChange(() => {\n            const editor = this.editorManager.currentEditor;\n            if (editor) {\n                if (this.dirtyState) {\n                    this.applyEditorDecorations(editor.editor);\n                    this.dirtyState = false;\n                } else {\n                    /** onDidChange event might be called several times one after another, so need to prevent repeated events. */\n                    setTimeout(() => {\n                        this.dirtyState = true;\n                    }, 500);\n                }\n            }\n        }));\n        this.scmService.onDidChangeSelectedRepository(() => {\n            const editor = this.editorManager.currentEditor;\n            if (editor) {\n                this.applyEditorDecorations(editor.editor);\n            }\n        });\n    }\n\n    async applyEditorDecorations(editor: TextEditor): Promise<void> {\n        const currentRepo = this.scmService.selectedRepository;\n        if (currentRepo) {\n            try {\n                const uri = editor.uri.withScheme(currentRepo.provider.id).withQuery(`{\"ref\":\"\", \"path\":\"${editor.uri.path.toString()}\"}`);\n                const previousResource = await this.resourceProvider(uri);\n                const previousContent = await previousResource.readContents();\n                const previousLines = ContentLines.fromString(previousContent);\n                const currentResource = await this.resourceProvider(editor.uri);\n                const currentContent = await currentResource.readContents();\n                const currentLines = ContentLines.fromString(currentContent);\n                const { added, removed, modified } = this.diffComputer.computeDirtyDiff(ContentLines.arrayLike(previousLines), ContentLines.arrayLike(currentLines));\n                this.decorator.applyDecorations({ editor: editor, added, removed, modified });\n                currentResource.dispose();\n                previousResource.dispose();\n            } catch (e) {\n                // Scm resource may not be found, do nothing.\n            }\n        }\n    }\n\n    get onNavigatorDecorationsChanged(): Event<Map<string, DecorationData>> {\n        return this.NavigatorDecorationsEmitter.event;\n    }\n\n    fireNavigatorDecorationsChanged(data: Map<string, DecorationData>): void {\n        this.NavigatorDecorationsEmitter.fire(data);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport interface ContentLines extends ArrayLike<string> {\n    readonly length: number,\n    getLineContent: (line: number) => string,\n}\n\nexport interface ContentLinesArrayLike extends ContentLines, ArrayLike<string> {\n    [Symbol.iterator]: () => IterableIterator<string>,\n    readonly [n: number]: string;\n}\n\nexport namespace ContentLines {\n    const NL = '\\n'.charCodeAt(0);\n    const CR = '\\r'.charCodeAt(0);\n\n    export function fromString(content: string): ContentLines {\n        const computeLineStarts: (s: string) => number[] = s => {\n            const result: number[] = [0];\n            for (let i = 0; i < s.length; i++) {\n                const chr = s.charCodeAt(i);\n                if (chr === CR) {\n                    if (i + 1 < s.length && s.charCodeAt(i + 1) === NL) {\n                        result[result.length] = i + 2;\n                        i++;\n                    } else {\n                        result[result.length] = i + 1;\n                    }\n                } else if (chr === NL) {\n                    result[result.length] = i + 1;\n                }\n            }\n            return result;\n        };\n        const lineStarts = computeLineStarts(content);\n\n        return {\n            length: lineStarts.length,\n            getLineContent: line => {\n                if (line >= lineStarts.length) {\n                    throw new Error('line index out of bounds');\n                }\n                const start = lineStarts[line];\n                let end = (line === lineStarts.length - 1) ? undefined : lineStarts[line + 1] - 1;\n                if (!!end && content.charCodeAt(end - 1) === CR) {\n                    end--; // ignore CR at the end\n                }\n                const lineContent = content.substring(start, end);\n                return lineContent;\n            }\n        };\n    }\n\n    export function arrayLike(lines: ContentLines): ContentLinesArrayLike {\n        return new Proxy(lines as ContentLines, getProxyHandler()) as ContentLinesArrayLike;\n    }\n\n    function getProxyHandler(): ProxyHandler<ContentLinesArrayLike> {\n        return {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            get(target: ContentLines, p: PropertyKey): any {\n                switch (p) {\n                    case 'prototype':\n                        return undefined;\n                    case 'length':\n                        return target.length;\n                    case 'slice':\n                        return (start?: number, end?: number) => {\n                            if (start !== undefined) {\n                                return [start, (end !== undefined ? end - 1 : target.length - 1)];\n                            }\n                            return [0, target.length - 1];\n                        };\n                    case Symbol.iterator:\n                        return function* (): IterableIterator<string> {\n                            for (let i = 0; i < target.length; i++) {\n                                yield target.getLineContent(i);\n                            }\n                        };\n                }\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                const index = Number.parseInt(p as any);\n                if (Number.isInteger(index)) {\n                    if (index >= 0 && index < target.length) {\n                        const value = target.getLineContent(index);\n                        if (value === undefined) {\n                            console.log(target);\n                        }\n                        return value;\n                    } else {\n                        return undefined;\n                    }\n                }\n                throw new Error(`get ${String(p)} not implemented`);\n            }\n        };\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport * as jsdiff from 'diff';\nimport { ContentLinesArrayLike } from './content-lines';\n\nexport class DiffComputer {\n\n    computeDiff(previous: ContentLinesArrayLike, current: ContentLinesArrayLike): DiffResult[] {\n        const diffResult = diffArrays(previous, current);\n        return diffResult;\n    }\n\n    computeDirtyDiff(previous: ContentLinesArrayLike, current: ContentLinesArrayLike): DirtyDiff {\n        const added: LineRange[] = [];\n        const removed: number[] = [];\n        const modified: LineRange[] = [];\n        const changes = this.computeDiff(previous, current);\n        let lastLine = -1;\n        for (let i = 0; i < changes.length; i++) {\n            const change = changes[i];\n            const next = changes[i + 1];\n            if (change.added) {\n                // case: addition\n                const start = lastLine + 1;\n                const end = lastLine + change.count!;\n                added.push(<LineRange>{ start, end });\n                lastLine = end;\n            } else if (change.removed && next && next.added) {\n                const isFirstChange = i === 0;\n                const isLastChange = i === changes.length - 2;\n                const isNextEmptyLine = next.value.length > 0 && current[next.value[0]].length === 0;\n                const isPrevEmptyLine = change.value.length > 0 && previous[change.value[0]].length === 0;\n\n                if (isFirstChange && isNextEmptyLine) {\n                    // special case: removing at the beginning\n                    removed.push(0);\n                } else if (isFirstChange && isPrevEmptyLine) {\n                    // special case: adding at the beginning\n                    const start = 0;\n                    const end = next.count! - 1;\n                    added.push(<LineRange>{ start, end });\n                    lastLine = end;\n                } else if (isLastChange && isNextEmptyLine) {\n                    removed.push(lastLine + 1 /* = empty line */);\n                } else {\n                    // default case is a modification\n                    const start = lastLine + 1;\n                    const end = lastLine + next.count!;\n                    modified.push(<LineRange>{ start, end });\n                    lastLine = end;\n                }\n                i++; // consume next eagerly\n            } else if (change.removed && !(next && next.added)) {\n                removed.push(Math.max(0, lastLine));\n            } else {\n                lastLine += change.count!;\n            }\n        }\n        return <DirtyDiff>{ added, removed, modified };\n    }\n\n}\n\nclass ArrayDiff extends jsdiff.Diff {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    tokenize(value: any): any {\n        return value;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    join(value: any): any {\n        return value;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    removeEmpty(value: any): any {\n        return value;\n    }\n}\n\nconst arrayDiff = new ArrayDiff();\n\n/**\n * Computes diff without copying data.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction diffArrays(oldArr: ContentLinesArrayLike, newArr: ContentLinesArrayLike): DiffResult[] {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return arrayDiff.diff(oldArr as any, newArr as any) as any;\n}\n\nexport interface DiffResult {\n    value: [number, number];\n    count?: number;\n    added?: boolean;\n    removed?: boolean;\n}\n\nexport interface DirtyDiff {\n    /**\n     * Lines added by comparison to previous revision.\n     */\n    readonly added: LineRange[];\n    /**\n     * Lines, after which lines were removed by comparison to previous revision.\n     */\n    readonly removed: number[];\n    /**\n     * Lines modified by comparison to previous revision.\n     */\n    readonly modified: LineRange[];\n}\n\nexport interface LineRange {\n    start: number;\n    end: number;\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from 'inversify';\nimport {\n    Range,\n    Position,\n    EditorDecoration,\n    EditorDecorationOptions,\n    OverviewRulerLane,\n    EditorDecorator,\n    TextEditor,\n    MinimapPosition\n} from '@theia/editor/lib/browser';\nimport { DirtyDiff, LineRange } from './diff-computer';\n\nexport enum DirtyDiffDecorationType {\n    AddedLine = 'dirty-diff-added-line',\n    RemovedLine = 'dirty-diff-removed-line',\n    ModifiedLine = 'dirty-diff-modified-line',\n}\n\nconst AddedLineDecoration = <EditorDecorationOptions>{\n    linesDecorationsClassName: 'dirty-diff-glyph dirty-diff-added-line',\n    overviewRuler: {\n        color: 'editorOverviewRuler.addedForeground',\n        position: OverviewRulerLane.Left,\n    },\n    minimap: {\n        color: 'minimapGutter.addedBackground',\n        position: MinimapPosition.Gutter\n    },\n    isWholeLine: true\n};\n\nconst RemovedLineDecoration = <EditorDecorationOptions>{\n    linesDecorationsClassName: 'dirty-diff-glyph dirty-diff-removed-line',\n    overviewRuler: {\n        color: 'editorOverviewRuler.deletedForeground',\n        position: OverviewRulerLane.Left,\n    },\n    minimap: {\n        color: 'minimapGutter.deletedBackground',\n        position: MinimapPosition.Gutter\n    },\n    isWholeLine: false\n};\n\nconst ModifiedLineDecoration = <EditorDecorationOptions>{\n    linesDecorationsClassName: 'dirty-diff-glyph dirty-diff-modified-line',\n    overviewRuler: {\n        color: 'editorOverviewRuler.modifiedForeground',\n        position: OverviewRulerLane.Left,\n    },\n    minimap: {\n        color: 'minimapGutter.modifiedBackground',\n        position: MinimapPosition.Gutter\n    },\n    isWholeLine: true\n};\n\nexport interface DirtyDiffUpdate extends DirtyDiff {\n    readonly editor: TextEditor;\n}\n\n@injectable()\nexport class DirtyDiffDecorator extends EditorDecorator {\n\n    applyDecorations(update: DirtyDiffUpdate): void {\n        const modifications = update.modified.map(range => this.toDeltaDecoration(range, ModifiedLineDecoration));\n        const additions = update.added.map(range => this.toDeltaDecoration(range, AddedLineDecoration));\n        const removals = update.removed.map(line => this.toDeltaDecoration(line, RemovedLineDecoration));\n        const decorations = [...modifications, ...additions, ...removals];\n        this.setDecorations(update.editor, decorations);\n    }\n\n    protected toDeltaDecoration(from: LineRange | number, options: EditorDecorationOptions): EditorDecoration {\n        const [start, end] = (typeof from === 'number') ? [from, from] : [from.start, from.end];\n        const range = Range.create(Position.create(start, 0), Position.create(end, 0));\n        return { range, options };\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2019 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { inject, injectable, postConstruct } from 'inversify';\nimport {\n    AbstractViewContribution,\n    FrontendApplicationContribution, LabelProvider,\n    QuickOpenService,\n    StatusBar,\n    StatusBarAlignment,\n    StatusBarEntry,\n    KeybindingRegistry,\n    ViewContainerTitleOptions\n} from '@theia/core/lib/browser';\nimport { CommandRegistry, Disposable, DisposableCollection, CommandService } from '@theia/core/lib/common';\nimport { ContextKeyService, ContextKey } from '@theia/core/lib/browser/context-key-service';\nimport { ScmService } from './scm-service';\nimport { ScmWidget } from '../browser/scm-widget';\nimport URI from '@theia/core/lib/common/uri';\nimport { ScmQuickOpenService } from './scm-quick-open-service';\nimport { ScmRepository } from './scm-repository';\nimport { ColorContribution } from '@theia/core/lib/browser/color-application-contribution';\nimport { ColorRegistry, Color } from '@theia/core/lib/browser/color-registry';\n\nexport const SCM_WIDGET_FACTORY_ID = ScmWidget.ID;\nexport const SCM_VIEW_CONTAINER_ID = 'scm-view-container';\nexport const SCM_VIEW_CONTAINER_TITLE_OPTIONS: ViewContainerTitleOptions = {\n    label: 'Source Control',\n    iconClass: 'scm-tab-icon',\n    closeable: true\n};\n\nexport namespace SCM_COMMANDS {\n    export const CHANGE_REPOSITORY = {\n        id: 'scm.change.repository',\n        category: 'SCM',\n        label: 'Change Repository...'\n    };\n    export const ACCEPT_INPUT = {\n        id: 'scm.acceptInput'\n    };\n}\n\n@injectable()\nexport class ScmContribution extends AbstractViewContribution<ScmWidget> implements FrontendApplicationContribution, ColorContribution {\n\n    @inject(StatusBar) protected readonly statusBar: StatusBar;\n    @inject(ScmService) protected readonly scmService: ScmService;\n    @inject(QuickOpenService) protected readonly quickOpenService: QuickOpenService;\n    @inject(ScmQuickOpenService) protected readonly scmQuickOpenService: ScmQuickOpenService;\n    @inject(LabelProvider) protected readonly labelProvider: LabelProvider;\n    @inject(CommandService) protected readonly commands: CommandService;\n    @inject(ContextKeyService) protected readonly contextKeys: ContextKeyService;\n\n    protected scmFocus: ContextKey<boolean>;\n\n    constructor() {\n        super({\n            viewContainerId: SCM_VIEW_CONTAINER_ID,\n            widgetId: SCM_WIDGET_FACTORY_ID,\n            widgetName: 'Source Control',\n            defaultWidgetOptions: {\n                area: 'left',\n                rank: 300\n            },\n            toggleCommandId: 'scmView:toggle',\n            toggleKeybinding: 'ctrlcmd+shift+g'\n        });\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this.scmFocus = this.contextKeys.createKey('scmFocus', false);\n    }\n\n    async initializeLayout(): Promise<void> {\n        await this.openView();\n    }\n\n    onStart(): void {\n        this.updateStatusBar();\n        this.scmService.onDidAddRepository(() => this.updateStatusBar());\n        this.scmService.onDidRemoveRepository(() => this.updateStatusBar());\n        this.scmService.onDidChangeSelectedRepository(() => this.updateStatusBar());\n        this.scmService.onDidChangeStatusBarCommands(() => this.updateStatusBar());\n        this.labelProvider.onDidChange(() => this.updateStatusBar());\n\n        this.updateContextKeys();\n        this.shell.currentChanged.connect(() => this.updateContextKeys());\n    }\n\n    protected updateContextKeys(): void {\n        this.scmFocus.set(this.shell.currentWidget instanceof ScmWidget);\n    }\n\n    registerCommands(commandRegistry: CommandRegistry): void {\n        super.registerCommands(commandRegistry);\n        commandRegistry.registerCommand(SCM_COMMANDS.CHANGE_REPOSITORY, {\n            execute: () => this.scmQuickOpenService.changeRepository(),\n            isEnabled: () => this.scmService.repositories.length > 1\n        });\n        commandRegistry.registerCommand(SCM_COMMANDS.ACCEPT_INPUT, {\n            execute: () => this.acceptInput(),\n            isEnabled: () => !!this.scmFocus.get() && !!this.acceptInputCommand()\n        });\n    }\n\n    registerKeybindings(keybindings: KeybindingRegistry): void {\n        super.registerKeybindings(keybindings);\n        keybindings.registerKeybinding({\n            command: SCM_COMMANDS.ACCEPT_INPUT.id,\n            keybinding: 'ctrlcmd+enter',\n            when: 'scmFocus'\n        });\n    }\n\n    protected async acceptInput(): Promise<void> {\n        const command = this.acceptInputCommand();\n        if (command) {\n            await this.commands.executeCommand(command.command, command.repository);\n        }\n    }\n    protected acceptInputCommand(): {\n        command: string\n        repository: ScmRepository\n    } | undefined {\n        const repository = this.scmService.selectedRepository;\n        if (!repository) {\n            return undefined;\n        }\n        const command = repository.provider.acceptInputCommand;\n        if (!command || !command.command) {\n            return undefined;\n        }\n        return {\n            command: command.command,\n            repository\n        };\n    }\n\n    protected readonly statusBarDisposable = new DisposableCollection();\n    protected updateStatusBar(): void {\n        this.statusBarDisposable.dispose();\n        const repository = this.scmService.selectedRepository;\n        if (!repository) {\n            return;\n        }\n        const name = this.labelProvider.getName(new URI(repository.provider.rootUri));\n        if (this.scmService.repositories.length > 1) {\n            this.setStatusBarEntry(SCM_COMMANDS.CHANGE_REPOSITORY.id, {\n                text: `$(database) ${name}`,\n                tooltip: name.toString(),\n                command: SCM_COMMANDS.CHANGE_REPOSITORY.id,\n                alignment: StatusBarAlignment.LEFT,\n                priority: 100\n            });\n        }\n        const label = repository.provider.rootUri ? `${name} (${repository.provider.label})` : repository.provider.label;\n        this.scmService.statusBarCommands.forEach((value, index) => this.setStatusBarEntry(`scm.status.${index}`, {\n            text: value.title,\n            tooltip: label + (value.tooltip ? ` - ${value.tooltip}` : ''),\n            command: value.command,\n            arguments: value.arguments,\n            alignment: StatusBarAlignment.LEFT,\n            priority: 100\n        }));\n    }\n    protected setStatusBarEntry(id: string, entry: StatusBarEntry): void {\n        this.statusBar.setElement(id, entry);\n        this.statusBarDisposable.push(Disposable.create(() => this.statusBar.removeElement(id)));\n    }\n\n    /**\n     * It should be aligned with https://github.com/microsoft/vscode/blob/0dfa355b3ad185a6289ba28a99c141ab9e72d2be/src/vs/workbench/contrib/scm/browser/dirtydiffDecorator.ts#L808\n     */\n    registerColors(colors: ColorRegistry): void {\n        const overviewRulerDefault = Color.rgba(0, 122, 204, 0.6);\n        colors.register(\n            {\n                id: 'editorGutter.modifiedBackground', defaults: {\n                    dark: Color.rgba(12, 125, 157),\n                    light: Color.rgba(102, 175, 224),\n                    hc: Color.rgba(0, 155, 249)\n                }, description: 'Editor gutter background color for lines that are modified.'\n            },\n            {\n                id: 'editorGutter.addedBackground', defaults: {\n                    dark: Color.rgba(88, 124, 12),\n                    light: Color.rgba(129, 184, 139),\n                    hc: Color.rgba(51, 171, 78)\n                }, description: 'Editor gutter background color for lines that are added.'\n            },\n            {\n                id: 'editorGutter.deletedBackground', defaults: {\n                    dark: Color.rgba(148, 21, 27),\n                    light: Color.rgba(202, 75, 81),\n                    hc: Color.rgba(252, 93, 109)\n                }, description: 'Editor gutter background color for lines that are deleted.'\n            },\n            {\n                id: 'minimapGutter.modifiedBackground', defaults: {\n                    dark: Color.rgba(12, 125, 157),\n                    light: Color.rgba(102, 175, 224),\n                    hc: Color.rgba(0, 155, 249)\n                }, description: 'Minimap gutter background color for lines that are modified.'\n            },\n            {\n                id: 'minimapGutter.addedBackground',\n                defaults: {\n                    dark: Color.rgba(88, 124, 12),\n                    light: Color.rgba(129, 184, 139),\n                    hc: Color.rgba(51, 171, 78)\n                }, description: 'Minimap gutter background color for lines that are added.'\n            },\n            {\n                id: 'minimapGutter.deletedBackground', defaults: {\n                    dark: Color.rgba(148, 21, 27),\n                    light: Color.rgba(202, 75, 81),\n                    hc: Color.rgba(252, 93, 109)\n                }, description: 'Minimap gutter background color for lines that are deleted.'\n            },\n            {\n                id: 'editorOverviewRuler.modifiedForeground', defaults: {\n                    dark: overviewRulerDefault, light: overviewRulerDefault, hc: overviewRulerDefault\n                }, description: 'Overview ruler marker color for modified content.'\n            },\n            {\n                id: 'editorOverviewRuler.addedForeground', defaults: {\n                    dark: overviewRulerDefault, light: overviewRulerDefault, hc: overviewRulerDefault\n                }, description: 'Overview ruler marker color for added content.'\n            },\n            {\n                id: 'editorOverviewRuler.deletedForeground', defaults: {\n                    dark: overviewRulerDefault, light: overviewRulerDefault, hc: overviewRulerDefault\n                }, description: 'Overview ruler marker color for deleted content.'\n            }\n        );\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport { QuickOpenItem, QuickOpenMode, QuickOpenModel } from '@theia/core/lib/browser/quick-open/quick-open-model';\nimport { QuickOpenService, QuickOpenOptions } from '@theia/core/lib/browser/quick-open/quick-open-service';\nimport { MessageService } from '@theia/core/lib/common/message-service';\nimport URI from '@theia/core/lib/common/uri';\nimport { FileSystem } from '@theia/filesystem/lib/common';\nimport { ScmService } from './scm-service';\nimport { ScmRepository } from './scm-repository';\n\n@injectable()\nexport class ScmQuickOpenService {\n\n    @inject(QuickOpenService) protected readonly quickOpenService: QuickOpenService;\n    @inject(MessageService) protected readonly messageService: MessageService;\n    @inject(FileSystem) protected readonly fileSystem: FileSystem;\n    @inject(ScmService) protected readonly scmService: ScmService;\n\n    async changeRepository(): Promise<void> {\n        const repositories = this.scmService.repositories;\n        if (repositories.length > 1) {\n            const items = await Promise.all(repositories.map(async repository => {\n                const uri = new URI(repository.provider.rootUri);\n                const execute = () => {\n                    this.scmService.selectedRepository = repository;\n                };\n                const toLabel = () => uri.path.base;\n                const fsPath = await this.fileSystem.getFsPath(uri.toString());\n                const toDescription = () => fsPath;\n                return new ScmQuickOpenItem<ScmRepository>(repository, execute, toLabel, toDescription);\n            }));\n            this.open(items, 'Select repository to work with:');\n        }\n    }\n\n    private open(items: QuickOpenItem | QuickOpenItem[], placeholder: string): void {\n        this.quickOpenService.open(this.getModel(Array.isArray(items) ? items : [items]), this.getOptions(placeholder));\n    }\n\n    private getModel(items: QuickOpenItem | QuickOpenItem[]): QuickOpenModel {\n        return {\n            onType(lookFor: string, acceptor: (items: QuickOpenItem[]) => void): void {\n                acceptor(Array.isArray(items) ? items : [items]);\n            }\n        };\n    }\n\n    private getOptions(placeholder: string, fuzzyMatchLabel: boolean = true, onClose: (canceled: boolean) => void = () => { }): QuickOpenOptions {\n        return QuickOpenOptions.resolve({\n            placeholder,\n            fuzzyMatchLabel,\n            fuzzySort: false,\n            onClose\n        });\n    }\n}\n\nclass ScmQuickOpenItem<T> extends QuickOpenItem {\n\n    constructor(\n        public readonly ref: T,\n        protected readonly execute: (item: ScmQuickOpenItem<T>) => void,\n        private readonly toLabel: (item: ScmQuickOpenItem<T>) => string = () => `${ref}`,\n        private readonly toDescription: (item: ScmQuickOpenItem<T>) => string | undefined = () => undefined) {\n\n        super();\n    }\n\n    run(mode: QuickOpenMode): boolean {\n        if (mode !== QuickOpenMode.OPEN) {\n            return false;\n        }\n        this.execute(this);\n        return true;\n    }\n\n    getLabel(): string {\n        return this.toLabel(this);\n    }\n\n    getDescription(): string | undefined {\n        return this.toDescription(this);\n    }\n\n}\n","export function convertChangesToXML(changes) {\n  let ret = [];\n  for (let i = 0; i < changes.length; i++) {\n    let change = changes[i];\n    if (change.added) {\n      ret.push('<ins>');\n    } else if (change.removed) {\n      ret.push('<del>');\n    }\n\n    ret.push(escapeHTML(change.value));\n\n    if (change.added) {\n      ret.push('</ins>');\n    } else if (change.removed) {\n      ret.push('</del>');\n    }\n  }\n  return ret.join('');\n}\n\nfunction escapeHTML(s) {\n  let n = s;\n  n = n.replace(/&/g, '&amp;');\n  n = n.replace(/</g, '&lt;');\n  n = n.replace(/>/g, '&gt;');\n  n = n.replace(/\"/g, '&quot;');\n\n  return n;\n}\n"],"sourceRoot":""}