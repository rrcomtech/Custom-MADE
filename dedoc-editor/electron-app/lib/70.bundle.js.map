{"version":3,"sources":["webpack:///../node_modules/@theia/markers/src/browser/index.ts","webpack:///../node_modules/@theia/plugin-ext/src/main/browser/output-channel-registry-main.ts","webpack:///../node_modules/@theia/plugin-metrics/src/browser/plugin-metrics-creator.ts","webpack:///../node_modules/@theia/plugin-metrics/src/browser/plugin-metrics-frontend-module.ts","webpack:///../node_modules/@theia/plugin-metrics/src/browser/plugin-metrics-languages-main.ts","webpack:///../node_modules/@theia/plugin-metrics/src/browser/plugin-metrics-output-registry.ts","webpack:///../node_modules/@theia/plugin-metrics/src/browser/plugin-metrics-resolver.ts","webpack:///../node_modules/@theia/plugin-metrics/src/common/metrics-protocol.ts","webpack:///../node_modules/@theia/plugin-metrics/src/common/plugin-metrics-types.ts"],"names":[],"mappings":"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","file":"70.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport * from './marker-manager';\nexport * from './problem/problem-manager';\n","/********************************************************************************\n * Copyright (C) 2018 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport { OutputWidget } from '@theia/output/lib/browser/output-widget';\nimport { OutputContribution } from '@theia/output/lib/browser/output-contribution';\nimport { OutputChannel, OutputChannelManager } from '@theia/output/lib/common/output-channel';\nimport { OutputChannelRegistryMain, PluginInfo } from '../../common/plugin-api-rpc';\n\n@injectable()\nexport class OutputChannelRegistryMainImpl implements OutputChannelRegistryMain {\n\n    @inject(OutputChannelManager)\n    private outputChannelManager: OutputChannelManager;\n\n    @inject(OutputContribution)\n    private outputContribution: OutputContribution;\n\n    private commonOutputWidget: OutputWidget | undefined;\n\n    private channels: Map<string, OutputChannel> = new Map();\n\n    $append(channelName: string, value: string, pluginInfo: PluginInfo): PromiseLike<void> {\n        const outputChannel = this.getChannel(channelName);\n        if (outputChannel) {\n            outputChannel.append(value);\n        }\n\n        return Promise.resolve();\n    }\n\n    $clear(channelName: string): PromiseLike<void> {\n        const outputChannel = this.getChannel(channelName);\n        if (outputChannel) {\n            outputChannel.clear();\n        }\n\n        return Promise.resolve();\n    }\n\n    $dispose(channelName: string): PromiseLike<void> {\n        this.outputChannelManager.deleteChannel(channelName);\n        if (this.channels.has(channelName)) {\n            this.channels.delete(channelName);\n        }\n\n        return Promise.resolve();\n    }\n\n    async $reveal(channelName: string, preserveFocus: boolean): Promise<void> {\n        const outputChannel = this.getChannel(channelName);\n        if (outputChannel) {\n            const activate = !preserveFocus;\n            const reveal = preserveFocus;\n            this.commonOutputWidget = await this.outputContribution.openView({ activate, reveal });\n            outputChannel.setVisibility(true);\n        }\n    }\n\n    $close(channelName: string): PromiseLike<void> {\n        const outputChannel = this.getChannel(channelName);\n        if (outputChannel) {\n            outputChannel.setVisibility(false);\n        }\n        const channels = this.outputChannelManager.getChannels();\n        const isEmpty = channels.findIndex((channel: OutputChannel) => channel.isVisible) === -1;\n        if (isEmpty && this.commonOutputWidget) {\n            this.commonOutputWidget.close();\n        }\n\n        return Promise.resolve();\n    }\n\n    private getChannel(channelName: string): OutputChannel | undefined {\n        let outputChannel: OutputChannel | undefined;\n        if (this.channels.has(channelName)) {\n            outputChannel = this.channels.get(channelName);\n        } else {\n            outputChannel = this.outputChannelManager.getChannel(channelName);\n            this.channels.set(channelName, outputChannel);\n        }\n\n        return outputChannel;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2019 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from 'inversify';\nimport { PluginMetrics, METRICS_TIMEOUT } from '../common/metrics-protocol';\nimport { AnalyticsFromRequests, DataFromRequest, createRequestData, createDefaultAnalytics, MetricsMap } from '../common/plugin-metrics-types';\n\n@injectable()\nexport class PluginMetricsCreator {\n\n    @inject(PluginMetrics)\n    private pluginMetrics: PluginMetrics;\n\n    private _extensionIDAnalytics: MetricsMap;\n\n    private NODE_BASED_REGEX = /Request(.*?)failed/;\n\n    constructor() {\n        this.setPluginMetrics();\n        this._extensionIDAnalytics = {};\n    }\n\n    /**\n     * Create an error metric for requestData.pluginID by attempting to extract the erroring\n     * language server method from the requestData.errorContentsOrMethod. If it cannot extract the\n     * error language server method from requestData.errorContentsOrMethod then it will not\n     * create a metric.\n     *\n     * @param pluginID The id of the plugin\n     * @param errorContents The contents that the langauge server error has produced\n     */\n    async createErrorMetric(requestData: DataFromRequest): Promise<void> {\n        if (!requestData.pluginID) {\n            return;\n        }\n\n        const method = this.extractMethodFromValue(requestData.errorContentsOrMethod);\n\n        // only log the metric if we can find the method that it occured in\n        if (method) {\n            const createdMetric = createRequestData(requestData.pluginID, method, requestData.timeTaken);\n            this.createMetric(createdMetric, false);\n\n            this.decreaseExtensionRequests(requestData.pluginID, method);\n        }\n    }\n\n    /**\n     * Decreases the total requests and the successful responses for pluginID with method by 1.\n     *\n     * This is needed because an error and a successful language server request aren't currently\n     * associated together because of https://github.com/microsoft/vscode-languageserver-node/issues/517.\n     * That means that every language server request that resolves counts as a successful language server request.\n     * Therefore, we need to decrease the extension requests for pluginID when we know there is an error.\n     * Otherwise, for every language server request that errors we would count it as both a success and a failure.\n     *\n     * @param pluginID The id of the plugin that should have the decreased requests\n     */\n    private decreaseExtensionRequests(pluginID: string, method: string): void {\n        const thisExtension = this._extensionIDAnalytics[pluginID];\n        if (thisExtension) {\n            const currentAnalytics = thisExtension[method];\n            if (currentAnalytics) {\n                currentAnalytics.totalRequests -= 1;\n                currentAnalytics.succesfulResponses -= 1;\n            }\n        }\n    }\n\n    /**\n     * Update the internal metrics structure for pluginID with method when a request is made\n     *\n     * @param requestData The data from the request that was made\n     * @param isRequestSuccessful If the language server request was successful or not\n     */\n    async createMetric(requestData: DataFromRequest, isRequestSuccessful: boolean): Promise<void> {\n        if (!requestData.pluginID) {\n            return;\n        }\n\n        // When we are in this function we know its a method so we can make it clearer\n        const method = requestData.errorContentsOrMethod;\n        const defaultAnalytic = createDefaultAnalytics(requestData.timeTaken, isRequestSuccessful);\n\n        this.createExtensionIDAnalyticIfNotFound(requestData, defaultAnalytic);\n        this.createExtensionIDMethodIfNotFound(requestData, defaultAnalytic);\n\n        const thisExtension = this._extensionIDAnalytics[requestData.pluginID];\n        if (thisExtension) {\n            const currentAnalytic = thisExtension[method];\n            if (currentAnalytic) {\n                currentAnalytic.totalRequests += 1;\n                if (isRequestSuccessful) {\n                    currentAnalytic.succesfulResponses += 1;\n                }\n                if (isRequestSuccessful) {\n                    currentAnalytic.sumOfTimeForSuccess = currentAnalytic.sumOfTimeForSuccess + requestData.timeTaken;\n                } else {\n                    currentAnalytic.sumOfTimeForFailure = currentAnalytic.sumOfTimeForFailure + requestData.timeTaken;\n                }\n            }\n        }\n    }\n\n    /**\n     * Create an entry in _extensionIDAnalytics with createdAnalytic if there does not exist one\n     *\n     * @param requestData data that we will turn into metrics\n     * @param createdAnalytic the analytic being created\n     */\n    private createExtensionIDAnalyticIfNotFound(requestData: DataFromRequest, createdAnalytic: AnalyticsFromRequests): void {\n        const method = requestData.errorContentsOrMethod; // We know its a metric if this is being called\n\n        if (!this._extensionIDAnalytics[requestData.pluginID]) {\n            this._extensionIDAnalytics[requestData.pluginID] = {\n                [method]: createdAnalytic\n            };\n        }\n    }\n\n    /**\n     * Create an entry in _extensionIDAnalytics for requestData.pluginID with requestData.errorContentsOrMethod as the method\n     * if there does not exist one\n     *\n     * @param requestData data that we will turn into metrics\n     * @param createdAnalytic the analytic being created\n     */\n    private createExtensionIDMethodIfNotFound(requestData: DataFromRequest, createdAnalytic: AnalyticsFromRequests): void {\n        const method = requestData.errorContentsOrMethod; // We know its a metric if this is being called\n\n        if (this._extensionIDAnalytics[requestData.pluginID]) {\n            const methodToAnalyticMap = this._extensionIDAnalytics[requestData.pluginID];\n            if (!methodToAnalyticMap[method]) {\n                methodToAnalyticMap[method] = createdAnalytic;\n            }\n        }\n    }\n\n    /**\n     * setPluginMetrics is a constant running function that sets\n     * pluginMetrics every {$METRICS_TIMEOUT} seconds so that it doesn't\n     * update /metrics on every request\n     */\n    private setPluginMetrics(): void {\n        const self = this;\n        setInterval(() => {\n            if (Object.keys(self._extensionIDAnalytics).length !== 0) {\n                self.pluginMetrics.setMetrics(JSON.stringify(self._extensionIDAnalytics));\n            }\n        }, METRICS_TIMEOUT);\n    }\n\n    // Map of plugin extension id to method to analytic\n    get extensionIDAnalytics(): MetricsMap {\n        return this._extensionIDAnalytics;\n    }\n\n    /**\n     * Attempts to extract the method name from the current errorContents using the\n     * vscode-languageclient matching regex.\n     *\n     * If it cannot find a match in the errorContents it returns undefined\n     *\n     * @param errorContents The contents of the current error or undefined\n     */\n    private extractMethodFromValue(errorContents: string | undefined): string | undefined {\n        if (!errorContents) {\n            return undefined;\n        }\n        const matches = errorContents.match(this.NODE_BASED_REGEX);\n        if (matches) {\n            return matches[1].trim();\n        }\n        return undefined;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2019 Red Hat and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule } from 'inversify';\nimport { LanguagesMainPluginMetrics } from './plugin-metrics-languages-main';\nimport { PluginMetrics, metricsJsonRpcPath } from '../common/metrics-protocol';\nimport { WebSocketConnectionProvider } from '@theia/core/lib/browser/messaging/ws-connection-provider';\nimport { PluginMetricsCreator } from './plugin-metrics-creator';\nimport { PluginMetricsResolver } from './plugin-metrics-resolver';\nimport { PluginMetricsOutputChannelRegistry } from './plugin-metrics-output-registry';\nimport { LanguagesMainImpl } from '@theia/plugin-ext/lib/main/browser/languages-main';\nimport { OutputChannelRegistryMainImpl } from '@theia/plugin-ext/lib/main/browser/output-channel-registry-main';\n\nexport default new ContainerModule((bind, unbind, isBound, rebind) => {\n    bind(PluginMetricsResolver).toSelf().inSingletonScope();\n    bind(PluginMetricsCreator).toSelf().inSingletonScope();\n\n    rebind(LanguagesMainImpl).to(LanguagesMainPluginMetrics).inTransientScope();\n    rebind(OutputChannelRegistryMainImpl).to(PluginMetricsOutputChannelRegistry).inTransientScope();\n\n    bind(PluginMetrics).toDynamicValue(ctx => {\n        const connection = ctx.container.get(WebSocketConnectionProvider);\n        return connection.createProxy<PluginMetrics>(metricsJsonRpcPath);\n    }).inSingletonScope();\n});\n","/********************************************************************************\n * Copyright (C) 2019 Red Hat and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Range, WorkspaceSymbolParams } from '@theia/plugin-ext/lib/common/plugin-api-rpc-model';\nimport { PluginMetricsResolver } from './plugin-metrics-resolver';\nimport { LanguagesMainImpl } from '@theia/plugin-ext/lib/main/browser/languages-main';\nimport { SymbolInformation } from '@theia/languages/lib/browser';\nimport { injectable, inject } from 'inversify';\nimport * as vst from 'vscode-languageserver-protocol';\nimport { PluginInfo } from '@theia/plugin-ext/lib/common/plugin-api-rpc';\nimport { SerializedDocumentFilter } from '@theia/plugin-ext/lib/common/plugin-api-rpc-model';\nimport * as theia from '@theia/plugin';\n\n@injectable()\nexport class LanguagesMainPluginMetrics extends LanguagesMainImpl {\n\n    @inject(PluginMetricsResolver)\n    private pluginMetricsResolver: PluginMetricsResolver;\n\n    // Map of handle to extension id\n    protected readonly handleToExtensionID = new Map<number, string>();\n\n    $unregister(handle: number): void {\n        this.handleToExtensionID.delete(handle);\n        super.$unregister(handle);\n    }\n\n    protected provideCompletionItems(handle: number, model: monaco.editor.ITextModel, position: monaco.Position,\n        context: monaco.languages.CompletionContext, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\n        return this.pluginMetricsResolver.resolveRequest(this.handleToExtensionName(handle),\n            vst.CompletionRequest.type.method,\n            super.provideCompletionItems(handle, model, position, context, token));\n    }\n\n    protected resolveCompletionItem(handle: number, model: monaco.editor.ITextModel, position: monaco.Position,\n        item: monaco.languages.CompletionItem, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.CompletionItem> {\n        return this.pluginMetricsResolver.resolveRequest(this.handleToExtensionName(handle),\n            vst.CompletionRequest.type.method,\n            super.resolveCompletionItem(handle, model, position, item, token));\n    }\n\n    protected provideReferences(handle: number, model: monaco.editor.ITextModel, position: monaco.Position,\n        context: monaco.languages.ReferenceContext, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.Location[]> {\n        return this.pluginMetricsResolver.resolveRequest(this.handleToExtensionName(handle),\n            vst.ReferencesRequest.type.method,\n            super.provideReferences(handle, model, position, context, token));\n    }\n\n    protected provideImplementation(handle: number, model: monaco.editor.ITextModel,\n        position: monaco.Position, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.Definition> {\n        return this.pluginMetricsResolver.resolveRequest(this.handleToExtensionName(handle),\n            vst.ImplementationRequest.type.method,\n            super.provideImplementation(handle, model, position, token));\n    }\n\n    protected provideTypeDefinition(handle: number, model: monaco.editor.ITextModel,\n        position: monaco.Position, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.Definition> {\n        return this.pluginMetricsResolver.resolveRequest(this.handleToExtensionName(handle),\n            vst.TypeDefinitionRequest.type.method,\n            super.provideTypeDefinition(handle, model, position, token));\n    }\n\n    protected provideHover(handle: number, model: monaco.editor.ITextModel, position: monaco.Position,\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.Hover> {\n        return this.pluginMetricsResolver.resolveRequest(this.handleToExtensionName(handle),\n            vst.HoverRequest.type.method,\n            super.provideHover(handle, model, position, token));\n    }\n\n    protected provideDocumentHighlights(handle: number, model: monaco.editor.ITextModel, position: monaco.Position,\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.DocumentHighlight[]> {\n        return this.pluginMetricsResolver.resolveRequest(this.handleToExtensionName(handle),\n            vst.DocumentHighlightRequest.type.method,\n            super.provideDocumentHighlights(handle, model, position, token));\n    }\n\n    protected provideWorkspaceSymbols(handle: number, params: WorkspaceSymbolParams, token: monaco.CancellationToken): Thenable<SymbolInformation[]> {\n        return this.pluginMetricsResolver.resolveRequest(this.handleToExtensionName(handle),\n            vst.WorkspaceSymbolRequest.type.method,\n            super.provideWorkspaceSymbols(handle, params, token));\n    }\n\n    protected resolveWorkspaceSymbol(handle: number, symbol: SymbolInformation, token: monaco.CancellationToken): Thenable<SymbolInformation> {\n        return this.pluginMetricsResolver.resolveRequest(this.handleToExtensionName(handle),\n            vst.WorkspaceSymbolRequest.type.method,\n            super.resolveWorkspaceSymbol(handle, symbol, token));\n    }\n\n    protected async provideLinks(handle: number, model: monaco.editor.ITextModel,\n        token: monaco.CancellationToken): Promise<monaco.languages.ProviderResult<monaco.languages.ILinksList>> {\n        return this.pluginMetricsResolver.resolveRequest(this.handleToExtensionName(handle),\n            vst.DocumentLinkRequest.type.method,\n            super.provideLinks(handle, model, token));\n    }\n\n    protected async resolveLink(handle: number, link: monaco.languages.ILink,\n        token: monaco.CancellationToken): Promise<monaco.languages.ProviderResult<monaco.languages.ILink>> {\n        return this.pluginMetricsResolver.resolveRequest(this.handleToExtensionName(handle),\n            vst.DocumentLinkRequest.type.method,\n            super.resolveLink(handle, link, token));\n    }\n\n    protected async provideCodeLenses(handle: number, model: monaco.editor.ITextModel,\n        token: monaco.CancellationToken): Promise<monaco.languages.ProviderResult<monaco.languages.CodeLensList>> {\n        return this.pluginMetricsResolver.resolveRequest(this.handleToExtensionName(handle),\n            vst.CodeLensRequest.type.method,\n            super.provideCodeLenses(handle, model, token));\n    }\n\n    protected resolveCodeLens(handle: number, model: monaco.editor.ITextModel,\n        codeLens: monaco.languages.CodeLens, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.CodeLens> {\n        return this.pluginMetricsResolver.resolveRequest(this.handleToExtensionName(handle),\n            vst.CodeLensResolveRequest.type.method,\n            super.resolveCodeLens(handle, model, codeLens, token));\n    }\n\n    protected provideDocumentSymbols(handle: number, model: monaco.editor.ITextModel,\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.DocumentSymbol[]> {\n        return this.pluginMetricsResolver.resolveRequest(this.handleToExtensionName(handle),\n            vst.DocumentSymbolRequest.type.method,\n            super.provideDocumentSymbols(handle, model, token));\n    }\n\n    protected provideDefinition(handle: number, model: monaco.editor.ITextModel,\n        position: monaco.Position, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.Definition> {\n        return this.pluginMetricsResolver.resolveRequest(this.handleToExtensionName(handle),\n            vst.DefinitionRequest.type.method,\n            super.provideDefinition(handle, model, position, token));\n    }\n\n    protected async provideSignatureHelp(handle: number, model: monaco.editor.ITextModel,\n        position: monaco.Position, token: monaco.CancellationToken,\n        context: monaco.languages.SignatureHelpContext): Promise<monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult>> {\n        return this.pluginMetricsResolver.resolveRequest(this.handleToExtensionName(handle),\n            vst.SignatureHelpRequest.type.method,\n            super.provideSignatureHelp(handle, model, position, token, context));\n    }\n\n    protected provideDocumentFormattingEdits(handle: number, model: monaco.editor.ITextModel,\n        options: monaco.languages.FormattingOptions, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\n        return this.pluginMetricsResolver.resolveRequest(this.handleToExtensionName(handle),\n            vst.DocumentFormattingRequest.type.method,\n            super.provideDocumentFormattingEdits(handle, model, options, token));\n    }\n\n    protected provideDocumentRangeFormattingEdits(handle: number, model: monaco.editor.ITextModel,\n        range: Range, options: monaco.languages.FormattingOptions, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\n        return this.pluginMetricsResolver.resolveRequest(this.handleToExtensionName(handle),\n            vst.DocumentRangeFormattingRequest.type.method,\n            super.provideDocumentRangeFormattingEdits(handle, model, range, options, token));\n    }\n\n    protected provideOnTypeFormattingEdits(handle: number, model: monaco.editor.ITextModel, position: monaco.Position,\n        ch: string, options: monaco.languages.FormattingOptions, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\n        return this.pluginMetricsResolver.resolveRequest(this.handleToExtensionName(handle),\n            vst.DocumentOnTypeFormattingRequest.type.method,\n            super.provideOnTypeFormattingEdits(handle, model, position, ch, options, token));\n    }\n\n    protected provideFoldingRanges(handle: number, model: monaco.editor.ITextModel,\n        context: monaco.languages.FoldingContext, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.FoldingRange[]> {\n        return this.pluginMetricsResolver.resolveRequest(this.handleToExtensionName(handle),\n            vst.FoldingRangeRequest.type.method,\n            super.provideFoldingRanges(handle, model, context, token));\n    }\n\n    protected provideDocumentColors(handle: number, model: monaco.editor.ITextModel,\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.IColorInformation[]> {\n        return this.pluginMetricsResolver.resolveRequest(this.handleToExtensionName(handle),\n            vst.DocumentColorRequest.type.method,\n            super.provideDocumentColors(handle, model, token));\n    }\n\n    protected provideColorPresentations(handle: number, model: monaco.editor.ITextModel,\n        colorInfo: monaco.languages.IColorInformation, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.IColorPresentation[]> {\n        return this.pluginMetricsResolver.resolveRequest(this.handleToExtensionName(handle),\n            vst.ColorPresentationRequest.type.method,\n            super.provideColorPresentations(handle, model, colorInfo, token));\n    }\n\n    protected async provideCodeActions(handle: number, model: monaco.editor.ITextModel,\n        rangeOrSelection: Range, context: monaco.languages.CodeActionContext,\n        token: monaco.CancellationToken): Promise<monaco.languages.CodeActionList | monaco.languages.CodeActionList> {\n        return this.pluginMetricsResolver.resolveRequest(this.handleToExtensionName(handle),\n            vst.CodeActionRequest.type.method,\n            super.provideCodeActions(handle, model, rangeOrSelection, context, token));\n    }\n\n    protected provideRenameEdits(handle: number, model: monaco.editor.ITextModel,\n        position: monaco.Position, newName: string, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.WorkspaceEdit & monaco.languages.Rejection> {\n        return this.pluginMetricsResolver.resolveRequest(this.handleToExtensionName(handle),\n            vst.RenameRequest.type.method,\n            super.provideRenameEdits(handle, model, position, newName, token));\n    }\n\n    protected resolveRenameLocation(handle: number, model: monaco.editor.ITextModel,\n        position: monaco.Position, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.RenameLocation> {\n        return this.pluginMetricsResolver.resolveRequest(this.handleToExtensionName(handle),\n            vst.RenameRequest.type.method,\n            super.resolveRenameLocation(handle, model, position, token));\n    }\n\n    $registerCompletionSupport(handle: number, pluginInfo: PluginInfo,\n        selector: SerializedDocumentFilter[], triggerCharacters: string[], supportsResolveDetails: boolean): void {\n        this.registerPluginWithFeatureHandle(handle, pluginInfo.id);\n        super.$registerCompletionSupport(handle, pluginInfo, selector, triggerCharacters, supportsResolveDetails);\n    }\n\n    $registerDefinitionProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[]): void {\n        this.registerPluginWithFeatureHandle(handle, pluginInfo.id);\n        super.$registerDefinitionProvider(handle, pluginInfo, selector);\n    }\n\n    $registerDeclarationProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[]): void {\n        this.registerPluginWithFeatureHandle(handle, pluginInfo.id);\n        super.$registerDeclarationProvider(handle, pluginInfo, selector);\n    }\n\n    $registerReferenceProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[]): void {\n        this.registerPluginWithFeatureHandle(handle, pluginInfo.id);\n        super.$registerReferenceProvider(handle, pluginInfo, selector);\n    }\n\n    $registerSignatureHelpProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[], metadata: theia.SignatureHelpProviderMetadata): void {\n        this.registerPluginWithFeatureHandle(handle, pluginInfo.id);\n        super.$registerSignatureHelpProvider(handle, pluginInfo, selector, metadata);\n    }\n\n    $registerImplementationProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[]): void {\n        this.registerPluginWithFeatureHandle(handle, pluginInfo.id);\n        super.$registerImplementationProvider(handle, pluginInfo, selector);\n    }\n\n    $registerTypeDefinitionProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[]): void {\n        this.registerPluginWithFeatureHandle(handle, pluginInfo.id);\n        super.$registerTypeDefinitionProvider(handle, pluginInfo, selector);\n    }\n\n    $registerHoverProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[]): void {\n        this.registerPluginWithFeatureHandle(handle, pluginInfo.id);\n        super.$registerHoverProvider(handle, pluginInfo, selector);\n    }\n\n    $registerDocumentHighlightProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[]): void {\n        this.registerPluginWithFeatureHandle(handle, pluginInfo.id);\n        super.$registerDocumentHighlightProvider(handle, pluginInfo, selector);\n    }\n\n    $registerWorkspaceSymbolProvider(handle: number, pluginInfo: PluginInfo): void {\n        this.registerPluginWithFeatureHandle(handle, pluginInfo.id);\n        super.$registerWorkspaceSymbolProvider(handle, pluginInfo);\n    }\n\n    $registerDocumentLinkProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[]): void {\n        this.registerPluginWithFeatureHandle(handle, pluginInfo.id);\n        super.$registerDocumentLinkProvider(handle, pluginInfo, selector);\n    }\n\n    $registerCodeLensSupport(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[], eventHandle: number): void {\n        this.registerPluginWithFeatureHandle(handle, pluginInfo.id);\n        super.$registerCodeLensSupport(handle, pluginInfo, selector, eventHandle);\n    }\n\n    $registerOutlineSupport(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[]): void {\n        this.registerPluginWithFeatureHandle(handle, pluginInfo.id);\n        super.$registerOutlineSupport(handle, pluginInfo, selector);\n    }\n\n    $registerDocumentFormattingSupport(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[]): void {\n        this.registerPluginWithFeatureHandle(handle, pluginInfo.id);\n        super.$registerDocumentFormattingSupport(handle, pluginInfo, selector);\n    }\n\n    $registerRangeFormattingProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[]): void {\n        this.registerPluginWithFeatureHandle(handle, pluginInfo.id);\n        super.$registerRangeFormattingProvider(handle, pluginInfo, selector);\n    }\n\n    $registerOnTypeFormattingProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[], autoFormatTriggerCharacters: string[]): void {\n        this.registerPluginWithFeatureHandle(handle, pluginInfo.id);\n        super.$registerOnTypeFormattingProvider(handle, pluginInfo, selector, autoFormatTriggerCharacters);\n    }\n\n    $registerFoldingRangeProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[]): void {\n        this.registerPluginWithFeatureHandle(handle, pluginInfo.id);\n        super.$registerFoldingRangeProvider(handle, pluginInfo, selector);\n    }\n\n    $registerDocumentColorProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[]): void {\n        this.registerPluginWithFeatureHandle(handle, pluginInfo.id);\n        super.$registerDocumentColorProvider(handle, pluginInfo, selector);\n    }\n\n    $registerQuickFixProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[], codeActionKinds?: string[]): void {\n        this.registerPluginWithFeatureHandle(handle, pluginInfo.id);\n        super.$registerQuickFixProvider(handle, pluginInfo, selector);\n    }\n\n    $registerRenameProvider(handle: number, pluginInfo: PluginInfo, selector: SerializedDocumentFilter[], supportsResolveLocation: boolean): void {\n        this.registerPluginWithFeatureHandle(handle, pluginInfo.id);\n        super.$registerRenameProvider(handle, pluginInfo, selector, supportsResolveLocation);\n    }\n\n    private registerPluginWithFeatureHandle(handle: number, pluginID: string): void {\n        this.handleToExtensionID.set(handle, pluginID);\n    }\n\n    private handleToExtensionName(handle: number): string {\n        return this.handleToExtensionID.get(handle) as string;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2019 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport { OutputChannelRegistryMainImpl } from '@theia/plugin-ext/lib/main/browser/output-channel-registry-main';\nimport { PluginMetricsCreator } from './plugin-metrics-creator';\nimport { createDefaultRequestData } from '../common/plugin-metrics-types';\nimport { PluginInfo } from '@theia/plugin-ext/lib/common/plugin-api-rpc';\n\n@injectable()\nexport class PluginMetricsOutputChannelRegistry extends OutputChannelRegistryMainImpl {\n\n    @inject(PluginMetricsCreator)\n    protected readonly pluginMetricsCreator: PluginMetricsCreator;\n\n    $append(channelName: string, errorOrValue: string, pluginInfo: PluginInfo): PromiseLike<void> {\n        if (errorOrValue.startsWith('[Error')) {\n            const createdMetric = createDefaultRequestData(pluginInfo.id, errorOrValue);\n            this.pluginMetricsCreator.createErrorMetric(createdMetric);\n        }\n        return super.$append(channelName, errorOrValue, pluginInfo);\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2019 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { injectable, inject } from 'inversify';\nimport { PluginMetricsCreator } from './plugin-metrics-creator';\nimport { createRequestData } from '../common/plugin-metrics-types';\n\n/**\n * This class helps resolve language server requests into successess or failures\n * and sends the data to the metricsExtractor\n */\n@injectable()\nexport class PluginMetricsResolver {\n\n    @inject(PluginMetricsCreator)\n    private metricsCreator: PluginMetricsCreator;\n\n    /**\n     * Resolve a request for pluginID and create a metric based on whether or not\n     * the language server errored.\n     *\n     * @param pluginID the ID of the plugin that made the request\n     * @param method  the method that was request\n     * @param request the result of the language server request\n     */\n    async resolveRequest(pluginID: string, method: string, request: PromiseLike<any> | Promise<any> | Thenable<any> | any): Promise<any> {\n        const currentTime = performance.now();\n        try {\n            const value = await request;\n            this.createAndSetMetric(pluginID, method, performance.now() - currentTime, true);\n            return value;\n        } catch (error) {\n            this.createAndSetMetric(pluginID, method, performance.now() - currentTime, false);\n            return Promise.reject(error);\n        }\n    }\n\n    private createAndSetMetric(pluginID: string, method: string, time: number, successful: boolean): void {\n        const createdSuccessMetric = createRequestData(pluginID, method, time);\n        this.metricsCreator.createMetric(createdSuccessMetric, successful);\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2019 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/**\n * The JSON-RPC interface for plugin metrics\n */\nexport const metricsJsonRpcPath = '/services/plugin-ext/metrics';\nexport const PluginMetrics = Symbol('PluginMetrics');\nexport interface PluginMetrics {\n    setMetrics(metrics: string): void;\n    getMetrics(): string;\n}\n\nexport const METRICS_TIMEOUT = 10000;\n","/********************************************************************************\n * Copyright (C) 2019 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n// Define common interfaces that multiple classes can use\n\nexport interface MetricsMap {\n    [extensionID: string]: MethodToAnalytics\n}\n\nexport interface MethodToAnalytics {\n    [methodID: string]: AnalyticsFromRequests;\n}\n\nexport interface AnalyticsFromRequests {\n    totalRequests: number;\n    succesfulResponses: number;\n    sumOfTimeForSuccess: number;\n    sumOfTimeForFailure: number;\n}\n\nexport interface DataFromRequest {\n    pluginID: string;\n    errorContentsOrMethod: string;\n    timeTaken: number;\n}\n\nexport interface MetricOutput {\n    header: string;\n    createMetricOutput(pluginID: string, method: string, requestAnalytics: AnalyticsFromRequests): string;\n}\n\n/**\n * Helper functions for creating an object that corresponds to the DataFromRequest interface\n */\nexport function createRequestData(pluginID: string, errorContentsOrMethod: string, timeTaken: number): DataFromRequest {\n    return {\n        pluginID,\n        errorContentsOrMethod,\n        timeTaken\n    };\n}\n\nexport function createDefaultRequestData(pluginID: string, errorContentsOrMethod: string): DataFromRequest {\n    return {\n        pluginID,\n        errorContentsOrMethod,\n        timeTaken: 0\n    };\n}\n\nexport function createDefaultAnalytics(timeTaken: number, isRequestSuccessful: boolean): AnalyticsFromRequests {\n    if (isRequestSuccessful) {\n        return {\n            sumOfTimeForSuccess: timeTaken,\n            sumOfTimeForFailure: 0,\n            succesfulResponses: 0,\n            totalRequests: 0\n        };\n    } else {\n        return {\n            sumOfTimeForSuccess: 0,\n            sumOfTimeForFailure: timeTaken,\n            succesfulResponses: 0,\n            totalRequests: 0\n        };\n    }\n}\n"],"sourceRoot":""}