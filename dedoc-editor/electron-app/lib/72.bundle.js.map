{"version":3,"sources":["webpack:///../node_modules/@theia/editor-preview/src/browser/editor-preview-factory.ts","webpack:///../node_modules/@theia/editor-preview/src/browser/editor-preview-frontend-module.ts","webpack:///../node_modules/@theia/editor-preview/src/browser/editor-preview-manager.ts","webpack:///../node_modules/@theia/editor-preview/src/browser/editor-preview-preferences.ts","webpack:///../node_modules/@theia/editor-preview/src/browser/editor-preview-widget.ts","webpack:///../node_modules/@theia/editor-preview/src/browser/style/index.css?c66f","webpack:///../node_modules/@theia/editor-preview/src/browser/style/editor-preview-widget.css","webpack:///../node_modules/@theia/editor-preview/src/browser/style/index.css"],"names":[],"mappings":"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","file":"72.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2018 Google and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport URI from '@theia/core/lib/common/uri';\nimport { WidgetFactory, WidgetManager } from '@theia/core/lib/browser';\nimport { MaybePromise } from '@theia/core/lib/common/types';\nimport { EditorPreviewWidget } from './editor-preview-widget';\nimport { inject, injectable } from 'inversify';\nimport { EditorManager } from '@theia/editor/lib/browser';\nimport { UUID } from '@phosphor/coreutils';\n\nexport interface EditorPreviewWidgetOptions {\n    kind: 'editor-preview-widget',\n    id: string,\n    initialUri: string,\n    session: string,\n}\n\n@injectable()\nexport class EditorPreviewWidgetFactory implements WidgetFactory {\n\n    static ID: string = 'editor-preview-widget';\n\n    static generateUniqueId(): string {\n        return UUID.uuid4();\n    }\n\n    readonly id = EditorPreviewWidgetFactory.ID;\n    static readonly sessionId = EditorPreviewWidgetFactory.generateUniqueId();\n\n    @inject(WidgetManager)\n    protected readonly widgetManager: WidgetManager;\n\n    @inject(EditorManager)\n    protected readonly editorManager: EditorManager;\n\n    createWidget(options: EditorPreviewWidgetOptions): MaybePromise<EditorPreviewWidget> {\n        return this.doCreate(options);\n    }\n\n    protected async doCreate(options: EditorPreviewWidgetOptions): Promise<EditorPreviewWidget> {\n        const widget = (options.session === EditorPreviewWidgetFactory.sessionId)\n            ? await this.editorManager.getOrCreateByUri(new URI(options.initialUri))\n            : undefined;\n        const previewWidget = new EditorPreviewWidget(this.widgetManager, widget);\n        previewWidget.id = options.id;\n        return previewWidget;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 Google and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { OpenHandler, WidgetFactory } from '@theia/core/lib/browser';\nimport {ContainerModule} from 'inversify';\nimport { EditorPreviewManager } from './editor-preview-manager';\nimport { EditorPreviewWidgetFactory } from './editor-preview-factory';\nimport { bindEditorPreviewPreferences } from './editor-preview-preferences';\n\nimport '../../src/browser/style/index.css';\n\nexport default new ContainerModule(bind => {\n\n    bind(WidgetFactory).to(EditorPreviewWidgetFactory).inSingletonScope();\n\n    bind(EditorPreviewManager).toSelf().inSingletonScope();\n    bind(OpenHandler).to(EditorPreviewManager);\n\n    bindEditorPreviewPreferences(bind);\n});\n","/********************************************************************************\n * Copyright (C) 2018 Google and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, postConstruct } from 'inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { ApplicationShell, DockPanel } from '@theia/core/lib/browser';\nimport { EditorManager, EditorOpenerOptions, EditorWidget } from '@theia/editor/lib/browser';\nimport { EditorPreviewWidget } from './editor-preview-widget';\nimport { EditorPreviewWidgetFactory, EditorPreviewWidgetOptions } from './editor-preview-factory';\nimport { EditorPreviewPreferences } from './editor-preview-preferences';\nimport { WidgetOpenHandler, WidgetOpenerOptions } from '@theia/core/lib/browser';\n\n/**\n * Opener options containing an optional preview flag.\n */\nexport interface PreviewEditorOpenerOptions extends EditorOpenerOptions {\n    preview?: boolean\n}\n\n/**\n * Class for managing an editor preview widget.\n */\n@injectable()\nexport class EditorPreviewManager extends WidgetOpenHandler<EditorPreviewWidget | EditorWidget> {\n\n    readonly id = EditorPreviewWidgetFactory.ID;\n\n    readonly label = 'Code Editor Preview';\n\n    protected currentEditorPreview: Promise<EditorPreviewWidget | undefined>;\n\n    @inject(EditorManager)\n    protected readonly editorManager: EditorManager;\n\n    @inject(ApplicationShell)\n    protected readonly shell: ApplicationShell;\n\n    @inject(EditorPreviewPreferences)\n    protected readonly preferences: EditorPreviewPreferences;\n\n    @postConstruct()\n    protected init(): void {\n        super.init();\n        this.onCreated(widget => {\n            if (widget instanceof EditorPreviewWidget) {\n                return this.handlePreviewWidgetCreated(widget);\n            }\n        });\n\n        this.preferences.onPreferenceChanged(change => {\n            if (this.currentEditorPreview) {\n                this.currentEditorPreview.then(editorPreview => {\n                    if (!change.newValue && editorPreview) {\n                        editorPreview.pinEditorWidget();\n                    }\n                });\n            }\n        });\n    }\n\n    protected async handlePreviewWidgetCreated(widget: EditorPreviewWidget): Promise<void> {\n        // Enforces only one preview widget exists at a given time.\n        const editorPreview = await this.currentEditorPreview;\n        if (editorPreview && editorPreview !== widget) {\n            editorPreview.pinEditorWidget();\n        }\n\n        this.currentEditorPreview = Promise.resolve(widget);\n        widget.disposed.connect(() => this.currentEditorPreview = Promise.resolve(undefined));\n\n        widget.onPinned(({ preview, editorWidget }) => {\n            // TODO(caseyflynn): I don't believe there is ever a case where\n            // this will not hold true.\n            if (preview.parent && preview.parent instanceof DockPanel) {\n                preview.parent.addWidget(editorWidget, { ref: preview });\n            } else {\n                this.shell.addWidget(editorWidget, { area: 'main' });\n            }\n            preview.dispose();\n            this.shell.activateWidget(editorWidget.id);\n            this.currentEditorPreview = Promise.resolve(undefined);\n        });\n    }\n\n    protected async isCurrentPreviewUri(uri: URI): Promise<boolean> {\n        const editorPreview = await this.currentEditorPreview;\n        const currentUri = editorPreview && editorPreview.getResourceUri();\n        return !!currentUri && currentUri.isEqualOrParent(uri);\n    }\n\n    async canHandle(uri: URI, options?: PreviewEditorOpenerOptions): Promise<number> {\n        if (this.preferences['editor.enablePreview'] && (options && options.preview || await this.isCurrentPreviewUri(uri))) {\n            return 200;\n        }\n        return 0;\n    }\n\n    async open(uri: URI, options: PreviewEditorOpenerOptions = {}): Promise<EditorPreviewWidget | EditorWidget> {\n        let widget = await this.pinCurrentEditor(uri, options);\n        if (widget) {\n            return widget;\n        }\n        widget = await this.replaceCurrentPreview(uri, options) || await this.openNewPreview(uri, options);\n        await this.editorManager.open(uri, options);\n        return widget;\n    }\n\n    protected async pinCurrentEditor(uri: URI, options: PreviewEditorOpenerOptions): Promise<EditorWidget | EditorPreviewWidget | undefined> {\n        if (await this.editorManager.getByUri(uri)) {\n            const editorWidget = await this.editorManager.open(uri, options);\n            if (editorWidget.parent instanceof EditorPreviewWidget) {\n                if (!options.preview) {\n                    editorWidget.parent.pinEditorWidget();\n                }\n                return editorWidget.parent;\n            }\n            return editorWidget;\n        }\n    }\n\n    protected async replaceCurrentPreview(uri: URI, options: PreviewEditorOpenerOptions): Promise<EditorPreviewWidget | undefined> {\n        const currentPreview = await this.currentEditorPreview;\n        if (currentPreview) {\n            const editorWidget = await this.editorManager.getOrCreateByUri(uri);\n            currentPreview.replaceEditorWidget(editorWidget);\n            return currentPreview;\n        }\n    }\n\n    protected openNewPreview(uri: URI, options: PreviewEditorOpenerOptions): Promise<EditorPreviewWidget> {\n        return this.currentEditorPreview = super.open(uri, options) as Promise<EditorPreviewWidget>;\n    }\n\n    protected createWidgetOptions(uri: URI, options?: WidgetOpenerOptions): EditorPreviewWidgetOptions {\n        return {\n            kind: 'editor-preview-widget',\n            id: EditorPreviewWidgetFactory.generateUniqueId(),\n            initialUri: uri.withoutFragment().toString(),\n            session: EditorPreviewWidgetFactory.sessionId\n        };\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 Google and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { interfaces } from 'inversify';\nimport { createPreferenceProxy, PreferenceProxy, PreferenceService, PreferenceContribution, PreferenceSchema } from '@theia/core/lib/browser';\n\nexport const EditorPreviewConfigSchema: PreferenceSchema = {\n    'type': 'object',\n    properties: {\n        'editor.enablePreview': {\n            type: 'boolean',\n            description: 'Controls whether editors are opened as previews when selected or single-clicked.',\n            default: true\n        },\n    }\n};\n\nexport interface EditorPreviewConfiguration {\n    'editor.enablePreview': boolean;\n}\n\nexport const EditorPreviewPreferences = Symbol('EditorPreviewPreferences');\nexport type EditorPreviewPreferences = PreferenceProxy<EditorPreviewConfiguration>;\n\nexport function createEditorPreviewPreferences(preferences: PreferenceService): EditorPreviewPreferences {\n    return createPreferenceProxy(preferences, EditorPreviewConfigSchema);\n}\n\nexport function bindEditorPreviewPreferences(bind: interfaces.Bind): void {\n    bind(EditorPreviewPreferences).toDynamicValue(ctx => {\n        const preferences = ctx.container.get<PreferenceService>(PreferenceService);\n        return createEditorPreviewPreferences(preferences);\n    }).inSingletonScope();\n    bind(PreferenceContribution).toConstantValue({ schema: EditorPreviewConfigSchema });\n}\n","/********************************************************************************\n * Copyright (C) 2018 Google and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport {\n    ApplicationShell, BaseWidget, DockPanel, Navigatable, PanelLayout, Saveable,\n    StatefulWidget, Title, Widget, WidgetConstructionOptions, WidgetManager\n} from '@theia/core/lib/browser';\nimport { Emitter, DisposableCollection } from '@theia/core/lib/common';\nimport URI from '@theia/core/lib/common/uri';\nimport { EditorWidget } from '@theia/editor/lib/browser';\nimport { Message, MessageLoop } from '@phosphor/messaging';\nimport { find } from '@phosphor/algorithm';\n\nexport interface PreviewViewState {\n    pinned: boolean,\n    editorState: object | undefined,\n    previewDescription: WidgetConstructionOptions | undefined\n}\n\nexport interface PreviewEditorPinnedEvent {\n    preview: EditorPreviewWidget,\n    editorWidget: EditorWidget\n}\n\n/** The class name added to Editor Preview Widget titles. */\nconst PREVIEW_TITLE_CLASS = ' theia-editor-preview-title-unpinned';\n\nexport class EditorPreviewWidget extends BaseWidget implements ApplicationShell.TrackableWidgetProvider, Navigatable, StatefulWidget {\n\n    protected pinned_: boolean;\n    protected pinListeners = new DisposableCollection();\n    protected onDidChangeTrackableWidgetsEmitter = new Emitter<Widget[]>();\n\n    private lastParent: DockPanel | undefined;\n\n    readonly onDidChangeTrackableWidgets = this.onDidChangeTrackableWidgetsEmitter.event;\n\n    protected onPinnedEmitter = new Emitter<PreviewEditorPinnedEvent>();\n\n    readonly onPinned = this.onPinnedEmitter.event;\n\n    constructor(protected widgetManager: WidgetManager, protected editorWidget_?: EditorWidget) {\n        super();\n        this.title.closable = true;\n        this.title.className += PREVIEW_TITLE_CLASS;\n        this.layout = new PanelLayout();\n        this.toDispose.push(this.onDidChangeTrackableWidgetsEmitter);\n        this.toDispose.push(this.onPinnedEmitter);\n        this.toDispose.push(this.pinListeners);\n    }\n\n    get editorWidget(): EditorWidget | undefined {\n        return this.editorWidget_;\n    }\n\n    get pinned(): boolean {\n        return this.pinned_;\n    }\n\n    get saveable(): Saveable | undefined {\n        if (this.editorWidget_) {\n            return this.editorWidget_.saveable;\n        }\n    }\n\n    getResourceUri(): URI | undefined {\n        return this.editorWidget_ && this.editorWidget_.getResourceUri();\n    }\n    createMoveToUri(resourceUri: URI): URI | undefined {\n        return this.editorWidget_ && this.editorWidget_.createMoveToUri(resourceUri);\n    }\n\n    pinEditorWidget(): void {\n        this.title.className = this.title.className.replace(PREVIEW_TITLE_CLASS, '');\n        this.pinListeners.dispose();\n        this.pinned_ = true;\n        this.onPinnedEmitter.fire({ preview: this, editorWidget: this.editorWidget_! });\n    }\n\n    replaceEditorWidget(editorWidget: EditorWidget): void {\n        if (editorWidget === this.editorWidget_) {\n            return;\n        }\n        if (this.editorWidget_) {\n            this.editorWidget_.dispose();\n        }\n        this.editorWidget_ = editorWidget;\n        this.attachPreviewWidget(this.editorWidget_);\n        this.onResize(Widget.ResizeMessage.UnknownSize);\n    }\n\n    protected onActivateRequest(msg: Message): void {\n        super.onActivateRequest(msg);\n        if (this.editorWidget_) {\n            this.editorWidget_.activate();\n        }\n    }\n\n    protected attachPreviewWidget(w: Widget): void {\n        (this.layout as PanelLayout).addWidget(w);\n        this.title.label = w.title.label;\n        this.title.iconClass = w.title.iconClass;\n        this.title.caption = w.title.caption;\n\n        if (Saveable.isSource(w)) {\n            Saveable.apply(this);\n            const dirtyListener = w.saveable.onDirtyChanged(() => {\n                dirtyListener.dispose();\n                this.pinEditorWidget();\n            });\n            this.toDispose.push(dirtyListener);\n        }\n        w.parent = this;\n        this.onDidChangeTrackableWidgetsEmitter.fire([w]);\n    }\n\n    protected onAfterAttach(msg: Message): void {\n        super.onAfterAttach(msg);\n        if (this.editorWidget_ && !this.editorWidget_.isAttached) {\n            this.attachPreviewWidget(this.editorWidget_);\n        }\n        this.addTabPinningLogic();\n    }\n\n    protected addTabPinningLogic(): void {\n        const parent = this.parent;\n        if (!this.pinned_ && parent instanceof DockPanel) {\n            if (!this.lastParent) {\n                this.lastParent = parent;\n            }\n\n            const tabBar = find(parent.tabBars(), bar => bar.titles.indexOf(this.title) !== -1);\n\n            // Widget has been dragged into a different panel\n            if (this.lastParent !== parent || !tabBar) {\n                this.pinEditorWidget();\n                return;\n            }\n\n            const layoutListener = (panel: DockPanel) => {\n                if (tabBar !== find(panel.tabBars(), bar => bar.titles.indexOf(this.title) !== -1)) {\n                    this.pinEditorWidget();\n                }\n            };\n            parent.layoutModified.connect(layoutListener);\n            this.pinListeners.push({ dispose: () => parent.layoutModified.disconnect(layoutListener) });\n\n            const tabMovedListener = (w: Widget, args: { title: Title<Widget> }) => {\n                if (args.title === this.title) {\n                    this.pinEditorWidget();\n                }\n            };\n            tabBar.tabMoved.connect(tabMovedListener);\n            this.pinListeners.push({ dispose: () => tabBar.tabMoved.disconnect(tabMovedListener) });\n\n            const attachDoubleClickListener = (attempt: number): number | undefined => {\n                const tabNode = tabBar.contentNode.children.item(tabBar.currentIndex);\n                if (!tabNode) {\n                    return attempt < 60 ? requestAnimationFrame(() => attachDoubleClickListener(++attempt)) : undefined;\n                }\n                const dblClickListener = (event: Event) => this.pinEditorWidget();\n                tabNode.addEventListener('dblclick', dblClickListener);\n                this.pinListeners.push({ dispose: () => tabNode.removeEventListener('dblclick', dblClickListener) });\n            };\n            requestAnimationFrame(() => attachDoubleClickListener(0));\n        }\n    }\n\n    protected onResize(msg: Widget.ResizeMessage): void {\n        if (this.editorWidget_) {\n            // Currently autosizing does not work with the Monaco Editor Widget\n            // https://github.com/eclipse-theia/theia/blob/c86a33b9ee0e5bb1dc49c66def123ffb2cadbfe4/packages/monaco/src/browser/monaco-editor.ts#L461\n            // After this is supported we can rely on the underlying widget to resize and remove\n            // the following if statement. (Without it, the editor will be initialized to its\n            // minimum size)\n            if (msg.width < 0 || msg.height < 0) {\n                const width = parseInt(this.node.style.width || '');\n                const height = parseInt(this.node.style.height || '');\n                if (width && height) {\n                    this.editorWidget_.editor.setSize({ width, height });\n                }\n            }\n            MessageLoop.sendMessage(this.editorWidget_, msg);\n        }\n    }\n\n    getTrackableWidgets(): Promise<Widget[]> {\n        return new Promise(\n            resolve => resolve(this.editorWidget_ ? [this.editorWidget_] : []));\n    }\n\n    storeState(): PreviewViewState {\n        return {\n            pinned: this.pinned_,\n            editorState: this.editorWidget_ ? this.editorWidget_.storeState() : undefined,\n            previewDescription: this.editorWidget_ ? this.widgetManager.getDescription(this.editorWidget_) : undefined\n        };\n    }\n\n    async restoreState(state: PreviewViewState): Promise<void> {\n        const { pinned, editorState, previewDescription } = state;\n        if (!this.editorWidget_ && previewDescription) {\n            const { factoryId, options } = previewDescription;\n            const editorWidget = await this.widgetManager.getOrCreateWidget(factoryId, options) as EditorWidget;\n            this.replaceEditorWidget(editorWidget);\n        }\n        if (this.editorWidget && editorState) {\n            this.editorWidget.restoreState(editorState);\n        }\n        if (pinned) {\n            this.pinEditorWidget();\n        }\n    }\n}\n","\nvar content = require(\"!!../../../../../css-loader/index.js!./index.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../css-loader/index.js!./index.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../css-loader/index.js!./index.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/********************************************************************************\\n * Copyright (C) 2018 Google and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.theia-editor-preview-title-unpinned .p-TabBar-tabLabel {\\n  font-style: italic;\\n}\\n\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../../../css-loader/lib/css-base.js\")(false);\n// imports\nexports.i(require(\"-!../../../../../css-loader/index.js!./editor-preview-widget.css\"), \"\");\n\n// module\nexports.push([module.id, \"/********************************************************************************\\n * Copyright (C) 2018 Google and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\", \"\"]);\n\n// exports\n"],"sourceRoot":""}