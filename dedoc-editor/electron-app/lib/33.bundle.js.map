{"version":3,"sources":["webpack:///../node_modules/@theia/debug/src/browser/debug-call-stack-item-type-key.ts","webpack:///../node_modules/@theia/debug/src/browser/debug-watch-manager.ts","webpack:///../node_modules/@theia/debug/src/browser/view/debug-stack-frames-source.tsx","webpack:///../node_modules/@theia/debug/src/browser/view/debug-stack-frames-widget.ts","webpack:///../node_modules/@theia/debug/src/browser/view/debug-threads-source.tsx","webpack:///../node_modules/@theia/debug/src/browser/view/debug-threads-widget.ts","webpack:///../node_modules/@theia/debug/src/browser/view/debug-view-model.ts","webpack:///../node_modules/@theia/debug/src/browser/view/debug-watch-expression.tsx"],"names":[],"mappings":"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","file":"33.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContextKey } from '@theia/core/lib/browser/context-key-service';\n\nexport const DebugCallStackItemTypeKey = Symbol('DebugCallStackItemTypeKey');\nexport type DebugCallStackItemTypeKey = ContextKey<'session' | 'thread' | 'stackFrame'>;\n","/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport { Emitter } from '@theia/core/lib/common/event';\nimport { StorageService } from '@theia/core/lib/browser/storage-service';\n\n@injectable()\nexport class DebugWatchManager {\n\n    @inject(StorageService)\n    protected readonly storage: StorageService;\n\n    protected readonly onDidChangeEmitter = new Emitter<void>();\n    readonly onDidChange = this.onDidChangeEmitter.event;\n\n    protected idSequence = 0;\n    protected readonly _watchExpressions = new Map<number, string>();\n\n    get watchExpressions(): IterableIterator<[number, string]> {\n        return this._watchExpressions.entries();\n    }\n\n    addWatchExpression(expression: string): number {\n        const id = this.idSequence++;\n        this._watchExpressions.set(id, expression);\n        this.onDidChangeEmitter.fire(undefined);\n        return id;\n    }\n\n    removeWatchExpression(id: number): boolean {\n        if (!this._watchExpressions.has(id)) {\n            return false;\n        }\n        this._watchExpressions.delete(id);\n        this.onDidChangeEmitter.fire(undefined);\n        return true;\n    }\n\n    removeWatchExpressions(): void {\n        if (this._watchExpressions.size) {\n            this.idSequence = 0;\n            this._watchExpressions.clear();\n            this.onDidChangeEmitter.fire(undefined);\n        }\n    }\n\n    async load(): Promise<void> {\n        const data = await this.storage.getData<DebugWatchData>(this.storageKey, {\n            expressions: []\n        });\n        this.restoreState(data);\n    }\n\n    save(): void {\n        const data = this.storeState();\n        this.storage.setData(this.storageKey, data);\n    }\n\n    protected get storageKey(): string {\n        return 'debug:watch';\n    }\n\n    protected storeState(): DebugWatchData {\n        return {\n            expressions: [...this._watchExpressions.values()]\n        };\n    }\n\n    protected restoreState(state: DebugWatchData): void {\n        for (const expression of state.expressions) {\n            this.addWatchExpression(expression);\n        }\n    }\n\n}\n\nexport interface DebugWatchData {\n    readonly expressions: string[];\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport * as React from 'react';\nimport { injectable, inject, postConstruct } from 'inversify';\nimport { TreeSource, TreeElement } from '@theia/core/lib/browser/source-tree';\nimport { DebugThread } from '../model/debug-thread';\nimport { DebugViewModel } from './debug-view-model';\nimport debounce = require('p-debounce');\n\n@injectable()\nexport class DebugStackFramesSource extends TreeSource {\n\n    @inject(DebugViewModel)\n    protected readonly model: DebugViewModel;\n\n    constructor() {\n        super({\n            placeholder: 'Not paused'\n        });\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this.refresh();\n        this.toDispose.push(this.model.onDidChange(() => this.refresh()));\n    }\n\n    protected readonly refresh = debounce(() => this.fireDidChange(), 100);\n\n    *getElements(): IterableIterator<TreeElement> {\n        const thread = this.model.currentThread;\n        if (!thread) {\n            return;\n        }\n        for (const frame of thread.frames) {\n            yield frame;\n\n        }\n        if (thread.stoppedDetails) {\n            const { framesErrorMessage, totalFrames } = thread.stoppedDetails;\n            if (framesErrorMessage) {\n                yield {\n                    render: () => <span title={framesErrorMessage}>{framesErrorMessage}</span>\n                };\n            }\n            if (totalFrames && totalFrames > thread.frameCount) {\n                yield new LoadMoreStackFrames(thread);\n            }\n        }\n    }\n}\n\nexport class LoadMoreStackFrames implements TreeElement {\n\n    constructor(\n        readonly thread: DebugThread\n    ) { }\n\n    render(): React.ReactNode {\n        return <span className='theia-load-more-frames'>Load More Stack Frames</span>;\n    }\n\n    async open(): Promise<void> {\n        const frames = await this.thread.fetchFrames();\n        if (frames[0]) {\n            this.thread.currentFrame = frames[0];\n        }\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, postConstruct, interfaces, Container } from 'inversify';\nimport { MenuPath } from '@theia/core';\nimport { TreeNode, NodeProps, SelectableTreeNode } from '@theia/core/lib/browser';\nimport { SourceTreeWidget, TreeElementNode } from '@theia/core/lib/browser/source-tree';\nimport { DebugStackFramesSource, LoadMoreStackFrames } from './debug-stack-frames-source';\nimport { DebugStackFrame } from '../model/debug-stack-frame';\nimport { DebugViewModel } from './debug-view-model';\nimport { DebugCallStackItemTypeKey } from '../debug-call-stack-item-type-key';\n\n@injectable()\nexport class DebugStackFramesWidget extends SourceTreeWidget {\n\n    static CONTEXT_MENU: MenuPath = ['debug-frames-context-menu'];\n    static createContainer(parent: interfaces.Container): Container {\n        const child = SourceTreeWidget.createContainer(parent, {\n            contextMenuPath: DebugStackFramesWidget.CONTEXT_MENU,\n            virtualized: false,\n            scrollIfActive: true\n        });\n        child.bind(DebugStackFramesSource).toSelf();\n        child.unbind(SourceTreeWidget);\n        child.bind(DebugStackFramesWidget).toSelf();\n        return child;\n    }\n    static createWidget(parent: interfaces.Container): DebugStackFramesWidget {\n        return DebugStackFramesWidget.createContainer(parent).get(DebugStackFramesWidget);\n    }\n\n    @inject(DebugStackFramesSource)\n    protected readonly frames: DebugStackFramesSource;\n\n    @inject(DebugViewModel)\n    protected readonly viewModel: DebugViewModel;\n\n    @inject(DebugCallStackItemTypeKey)\n    protected readonly debugCallStackItemTypeKey: DebugCallStackItemTypeKey;\n\n    @postConstruct()\n    protected init(): void {\n        super.init();\n        this.id = 'debug:frames:' + this.viewModel.id;\n        this.title.label = 'Call Stack';\n        this.toDispose.push(this.frames);\n        this.source = this.frames;\n\n        this.toDispose.push(this.viewModel.onDidChange(() => this.updateWidgetSelection()));\n        this.toDispose.push(this.model.onNodeRefreshed(() => this.updateWidgetSelection()));\n        this.toDispose.push(this.model.onSelectionChanged(() => this.updateModelSelection()));\n    }\n\n    protected updatingSelection = false;\n    protected async updateWidgetSelection(): Promise<void> {\n        if (this.updatingSelection) {\n            return;\n        }\n        this.updatingSelection = true;\n        try {\n            const { currentFrame } = this.viewModel;\n            if (currentFrame) {\n                const node = this.model.getNode(currentFrame.id);\n                if (SelectableTreeNode.is(node)) {\n                    this.model.selectNode(node);\n                }\n            }\n        } finally {\n            this.updatingSelection = false;\n        }\n    }\n    protected async updateModelSelection(): Promise<void> {\n        if (this.updatingSelection) {\n            return;\n        }\n        this.updatingSelection = true;\n        try {\n            const node = this.model.selectedNodes[0];\n            if (TreeElementNode.is(node)) {\n                if (node.element instanceof DebugStackFrame) {\n                    node.element.thread.currentFrame = node.element;\n                    this.debugCallStackItemTypeKey.set('stackFrame');\n                }\n            }\n        } finally {\n            this.updatingSelection = false;\n        }\n    }\n\n    protected toContextMenuArgs(node: SelectableTreeNode): [string | number] | undefined {\n        if (TreeElementNode.is(node)) {\n            if (node.element instanceof DebugStackFrame) {\n                const source = node.element.source;\n                if (source) {\n                    if (source.inMemory) {\n                        const path = source.raw.path || source.raw.sourceReference;\n                        if (path !== undefined) {\n                            return [path];\n                        }\n                    } else {\n                        return [source.uri.toString()];\n                    }\n                }\n            }\n        }\n        return undefined;\n    }\n\n    protected handleClickEvent(node: TreeNode | undefined, event: React.MouseEvent<HTMLElement>): void {\n        if (TreeElementNode.is(node) && node.element instanceof LoadMoreStackFrames) {\n            node.element.open();\n        }\n        super.handleClickEvent(node, event);\n    }\n\n    protected getDefaultNodeStyle(node: TreeNode, props: NodeProps): React.CSSProperties | undefined {\n        return undefined;\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, postConstruct } from 'inversify';\nimport { TreeSource, TreeElement } from '@theia/core/lib/browser/source-tree';\nimport { DebugViewModel } from './debug-view-model';\n\n@injectable()\nexport class DebugThreadsSource extends TreeSource {\n\n    @inject(DebugViewModel)\n    protected readonly model: DebugViewModel;\n\n    constructor() {\n        super({\n            placeholder: 'Not running'\n        });\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this.fireDidChange();\n        this.toDispose.push(this.model.onDidChange(() => this.fireDidChange()));\n    }\n\n    get multiSession(): boolean {\n        return this.model.sessionCount > 1;\n    }\n\n    getElements(): IterableIterator<TreeElement> {\n        if (this.model.sessionCount === 1 && this.model.session && this.model.session.threadCount) {\n            return this.model.session.threads;\n        }\n        return this.model.sessions;\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, postConstruct, interfaces, Container } from 'inversify';\nimport { MenuPath } from '@theia/core';\nimport { TreeNode, NodeProps, SelectableTreeNode } from '@theia/core/lib/browser';\nimport { SourceTreeWidget, TreeElementNode } from '@theia/core/lib/browser/source-tree';\nimport { DebugThreadsSource } from './debug-threads-source';\nimport { DebugSession } from '../debug-session';\nimport { DebugThread } from '../model/debug-thread';\nimport { DebugViewModel } from '../view/debug-view-model';\nimport { DebugCallStackItemTypeKey } from '../debug-call-stack-item-type-key';\n\n@injectable()\nexport class DebugThreadsWidget extends SourceTreeWidget {\n\n    static CONTEXT_MENU: MenuPath = ['debug-threads-context-menu'];\n    static CONTROL_MENU = [...DebugThreadsWidget.CONTEXT_MENU, 'a_control'];\n    static TERMINATE_MENU = [...DebugThreadsWidget.CONTEXT_MENU, 'b_terminate'];\n    static OPEN_MENU = [...DebugThreadsWidget.CONTEXT_MENU, 'c_open'];\n    static createContainer(parent: interfaces.Container): Container {\n        const child = SourceTreeWidget.createContainer(parent, {\n            contextMenuPath: DebugThreadsWidget.CONTEXT_MENU,\n            virtualized: false,\n            scrollIfActive: true\n        });\n        child.bind(DebugThreadsSource).toSelf();\n        child.unbind(SourceTreeWidget);\n        child.bind(DebugThreadsWidget).toSelf();\n        return child;\n    }\n    static createWidget(parent: interfaces.Container): DebugThreadsWidget {\n        return DebugThreadsWidget.createContainer(parent).get(DebugThreadsWidget);\n    }\n\n    @inject(DebugThreadsSource)\n    protected readonly threads: DebugThreadsSource;\n\n    @inject(DebugViewModel)\n    protected readonly viewModel: DebugViewModel;\n\n    @inject(DebugCallStackItemTypeKey)\n    protected readonly debugCallStackItemTypeKey: DebugCallStackItemTypeKey;\n\n    @postConstruct()\n    protected init(): void {\n        super.init();\n        this.id = 'debug:threads:' + this.viewModel.id;\n        this.title.label = 'Threads';\n        this.toDispose.push(this.threads);\n        this.source = this.threads;\n\n        this.toDispose.push(this.viewModel.onDidChange(() => this.updateWidgetSelection()));\n        this.toDispose.push(this.model.onSelectionChanged(() => this.updateModelSelection()));\n    }\n\n    protected updatingSelection = false;\n    protected updateWidgetSelection(): void {\n        if (this.updatingSelection) {\n            return;\n        }\n        this.updatingSelection = true;\n        try {\n            const { currentThread } = this.viewModel;\n            if (currentThread) {\n                const node = this.model.getNode(currentThread.id);\n                if (SelectableTreeNode.is(node)) {\n                    this.model.selectNode(node);\n                }\n            }\n        } finally {\n            this.updatingSelection = false;\n        }\n    }\n    protected updateModelSelection(): void {\n        if (this.updatingSelection) {\n            return;\n        }\n        this.updatingSelection = true;\n        try {\n            const node = this.model.selectedNodes[0];\n            if (TreeElementNode.is(node)) {\n                if (node.element instanceof DebugSession) {\n                    this.viewModel.currentSession = node.element;\n                    this.debugCallStackItemTypeKey.set('session');\n                } else if (node.element instanceof DebugThread) {\n                    node.element.session.currentThread = node.element;\n                    this.debugCallStackItemTypeKey.set('thread');\n                }\n            }\n        } finally {\n            this.updatingSelection = false;\n        }\n    }\n\n    protected toContextMenuArgs(node: SelectableTreeNode): [number] | undefined {\n        if (TreeElementNode.is(node) && node.element instanceof DebugThread) {\n            return [node.element.raw.id];\n        }\n        return undefined;\n    }\n\n    protected getDefaultNodeStyle(node: TreeNode, props: NodeProps): React.CSSProperties | undefined {\n        if (this.threads.multiSession) {\n            return super.getDefaultNodeStyle(node, props);\n        }\n        return undefined;\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport debounce from 'p-debounce';\nimport { injectable, inject, postConstruct } from 'inversify';\nimport { Disposable, DisposableCollection, Event, Emitter } from '@theia/core/lib/common';\nimport URI from '@theia/core/lib/common/uri';\nimport { DebugSession, DebugState } from '../debug-session';\nimport { DebugSessionManager } from '../debug-session-manager';\nimport { DebugThread } from '../model/debug-thread';\nimport { DebugStackFrame } from '../model/debug-stack-frame';\nimport { DebugSourceBreakpoint } from '../model/debug-source-breakpoint';\nimport { DebugWatchExpression } from './debug-watch-expression';\nimport { DebugWatchManager } from '../debug-watch-manager';\nimport { DebugFunctionBreakpoint } from '../model/debug-function-breakpoint';\n\nexport const DebugViewOptions = Symbol('DebugViewOptions');\nexport interface DebugViewOptions {\n    session?: DebugSession\n}\n\n@injectable()\nexport class DebugViewModel implements Disposable {\n\n    protected readonly onDidChangeEmitter = new Emitter<void>();\n    readonly onDidChange: Event<void> = this.onDidChangeEmitter.event;\n    protected fireDidChange(): void {\n        this.refreshWatchExpressions();\n        this.onDidChangeEmitter.fire(undefined);\n    }\n\n    protected readonly onDidChangeBreakpointsEmitter = new Emitter<URI>();\n    readonly onDidChangeBreakpoints: Event<URI> = this.onDidChangeBreakpointsEmitter.event;\n    protected fireDidChangeBreakpoints(uri: URI): void {\n        this.onDidChangeBreakpointsEmitter.fire(uri);\n    }\n\n    protected readonly _watchExpressions = new Map<number, DebugWatchExpression>();\n\n    protected readonly onDidChangeWatchExpressionsEmitter = new Emitter<void>();\n    readonly onDidChangeWatchExpressions = this.onDidChangeWatchExpressionsEmitter.event;\n    protected fireDidChangeWatchExpressions(): void {\n        this.onDidChangeWatchExpressionsEmitter.fire(undefined);\n    }\n\n    protected readonly toDispose = new DisposableCollection(\n        this.onDidChangeEmitter,\n        this.onDidChangeBreakpointsEmitter,\n        this.onDidChangeWatchExpressionsEmitter\n    );\n\n    @inject(DebugViewOptions)\n    protected readonly options: DebugViewOptions;\n\n    @inject(DebugSessionManager)\n    protected readonly manager: DebugSessionManager;\n\n    @inject(DebugWatchManager)\n    protected readonly watch: DebugWatchManager;\n\n    protected readonly _sessions = new Set<DebugSession>();\n    get sessions(): IterableIterator<DebugSession> {\n        return this._sessions.values();\n    }\n    get sessionCount(): number {\n        return this._sessions.size;\n    }\n    push(session: DebugSession): void {\n        if (this._sessions.has(session)) {\n            return;\n        }\n        this._sessions.add(session);\n        this.fireDidChange();\n    }\n    delete(session: DebugSession): boolean {\n        if (this._sessions.delete(session)) {\n            this.fireDidChange();\n            return true;\n        }\n        return false;\n    }\n\n    get session(): DebugSession | undefined {\n        return this.sessions.next().value;\n    }\n    get id(): string {\n        return this.session && this.session.id || '-1';\n    }\n    get label(): string {\n        return this.session && this.session.label || 'Unknown Session';\n    }\n    has(session: DebugSession | undefined): session is DebugSession {\n        return !!session && this._sessions.has(session);\n    }\n\n    @postConstruct()\n    protected init(): void {\n        if (this.options.session) {\n            this.push(this.options.session);\n        }\n        this.toDispose.push(this.manager.onDidChangeActiveDebugSession(({ previous, current }) => {\n            if (this.has(previous) && !this.has(current)) {\n                this.fireDidChange();\n            }\n        }));\n        this.toDispose.push(this.manager.onDidChange(current => {\n            if (this.has(current)) {\n                this.fireDidChange();\n            }\n        }));\n        this.toDispose.push(this.manager.onDidChangeBreakpoints(({ session, uri }) => {\n            if (!session || session === this.currentSession) {\n                this.fireDidChangeBreakpoints(uri);\n            }\n        }));\n        this.updateWatchExpressions();\n        this.toDispose.push(this.watch.onDidChange(() => this.updateWatchExpressions()));\n    }\n\n    dispose(): void {\n        this.toDispose.dispose();\n    }\n\n    get currentSession(): DebugSession | undefined {\n        const { currentSession } = this.manager;\n        return this.has(currentSession) && currentSession || this.session;\n    }\n    set currentSession(currentSession: DebugSession | undefined) {\n        this.manager.currentSession = currentSession;\n    }\n\n    get state(): DebugState {\n        const { currentSession } = this;\n        return currentSession && currentSession.state || DebugState.Inactive;\n    }\n    get currentThread(): DebugThread | undefined {\n        const { currentSession } = this;\n        return currentSession && currentSession.currentThread;\n    }\n    get currentFrame(): DebugStackFrame | undefined {\n        const { currentThread } = this;\n        return currentThread && currentThread.currentFrame;\n    }\n\n    get breakpoints(): DebugSourceBreakpoint[] {\n        return this.manager.getBreakpoints(this.currentSession);\n    }\n\n    get functionBreakpoints(): DebugFunctionBreakpoint[] {\n        return this.manager.getFunctionBreakpoints(this.currentSession);\n    }\n\n    async start(): Promise<void> {\n        const { session } = this;\n        if (!session) {\n            return;\n        }\n        const newSession = await this.manager.start(session.options);\n        if (newSession) {\n            this._sessions.delete(session);\n            this._sessions.add(newSession);\n            this.fireDidChange();\n        }\n    }\n\n    async restart(): Promise<void> {\n        const { session } = this;\n        if (!session) {\n            return;\n        }\n        const newSession = await this.manager.restart(session);\n        if (newSession !== session) {\n            this._sessions.delete(session);\n            this._sessions.add(newSession);\n        }\n        this.fireDidChange();\n    }\n\n    get watchExpressions(): IterableIterator<DebugWatchExpression> {\n        return this._watchExpressions.values();\n    }\n\n    async addWatchExpression(expression: string = ''): Promise<DebugWatchExpression | undefined> {\n        const watchExpression = new DebugWatchExpression({\n            id: Number.MAX_SAFE_INTEGER,\n            expression,\n            session: () => this.currentSession,\n            onDidChange: () => { /* no-op */ }\n        });\n        await watchExpression.open();\n        if (!watchExpression.expression) {\n            return undefined;\n        }\n        const id = this.watch.addWatchExpression(watchExpression.expression);\n        return this._watchExpressions.get(id);\n    }\n\n    removeWatchExpressions(): void {\n        this.watch.removeWatchExpressions();\n    }\n\n    removeWatchExpression(expression: DebugWatchExpression): void {\n        this.watch.removeWatchExpression(expression.id);\n    }\n\n    protected updateWatchExpressions(): void {\n        let added = false;\n        const toRemove = new Set(this._watchExpressions.keys());\n        for (const [id, expression] of this.watch.watchExpressions) {\n            toRemove.delete(id);\n            if (!this._watchExpressions.has(id)) {\n                added = true;\n                const watchExpression = new DebugWatchExpression({\n                    id,\n                    expression,\n                    session: () => this.currentSession,\n                    onDidChange: () => this.fireDidChangeWatchExpressions()\n                });\n                this._watchExpressions.set(id, watchExpression);\n                watchExpression.evaluate();\n            }\n        }\n        for (const id of toRemove) {\n            this._watchExpressions.delete(id);\n        }\n        if (added || toRemove.size) {\n            this.fireDidChangeWatchExpressions();\n        }\n    }\n\n    protected refreshWatchExpressionsQueue = Promise.resolve();\n    protected refreshWatchExpressions = debounce(() => {\n        this.refreshWatchExpressionsQueue = this.refreshWatchExpressionsQueue.then(async () => {\n            try {\n                for (const watchExpression of this.watchExpressions) {\n                    await watchExpression.evaluate();\n                }\n            } catch (e) {\n                console.error('Failed to refresh watch expressions: ', e);\n            }\n        });\n    }, 50);\n\n}\n","/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport * as React from 'react';\nimport { SingleTextInputDialog } from '@theia/core/lib/browser/dialogs';\nimport { ExpressionItem, DebugSessionProvider } from '../console/debug-console-items';\nimport { DebugProtocol } from 'vscode-debugprotocol';\n\nexport class DebugWatchExpression extends ExpressionItem {\n\n    readonly id: number;\n\n    constructor(protected readonly options: {\n        id: number,\n        expression: string,\n        session: DebugSessionProvider,\n        onDidChange: () => void\n    }) {\n        super(options.expression, options.session);\n        this.id = options.id;\n    }\n\n    async evaluate(): Promise<void> {\n        await super.evaluate('watch');\n    }\n\n    protected setResult(body?: DebugProtocol.EvaluateResponse['body']): void {\n        // overridden to ignore error\n        super.setResult(body);\n        this.options.onDidChange();\n    }\n\n    render(): React.ReactNode {\n        return <div className='theia-debug-console-variable'>\n            <span title={this.type || this._expression} className='name'>{this._expression}: </span>\n            <span title={this._value} ref={this.setValueRef}>{this._value}</span>\n        </div >;\n    }\n\n    async open(): Promise<void> {\n        const input = new SingleTextInputDialog({\n            title: 'Edit Watch Expression',\n            initialValue: this.expression\n        });\n        const newValue = await input.open();\n        if (newValue !== undefined) {\n            this._expression = newValue;\n            await this.evaluate();\n        }\n    }\n\n    get supportCopyValue(): boolean {\n        return !!this.valueRef && document.queryCommandSupported('copy');\n    }\n    copyValue(): void {\n        const selection = document.getSelection();\n        if (this.valueRef && selection) {\n            selection.selectAllChildren(this.valueRef);\n            document.execCommand('copy');\n        }\n    }\n    protected valueRef: HTMLSpanElement | undefined;\n    protected setValueRef = (valueRef: HTMLSpanElement | null) => this.valueRef = valueRef || undefined;\n\n}\n"],"sourceRoot":""}