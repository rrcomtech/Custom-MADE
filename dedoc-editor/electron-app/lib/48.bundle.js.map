{"version":3,"sources":["webpack:///../node_modules/@theia/core/src/browser/widgets/alert-message.tsx","webpack:///../node_modules/@theia/keymaps/src/browser/keybindings-widget.tsx","webpack:///../node_modules/@theia/keymaps/src/browser/keymaps-frontend-contribution.ts","webpack:///../node_modules/@theia/keymaps/src/browser/keymaps-frontend-module.ts","webpack:///../node_modules/@theia/keymaps/src/browser/keymaps-monaco-contribution.ts","webpack:///../node_modules/@theia/keymaps/src/browser/keymaps-service.ts","webpack:///../node_modules/@theia/keymaps/src/browser/style/index.css?66db","webpack:///../node_modules/@theia/userstorage/src/browser/index.ts","webpack:///../node_modules/@theia/keymaps/src/browser/style/index.css"],"names":[],"mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;AAElF,+EAAgC;AAWhC,IAAM,gBAAgB,GAAG;IACrB,IAAI,EAAE,mBAAmB;IACzB,OAAO,EAAE,oBAAoB;IAC7B,OAAO,EAAE,0BAA0B;IACnC,KAAK,EAAE,oBAAoB;CAC9B,CAAC;AAOF;IAAkC,gCAAkC;IAApE;;IAcA,CAAC;IAZG,6BAAM,GAAN;QACI,OAAO,6BAAK,SAAS,EAAC,+BAA+B;YACjD,6BAAK,SAAS,EAAE,WAAS,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,EAAE,WAAQ;gBAC1D,6BAAK,SAAS,EAAC,sBAAsB;oBACjC,2BAAG,SAAS,EAAE,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAM;;oBACpD,IAAI,CAAC,KAAK,CAAC,MAAM,CAChB;gBACN,6BAAK,SAAS,EAAC,uBAAuB,IAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAO,CAChE,CACJ,CAAC;IACX,CAAC;IAEL,mBAAC;AAAD,CAAC,CAdiC,KAAK,CAAC,SAAS,GAchD;AAdY,oCAAY;;;;;;;;;;;;;;ACvCzB;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAElF,+EAAgC;AAChC,sGAA6C;AAC7C,mFAA+B;AAC/B,qGAA8D;AAC9D,yHAA8D;AAC9D,+HAA0E;AAC1E,gKAA2E;AAC3E,uHAEiC;AACjC,sIAAmD;AACnD,mKAA6E;AAiC7E;IAAsC,oCAAW;IADjD;QAAA,qEAilBC;QAlkBG;;WAEG;QACO,WAAK,GAAqB,EAAE,CAAC;QAEvC;;WAEG;QACO,WAAK,GAAW,EAAE,CAAC;QAE7B;;WAEG;QACgB,YAAM,GAAG,wBAAwB,CAAC;QACrD;;WAEG;QACgB,yBAAmB,GAAG,qBAAqB,CAAC;QAE/D;;;WAGG;QACgB,kBAAY,GAAG;YAC9B,GAAG,EAAE,SAAS;YACd,IAAI,EAAE,UAAU;SACnB,CAAC;QAEiB,wBAAkB,GAAG,IAAI,eAAO,EAAQ,CAAC;QACnD,iBAAW,GAAgB,KAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC;QAElE;;WAEG;QACgB,uBAAiB,GAAe,QAAQ,CAAC,cAAM,YAAI,CAAC,mBAAmB,EAAE,EAA1B,CAA0B,EAAE,EAAE,CAAC,CAAC;;IAgiBtG,CAAC;yBAhlBY,gBAAgB;IAkDzB;;OAEG;IAEO,+BAAI,GAAd;QADA,iBAmBC;QAjBG,IAAI,CAAC,EAAE,GAAG,kBAAgB,CAAC,EAAE,CAAC;QAC9B,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,kBAAgB,CAAC,KAAK,CAAC;QAC1C,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,kBAAgB,CAAC,KAAK,CAAC;QAC5C,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,YAAY,CAAC;QACpC,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,MAAM,EAAE,CAAC;QAEd,2CAA2C;QAC3C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAE7B,gFAAgF;QAChF,IAAI,IAAI,CAAC,cAAc,CAAC,kBAAkB,EAAE;YACxC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC;gBACvD,KAAI,CAAC,mBAAmB,EAAE,CAAC;gBAC3B,KAAI,CAAC,MAAM,EAAE,CAAC;YAClB,CAAC,CAAC,CAAC,CAAC;SACP;IACL,CAAC;IAED;;;OAGG;IACI,oCAAS,GAAhB;QACI,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;IAC/B,CAAC;IAED;;OAEG;IACI,sCAAW,GAAlB;QACI,IAAM,MAAM,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QACtC,IAAI,MAAM,EAAE;YACR,MAAM,CAAC,KAAK,GAAG,EAAE,CAAC;YAClB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;YAChB,IAAI,CAAC,mBAAmB,EAAE,CAAC;SAC9B;IACL,CAAC;IAES,4CAAiB,GAA3B,UAA4B,GAAY;QACpC,iBAAM,iBAAiB,YAAC,GAAG,CAAC,CAAC;QAC7B,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAED;;OAEG;IACO,8CAAmB,GAA7B;QAAA,iBA+FC;QA9FG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACxC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAM,WAAW,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3C,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;QAC7E,IAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC9B,KAAK,CAAC,OAAO,CAAC,cAAI;;YACd,IAAM,IAAI,GAAuC,CAAC,SAAS,EAAE,YAAY,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC;YAChG,IAAI,OAAO,GAAG,KAAK,CAAC;oCACT,GAAG;gBACV,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;gBAChC,IAAI,MAAM,EAAE;oBACR,IAAM,UAAU,GAAG,KAAK,CAAC,KAAK,CAAC,KAAI,CAAC,KAAK,EAAE,MAAM,EAAE,KAAI,CAAC,YAAY,CAAC,CAAC;oBACtE,IAAI,UAAU,EAAE;wBACZ,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,QAAQ,CAAC;wBACvC,OAAO,GAAG,IAAI,CAAC;qBAClB;yBAAM;wBACH,0DAA0D;wBAC1D,IAAI,GAAG,KAAK,YAAY,EAAE;4BACtB,IAAM,UAAU,GAAG,KAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;4BAEzC,qBAAqB;4BACrB,IAAM,SAAS,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;4BACpC,uDAAuD;4BACvD,IAAM,eAAa,GAAG,CAAC,CAAC,CAAC,CAAC;4BAC1B,IAAI,cAAY,GAAa,EAAE,CAAC;4BAChC,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;gCACtB,SAAS,CAAC,OAAO,CAAC,eAAK;oCACnB,IAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oCAC/B,eAAa,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,eAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oCACrD,cAAY,CAAC,IAAI,OAAjB,cAAY,WAAS,KAAK,GAAE;gCAChC,CAAC,CAAC,CAAC;6BACN;iCAAM;gCACH,cAAY,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;6BACpC;4BACD,eAAa,CAAC,KAAK,EAAE,CAAC;4BAEtB,IAAM,gBAAc,YAAO,cAAY,CAAC,CAAC;4BACzC,IAAI,cAAY,GAAG,CAAC,CAAC;4BAErB,UAAU,CAAC,OAAO,CAAC,mBAAS;gCACxB,IAAI,aAAa,GAAsB,EAAE,QAAQ,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC;gCAClE,IAAI,QAAQ,GAAG,CAAC,CAAC,CAAC;gCAClB,IAAI,MAAM,EAAE;oCACR,cAAY,CAAC,OAAO,CAAC,UAAC,WAAmB;wCACrC,qEAAqE;wCACrE,IAAM,cAAc,GAAG,KAAK,CAAC,KAAK,CAAC,SAAS,EAAE,WAAW,EAAE,KAAI,CAAC,YAAY,CAAC,CAAC;wCAC9E,oDAAoD;wCACpD,IAAI,cAAc,IAAI,cAAc,CAAC,KAAK,GAAG,aAAa,CAAC,KAAK,EAAE;4CAC9D,aAAa,GAAG,cAAc,CAAC;4CAC/B,qCAAqC;4CACrC,QAAQ,GAAG,gBAAc,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;yCAClD;oCACL,CAAC,CAAC,CAAC;oCAEH,IAAM,WAAW,GAAG,aAAa,CAAC,QAAQ,CAAC;oCAC3C,IAAI,WAAW,EAAE;wCACb,IAAI,QAAQ,GAAG,CAAC,CAAC,EAAE;4CACf,gBAAc,CAAC,QAAQ,CAAC,GAAG,WAAW,CAAC;yCAC1C;wCACD,qDAAqD;wCACrD,cAAY,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;wCACrC,cAAY,IAAI,CAAC,CAAC;qCACrB;iCACJ;4BACL,CAAC,CAAC,CAAC;4BACH,IAAI,cAAY,KAAK,UAAU,CAAC,MAAM,EAAE;gCACpC,kCAAkC;gCAClC,IAAI,eAAa,CAAC,MAAM,GAAG,CAAC,EAAE;oCAC1B,IAAM,qBAAmB,GAAG,EAAE,CAAC;oCAC/B,gBAAc,CAAC,OAAO,CAAC,UAAC,SAAS,EAAE,KAAK;wCACpC,IAAI,KAAK,KAAK,CAAC,EAAE;4CACb,qBAAmB,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;yCACzC;6CAAM,IAAI,eAAa,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE;4CAC5C,qBAAmB,CAAC,MAAM,CAAC,GAAG,GAAG,SAAS,CAAC,CAAC;yCAC/C;6CAAM;4CACH,qBAAmB,CAAC,MAAM,CAAC,GAAG,GAAG,SAAS,CAAC,CAAC;yCAC/C;oCACL,CAAC,CAAC,CAAC;oCACH,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,qBAAmB,CAAC;iCAC1C;gCAED,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,gBAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gCAC5C,OAAO,GAAG,IAAI,CAAC;6BAClB;yBACJ;qBACJ;iBACJ;;;gBA9EL,KAAkB,0BAAI;oBAAjB,IAAM,GAAG;4BAAH,GAAG;iBA+Eb;;;;;;;;;YAED,IAAI,OAAO,EAAE;gBACT,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACzB;QACL,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,EAAE,CAAC;IAClB,CAAC;IAED;;;OAGG;IACO,0CAAe,GAAzB;QACI,OAAO,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAqB,CAAC;IACpE,CAAC;IAED;;OAEG;IACO,0CAAe,GAAzB;QACI,IAAM,KAAK,GAAG,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;QACnD,IAAI,KAAK,EAAE;YACN,KAA0B,CAAC,KAAK,EAAE,CAAC;YACnC,KAA0B,CAAC,MAAM,EAAE,CAAC;SACxC;IACL,CAAC;IAED;;OAEG;IACO,iCAAM,GAAhB;QACI,OAAO,6BAAK,EAAE,EAAC,mBAAmB;YAC7B,IAAI,CAAC,YAAY,EAAE;YACnB,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,EAAE,CAClE,CAAC;IACX,CAAC;IAED;;OAEG;IACO,uCAAY,GAAtB;QACI,OAAO;YACH,6BAAK,SAAS,EAAC,qBAAqB;gBAChC,+BACI,EAAE,EAAC,WAAW,EACd,SAAS,EAAE,iBAAc,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAE,EAClE,IAAI,EAAC,MAAM,EACX,WAAW,EAAC,oBAAoB,EAChC,YAAY,EAAC,KAAK,EAClB,OAAO,EAAE,IAAI,CAAC,iBAAiB,GACjC,CACA,CACJ,CAAC;IACX,CAAC;IAED;;OAEG;IACO,wCAAa,GAAvB;QACI,OAAO,oBAAC,4BAAY,IAChB,IAAI,EAAC,SAAS,EACd,MAAM,EAAC,mBAAmB,GAC5B,CAAC;IACP,CAAC;IAED;;OAEG;IACO,sCAAW,GAArB;QACI,OAAO,6BAAK,EAAE,EAAC,oBAAoB;YAC/B,6BAAK,SAAS,EAAC,IAAI;gBACf;oBACI;wBACI;4BACI,4BAAI,SAAS,EAAC,WAAW,GAAM;4BAC/B,4BAAI,SAAS,EAAC,UAAU,cAAa;4BACrC,4BAAI,SAAS,EAAC,eAAe,iBAAgB;4BAC7C,4BAAI,SAAS,EAAC,YAAY,qBAAoB;4BAC9C,4BAAI,SAAS,EAAC,WAAW,aAAY,CACpC,CACD;oBACR,mCACK,IAAI,CAAC,UAAU,EAAE,CACd,CACJ,CACN,CACJ,CAAC;IACX,CAAC;IAED;;OAEG;IACO,qCAAU,GAApB;QAAA,iBAIC;QAHG,OAAO,oBAAC,KAAK,CAAC,QAAQ,QACjB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAC,IAAI,EAAE,KAAK,IAAK,YAAI,CAAC,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAA3B,CAA2B,CAAC,CAChD,CAAC;IACtB,CAAC;IAES,oCAAS,GAAnB,UAAoB,IAAoB,EAAE,KAAa;QAAvD,iBAoBC;QAnBW,0BAAO,EAAE,4BAAU,CAAU;QACrC,oDAAoD;QACpD,OAAO,4BAAI,SAAS,EAAC,aAAa,EAAC,GAAG,EAAE,KAAK,EAAE,aAAa,EAAE,cAAM,YAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAzB,CAAyB;YACzF,4BAAI,SAAS,EAAC,YAAY,IACrB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CACxB;YACL,4BAAI,SAAS,EAAC,UAAU,EAAC,KAAK,EAAE,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IACxD,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAC3C;YACL,4BAAI,KAAK,EAAE,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,EAAE,SAAS,EAAC,iCAAiC,IACtF,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAC7C;YACL,4BAAI,SAAS,EAAC,YAAY,EAAC,KAAK,EAAE,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC;gBAC9D,kCAAO,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAQ,CACzD;YACL,4BAAI,SAAS,EAAC,WAAW,EAAC,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC;gBAC3D,8BAAM,SAAS,EAAC,WAAW,IAAE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAQ,CAC9E,CACJ,CAAC;IACV,CAAC;IAED;;;OAGG;IACO,wCAAa,GAAvB,UAAwB,IAAoB;QACxC,OAAO,8BAAM,SAAS,EAAC,kBAAkB;YAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;YAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAQ,CAAC;IACrG,CAAC;IAED;;;OAGG;IACO,qCAAU,GAApB,UAAqB,IAAoB;QAAzC,iBAEC;QADG,OAAO,2BAAG,KAAK,EAAC,iBAAiB,EAAC,IAAI,EAAC,GAAG,EAAC,OAAO,EAAE,WAAC,IAAI,YAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAzB,CAAyB;YAAE,2BAAG,SAAS,EAAC,6BAA6B,GAAK,CAAI,CAAC;IAC5I,CAAC;IAED;;;;OAIG;IACO,sCAAW,GAArB,UAAsB,IAAoB;QAA1C,iBAGC;QAFG,OAAO,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,KAAK,yBAAe,CAAC,IAAI,CAAC;YACtE,CAAC,CAAC,2BAAG,KAAK,EAAC,kBAAkB,EAAC,IAAI,EAAC,GAAG,EAAC,OAAO,EAAE,WAAC,IAAI,YAAI,CAAC,eAAe,CAAC,IAAI,CAAC,EAA1B,CAA0B;gBAAE,2BAAG,SAAS,EAAC,2BAA2B,GAAK,CAAI,CAAC,CAAC,CAAC,EAAE,CAAC;IAChJ,CAAC;IAED;;;OAGG;IACO,2CAAgB,GAA1B,UAA2B,UAAkB;QAA7C,iBAqCC;QApCG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;YACpB,OAAO,SAAS,CAAC;SACpB;QACD,IAAM,KAAK,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;QACnD,UAAU,GAAG,UAAU,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;QAC5C,IAAM,IAAI,GAAG,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAEnC,OAAO,oBAAC,KAAK,CAAC,QAAQ,QAEd,IAAI,CAAC,GAAG,CAAC,UAAC,GAAG,EAAE,KAAK;YAChB,IAAI,KAAK,KAAK,CAAC,EAAE;gBACb,OAAO,8BAAM,GAAG,EAAE,KAAK,EAAE,SAAS,EAAC,uBAAuB,IACrD,KAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,CACzB,CAAC;aACX;iBAAM,IAAI,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;gBAC1B,uDAAuD;gBACvD,kDAAkD;gBAClD,IAAI,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;gBAC9C,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;oBACxB,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;iBAC9B;gBACD,OAAO,oBAAC,KAAK,CAAC,QAAQ,IAAC,GAAG,EAAE,KAAK;oBAC7B,8BAAM,SAAS,EAAC,6BAA6B,QAAS;oBACtD,8BAAM,SAAS,EAAC,uBAAuB,IAAE,KAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAQ;oBACpF,8BAAM,SAAS,EAAC,6BAA6B,mBAAoB;oBACjE,8BAAM,SAAS,EAAC,uBAAuB,IAAE,KAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAQ,CACvE,CAAC;aACrB;iBAAM;gBACH,OAAO,oBAAC,KAAK,CAAC,QAAQ,IAAC,GAAG,EAAE,KAAK;oBAC7B,8BAAM,SAAS,EAAC,6BAA6B,QAAS;oBACtD,8BAAM,SAAS,EAAC,uBAAuB,IAAE,KAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAQ,CAC9D,CAAC;aACrB;QACL,CAAC,CAAC,CAEO,CAAC;IACtB,CAAC;IAED;;;;OAIG;IACO,mCAAQ,GAAlB;QAAA,iBAiCC;QAhCG,oCAAoC;QACpC,IAAM,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC;QAC/C,IAAM,KAAK,GAAqB,EAAE,CAAC;QACnC,8BAA8B;QAC9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACtC,IAAM,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC5B,0CAA0C;YAC1C,IAAI,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;gBAC5B,SAAS;aACZ;YACD,IAAM,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,wBAAwB,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YACnF,KAAK,CAAC,IAAI,CAAC;gBACP,OAAO;gBACP,UAAU;gBACV,MAAM,EAAE;oBACJ,EAAE,EAAE,OAAO,CAAC,EAAE;oBACd,OAAO,EAAE,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC;oBACtC,UAAU,EAAE,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,IAAI,EAAE;oBACrD,OAAO,EAAE,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,EAAE;oBAC/C,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,EAAE;iBAC/C;aACJ,CAAC,CAAC;SACN;QACD,qCAAqC;QACrC,IAAM,MAAM,GAAqB,KAAK,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,YAAI,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAA1C,CAA0C,CAAC,CAAC;QAClG,gGAAgG;QAChG,IAAM,QAAQ,GAAqB,MAAM,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,CAAC,CAAC,MAAM,CAAC,UAAU,EAArB,CAAqB,CAAC,CAAC;QAC7E,4DAA4D;QAC5D,IAAM,UAAU,GAAqB,MAAM,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,CAAC,MAAM,CAAC,UAAU,EAApB,CAAoB,CAAC,CAAC;QAE9E,oFAAoF;QACpF,gBAAW,QAAQ,EAAK,UAAU,EAAE;IACxC,CAAC;IAES,0CAAe,GAAzB,UAA0B,OAAgB;QACtC,OAAO,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,EAAE,CAAC;IACvC,CAAC;IAES,6CAAkB,GAA5B,UAA6B,UAAwC;QACjE,OAAO,UAAU,IAAI,UAAU,CAAC,UAAU,CAAC;IAC/C,CAAC;IAES,0CAAe,GAAzB,UAA0B,UAAwC;QAC9D,OAAO,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,OAAO,IAAI,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC;IAC1E,CAAC;IAES,wCAAa,GAAvB,UAAwB,UAAwC;QAC5D,IAAI,KAAK,GAAG,UAAU,IAAI,UAAU,CAAC,KAAK,CAAC;QAC3C,IAAI,KAAK,KAAK,SAAS,EAAE;YACrB,IAAI,KAAK,GAAG,yBAAe,CAAC,IAAI,EAAE;gBAC9B,KAAK,GAAG,yBAAe,CAAC,OAAO,CAAC;aACnC;YACD,OAAO,yBAAe,CAAC,KAAK,CAAC,CAAC,iBAAiB,EAAE,CAAC;SACrD;QACD,OAAO,SAAS,CAAC;IACrB,CAAC;IAED;;;;;;;;;;OAUG;IACO,sCAAW,GAArB,UAAsB,CAAqB,EAAE,CAAqB;QAC9D,IAAI,CAAC,IAAI,CAAC,EAAE;YACR,OAAO,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;SAC3D;QACD,OAAO,CAAC,CAAC;IACb,CAAC;IAED;;;OAGG;IACO,yCAAc,GAAxB,UAAyB,IAAoB;QAA7C,iBAiBC;QAhBG,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;QAChC,IAAM,aAAa,GAAG,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;QACpE,IAAM,MAAM,GAAG,IAAI,oBAAoB,CAAC;YACpC,KAAK,EAAE,yBAAuB,OAAS;YACvC,YAAY,EAAE,aAAa;YAC3B,QAAQ,EAAE,uBAAa,IAAI,YAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,aAAa,EAAE,aAAa,CAAC,EAA9D,CAA8D;SAC5F,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;QAC9B,MAAM,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,UAAM,UAAU;;;;6BAC3B,UAAU,EAAV,wBAAU;wBACV,qBAAM,IAAI,CAAC,cAAc,CAAC,aAAa,cAChC,IAAI,CAAC,UAAU,IAClB,OAAO;gCACP,UAAU,iBACX,aAAa,CAAC;;wBAJjB,SAIiB,CAAC;;;;;aAEzB,CAAC,CAAC;IACP,CAAC;IAED;;;;;OAKG;IACa,iDAAsB,GAAtC,UAAuC,IAAoB;;;;;;wBACjD,MAAM,GAAG,IAAI,uBAAa,CAAC;4BAC7B,KAAK,EAAE,2BAAyB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,MAAG;4BACrE,GAAG,EAAE,mEAAmE;yBAC3E,CAAC,CAAC;wBACM,qBAAM,MAAM,CAAC,IAAI,EAAE;4BAA5B,sBAAO,CAAC,CAAC,UAAmB,GAAC;;;;KAChC;IAED;;;OAGG;IACa,0CAAe,GAA/B,UAAgC,IAAoB;;;;;4BAC9B,qBAAM,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC;;wBAAnD,SAAS,GAAG,SAAuC;wBACzD,IAAI,SAAS,EAAE;4BACX,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;yBACzD;;;;;KACJ;IAED;;;;;;;OAOG;IACO,6CAAkB,GAA5B,UAA6B,OAAe,EAAE,aAAiC,EAAE,UAAkB;QAC/F,IAAI,CAAC,UAAU,EAAE;YACb,OAAO,8BAA8B,CAAC;SACzC;QACD,IAAI;YACA,IAAM,OAAO,GAAG,EAAE,OAAO,WAAE,UAAU,cAAE,CAAC;YACxC,qBAAW,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;YAC9B,IAAI,aAAa,KAAK,UAAU,EAAE;gBAC9B,OAAO,GAAG,CAAC,CAAC,0DAA0D;aACzE;YACD,IAAI,IAAI,CAAC,kBAAkB,CAAC,yBAAyB,CAAC,OAAO,CAAC,EAAE;gBAC5D,OAAO,+BAA+B,CAAC;aAC1C;YACD,OAAO,EAAE,CAAC;SACb;QAAC,OAAO,KAAK,EAAE;YACZ,OAAO,KAAK,CAAC;SAChB;IACL,CAAC;IAED;;;;;OAKG;IACO,wCAAa,GAAvB,UAAwB,GAAW;QAC/B,IAAM,IAAI,GAAe,EAAE,CAAC;QAE5B,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE,EAAE;YACnB,OAAO,IAAI,CAAC;SACf;QAED,IAAI,SAAS,GAAG,GAAG,CAAC;QACpB,IAAI,OAAO,CAAC;QACZ,IAAI,MAAM,CAAC;QAEX,IAAM,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAEvC,OAAO,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;YAC9B,IAAM,cAAc,GAAG,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;YACpD,IAAM,eAAe,GAAG,cAAc,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;YAE1D,OAAO,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE,cAAc,CAAC,CAAC;YAC7C,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;YAE7C,IAAI,OAAO,EAAE;gBACT,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,WAAW,EAAE,KAAK,EAAE,CAAC,CAAC;aACrD;YACD,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC;SACtD;QAED,IAAI,SAAS,EAAE;YACX,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,WAAW,EAAE,KAAK,EAAE,CAAC,CAAC;SACvD;QAED,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;OAGG;IACO,4CAAiB,GAA3B,UAA4B,QAAgB;QACxC,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE,EAAE;YACnB,IAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YAC9C,OAAO,oBAAC,KAAK,CAAC,QAAQ,QAEd,QAAQ,CAAC,GAAG,CAAC,UAAC,IAAI,EAAE,KAAK,IAAK,QAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,8BAAM,GAAG,EAAE,KAAK,EAAE,SAAS,EAAC,aAAa,IAAE,IAAI,CAAC,KAAK,CAAQ,CAAC,CAAC,CAAC,8BAAM,GAAG,EAAE,KAAK,IAAG,IAAI,CAAC,KAAK,CAAQ,EAA1H,CAA0H,CAAC,CAEhJ,CAAC;SACrB;aAAM;YACH,OAAO,QAAQ,CAAC;SACnB;IACL,CAAC;;IAnkBe,mBAAE,GAAG,yBAAyB,CAAC;IAC/B,sBAAK,GAAG,oBAAoB,CAAC;IAT7C;QADC,kBAAM,CAAC,yBAAe,CAAC;kCACY,yBAAe;6DAAC;IAGpD;QADC,kBAAM,CAAC,4BAAkB,CAAC;kCACY,4BAAkB;gEAAC;IAG1D;QADC,kBAAM,CAAC,gCAAc,CAAC;kCACY,gCAAc;4DAAC;IA6ClD;QADC,yBAAa,EAAE;;;;gDAmBf;IAxEQ,gBAAgB;QAD5B,sBAAU,EAAE;OACA,gBAAgB,CAglB5B;IAAD,uBAAC;CAAA,CAhlBqC,0BAAW,GAglBhD;AAhlBY,4CAAgB;AAilB7B;;GAEG;AACH;IAAmC,wCAAqB;IAapD,8BAC2D,KAAiC,EAC7C,cAA8B,EACzE,IAAoB;QAHxB,YAKI,kBAAM,KAAK,CAAC,SAMf;QAV0D,WAAK,GAAL,KAAK,CAA4B;QAC7C,oBAAc,GAAd,cAAc,CAAgB;QAIzE,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,2EAA2E;QAC3E,IAAI,KAAI,CAAC,IAAI,CAAC,UAAU,IAAI,KAAI,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,KAAK,yBAAe,CAAC,IAAI,EAAE;YAC7E,KAAI,CAAC,iBAAiB,EAAE,CAAC;SAC5B;;IACL,CAAC;IAES,4CAAa,GAAvB,UAAwB,GAAY;QAChC,iBAAM,aAAa,YAAC,GAAG,CAAC,CAAC;QACzB,IAAI,IAAI,CAAC,WAAW,EAAE;YAClB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;SAClD;IACL,CAAC;IAED;;;;OAIG;IACO,6CAAc,GAAxB,UAA8D,OAAoB;QAAlF,iBAKC;QALmF,8BAA4B;aAA5B,UAA4B,EAA5B,qBAA4B,EAA5B,IAA4B;YAA5B,6CAA4B;;QAC5G,IAAI,CAAC,cAAc,OAAnB,IAAI,YAAgB,OAAO,EAAE,aAAG,CAAC,KAAK,EAAE;gBACpC,KAAI,CAAC,KAAK,EAAE,CAAC;gBACb,KAAI,CAAC,KAAK,EAAE,CAAC;YACjB,CAAC,GAAK,oBAAoB,GAAE;IAChC,CAAC;IAED;;;;OAIG;IACO,gDAAiB,GAA3B;QACI,6BAA6B;QAC7B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;QAC9C,kFAAkF;QAClF,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,YAAa,CAAC,CAAC;QACrE,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,kBAAkB,CAAC;QAC5C,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QAC5C,OAAO,IAAI,CAAC,WAAW,CAAC;IAC5B,CAAC;IAED;;OAEG;IACO,oCAAK,GAAf;QACI,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IAC/D,CAAC;IAjEC,oBAAoB;QAcjB,6BAAM,CAAC,oCAA0B,CAAC;QAClC,6BAAM,CAAC,gCAAc,CAAC;yCADuC,oCAA0B;YAC7B,gCAAc;OAf3E,oBAAoB,CAmEzB;IAAD,2BAAC;CAAA,CAnEkC,+BAAqB,GAmEvD;;;;;;;;;;;;;;ACntBD;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAElF,qGAA+C;AAS/C,gMAAmF;AACnF,sIAAmD;AAEnD,uHAAmE;AACnE,+IAAwD;AAGxD,IAAiB,eAAe,CAmB/B;AAnBD,WAAiB,eAAe;IACf,4BAAY,GAAY;QACjC,EAAE,EAAE,cAAc;QAClB,QAAQ,EAAE,UAAU;QACpB,KAAK,EAAE,yBAAyB;KACnC,CAAC;IACW,iCAAiB,GAAY;QACtC,EAAE,EAAE,kBAAkB;QACtB,QAAQ,EAAE,UAAU;QACpB,KAAK,EAAE,gCAAgC;KAC1C,CAAC;IACW,yCAAyB,GAAY;QAC9C,EAAE,EAAE,0BAA0B;QAC9B,SAAS,EAAE,sBAAsB;KACpC,CAAC;IACW,wCAAwB,GAAY;QAC7C,EAAE,EAAE,qBAAqB;QACzB,SAAS,EAAE,WAAW;KACzB,CAAC;AACN,CAAC,EAnBgB,eAAe,GAAf,uBAAe,KAAf,uBAAe,QAmB/B;AAGD;IAAiD,+CAA0C;IAKvF;eACI,kBAAM;YACF,QAAQ,EAAE,qCAAgB,CAAC,EAAE;YAC7B,UAAU,EAAE,qCAAgB,CAAC,KAAK;YAClC,oBAAoB,EAAE;gBAClB,IAAI,EAAE,MAAM;aACf;SACJ,CAAC;IACN,CAAC;IAED,sDAAgB,GAAhB,UAAiB,QAAyB;QAA1C,iBAmBC;QAlBG,QAAQ,CAAC,eAAe,CAAC,eAAe,CAAC,YAAY,EAAE;YACnD,SAAS,EAAE,cAAM,WAAI,EAAJ,CAAI;YACrB,OAAO,EAAE,cAAM,YAAI,CAAC,QAAQ,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,EAAjC,CAAiC;SACnD,CAAC,CAAC;QACH,QAAQ,CAAC,eAAe,CAAC,eAAe,CAAC,iBAAiB,EAAE;YACxD,SAAS,EAAE,cAAM,WAAI,EAAJ,CAAI;YACrB,OAAO,EAAE,cAAM,YAAI,CAAC,OAAO,CAAC,IAAI,EAAE,EAAnB,CAAmB;SACrC,CAAC,CAAC;QACH,QAAQ,CAAC,eAAe,CAAC,eAAe,CAAC,yBAAyB,EAAE;YAChE,SAAS,EAAE,WAAC,IAAI,YAAI,CAAC,UAAU,CAAC,CAAC,EAAE,cAAM,WAAI,EAAJ,CAAI,CAAC,EAA9B,CAA8B;YAC9C,SAAS,EAAE,WAAC,IAAI,YAAI,CAAC,UAAU,CAAC,CAAC,EAAE,cAAM,WAAI,EAAJ,CAAI,CAAC,EAA9B,CAA8B;YAC9C,OAAO,EAAE,WAAC,IAAI,YAAI,CAAC,UAAU,CAAC,CAAC,EAAE,gBAAM,IAAI,YAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,EAAzB,CAAyB,CAAC,EAAvD,CAAuD;SACxE,CAAC,CAAC;QACH,QAAQ,CAAC,eAAe,CAAC,eAAe,CAAC,wBAAwB,EAAE;YAC/D,SAAS,EAAE,WAAC,IAAI,YAAI,CAAC,UAAU,CAAC,CAAC,EAAE,gBAAM,IAAI,aAAM,CAAC,SAAS,EAAE,EAAlB,CAAkB,CAAC,EAAhD,CAAgD;YAChE,SAAS,EAAE,WAAC,IAAI,YAAI,CAAC,UAAU,CAAC,CAAC,EAAE,cAAM,WAAI,EAAJ,CAAI,CAAC,EAA9B,CAA8B;YAC9C,OAAO,EAAE,WAAC,IAAI,YAAI,CAAC,UAAU,CAAC,CAAC,EAAE,gBAAM,IAAI,aAAM,CAAC,WAAW,EAAE,EAApB,CAAoB,CAAC,EAAlD,CAAkD;SACnE,CAAC,CAAC;IACP,CAAC;IAED,mDAAa,GAAb,UAAc,KAAwB;QAClC,KAAK,CAAC,kBAAkB,CAAC,0CAAW,CAAC,0BAA0B,EAAE;YAC7D,SAAS,EAAE,eAAe,CAAC,YAAY,CAAC,EAAE;YAC1C,KAAK,EAAE,KAAK;SACf,CAAC,CAAC;IACP,CAAC;IAED,yDAAmB,GAAnB,UAAoB,WAA+B;QAC/C,WAAW,CAAC,kBAAkB,CAAC;YAC3B,OAAO,EAAE,eAAe,CAAC,YAAY,CAAC,EAAE;YACxC,UAAU,EAAE,YAAY;SAC3B,CAAC,CAAC;IACP,CAAC;IAEK,0DAAoB,GAA1B,UAA2B,OAA8B;;;;;4BACtC,qBAAM,IAAI,CAAC,MAAM;;wBAA1B,MAAM,GAAG,SAAiB;wBAC1B,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;wBACvC,OAAO,CAAC,YAAY,CAAC;4BACjB,EAAE,EAAE,eAAe,CAAC,yBAAyB,CAAC,EAAE;4BAChD,OAAO,EAAE,eAAe,CAAC,yBAAyB,CAAC,EAAE;4BACrD,OAAO,EAAE,iCAAiC;4BAC1C,QAAQ,EAAE,CAAC;yBACd,CAAC,CAAC;wBACH,OAAO,CAAC,YAAY,CAAC;4BACjB,EAAE,EAAE,eAAe,CAAC,wBAAwB,CAAC,EAAE;4BAC/C,OAAO,EAAE,eAAe,CAAC,wBAAwB,CAAC,EAAE;4BACpD,OAAO,EAAE,gCAAgC;4BACzC,QAAQ,EAAE,CAAC;4BACX,WAAW;yBACd,CAAC,CAAC;;;;;KACN;IAED;;OAEG;IACO,gDAAU,GAApB,UAAwB,MAAgD,EAAE,EAAmC;QAArF,kCAA6B,IAAI,CAAC,YAAY,EAAE;QACpE,IAAI,MAAM,YAAY,qCAAgB,IAAI,MAAM,CAAC,EAAE,KAAK,qCAAgB,CAAC,EAAE,EAAE;YACzE,OAAO,EAAE,CAAC,MAAM,CAAC,CAAC;SACrB;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;IAzED;QADC,kBAAM,CAAC,gCAAc,CAAC;kCACK,gCAAc;gEAAC;IAHlC,2BAA2B;QADvC,sBAAU,EAAE;;OACA,2BAA2B,CA6EvC;IAAD,kCAAC;CAAA,CA7EgD,kCAAwB,GA6ExE;AA7EY,kEAA2B;;;;;;;;;;;;;;ACtDxC;;;;;;;;;;;;;;kFAckF;;AAElF,qGAA4C;AAC5C,sIAAmD;AACnD,gLAA8E;AAC9E,oHAA+E;AAC/E,0IAA4E;AAC5E,qKAA0F;AAE1F,sIAAuC;AACvC,uHAAwD;AACxD,+IAAwD;AAExD,2HAA2C;AAE3C,kBAAe,IAAI,2BAAe,CAAC,cAAI;IACnC,IAAI,CAAC,gCAAc,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IACjD,IAAI,CAAC,2DAA2B,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IAC9D,IAAI,CAAC,4BAAmB,CAAC,CAAC,SAAS,CAAC,2DAA2B,CAAC,CAAC;IACjE,IAAI,CAAC,mCAAsB,CAAC,CAAC,SAAS,CAAC,2DAA2B,CAAC,CAAC;IACpE,IAAI,CAAC,yBAAgB,CAAC,CAAC,SAAS,CAAC,2DAA2B,CAAC,CAAC;IAC9D,IAAI,CAAC,qCAAgB,CAAC,CAAC,MAAM,EAAE,CAAC;IAChC,IAAI,CAAC,2CAAyB,CAAC,CAAC,SAAS,CAAC,2DAA2B,CAAC,CAAC;IACvE,IAAI,CAAC,uBAAa,CAAC,CAAC,cAAc,CAAC,iBAAO,IAAI,QAAC;QAC3C,EAAE,EAAE,qCAAgB,CAAC,EAAE;QACvB,YAAY,EAAE,cAAM,cAAO,CAAC,SAAS,CAAC,GAAG,CAAmB,qCAAgB,CAAC,EAAzD,CAAyD;KAChF,CAAC,EAH4C,CAG5C,CAAC,CAAC,gBAAgB,EAAE,CAAC;AAC3B,CAAC,CAAC,CAAC;;;;;;;;;;;;ACzCH;;;;;;;;;;;;;;kFAckF;AAElF,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;IACtB,EAAE,EAAE,OAAO;IACX,SAAS,EAAE;QACP,oBAAoB;KACvB;IACD,WAAW,EAAE;QACT,cAAc;KACjB;CACJ,CAAC,CAAC;;;;;;;;;;;;;;ACxBH;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAElF,qGAA8D;AAC9D,mHAA6C;AAC7C,kIAA6E;AAC7E,uHAA2F;AAC3F,0IAAyF;AACzF,wIAA+D;AAC/D,qIAAgE;AAChE,0GAA4C;AAC5C,yHAAuD;AAGvD;IADA;QAYuB,wBAAmB,GAAG,IAAI,eAAO,EAAQ,CAAC;QACpD,uBAAkB,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC;IA4HjE,CAAC;IAxHG;;OAEG;IAEa,6BAAI,GAApB;;;;;;;wBACI,SAAI;wBAAY,qBAAM,IAAI,CAAC,gBAAgB,CAAC,IAAI,aAAG,EAAE,CAAC,UAAU,CAAC,wBAAc,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;;wBAAjH,GAAK,QAAQ,GAAG,SAAiG,CAAC;wBAClH,IAAI,CAAC,SAAS,EAAE,CAAC;wBACjB,IAAI,IAAI,CAAC,QAAQ,CAAC,mBAAmB,EAAE;4BACnC,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,cAAM,YAAI,CAAC,SAAS,EAAE,EAAhB,CAAgB,CAAC,CAAC;yBAC7D;wBACD,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,cAAM,YAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,CAAC,EAAxC,CAAwC,CAAC,CAAC;;;;;KAChG;IAED;;OAEG;IACa,kCAAS,GAAzB;;;;;4BACwB,qBAAM,IAAI,CAAC,gBAAgB,EAAE;;wBAA3C,WAAW,GAAG,SAA6B;wBACjD,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,4BAAe,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;wBACrE,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;;;;;KAC5C;IAED;;OAEG;IACa,yCAAgB,GAAhC;;;;;;4BACoB,qBAAM,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE;;wBAA5C,OAAO,GAAG,SAAkC;wBAC5C,WAAW,GAAiB,EAAE,CAAC;wBAC/B,IAAI,GAAG,WAAW,CAAC,KAAK,CAAC,OAAO,EAAE,SAAS,EAAE,EAAE,gBAAgB,EAAE,KAAK,EAAE,CAAC,CAAC;wBAChF,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;;gCACrB,KAAoB,sBAAI,uEAAE;oCAAf,KAAK;oCACZ,IAAI,uBAAU,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE;wCACtB,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;qCAC3B;iCACJ;;;;;;;;;yBACJ;wBACD,sBAAO,WAAW,EAAC;;;;KACtB;IAED;;;OAGG;IACH,6BAAI,GAAJ,UAAK,GAAY;QACb,IAAM,OAAO,GAAwB;YACjC,aAAa,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,aAAa,EAAE,GAAG,OAAE,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE;YAClF,IAAI,EAAE,UAAU;SACnB,CAAC;QACF,cAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;IAClD,CAAC;IAED;;;OAGG;IACG,sCAAa,GAAnB,UAAoB,aAAyB,EAAE,aAAiC;;;;;;;wBAC5E,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE;4BAC7B,sBAAO;yBACV;wBACmB,qBAAM,IAAI,CAAC,gBAAgB,EAAE;;wBAA3C,WAAW,GAAG,SAA6B;wBAC7C,QAAQ,GAAG,KAAK,CAAC;wBACjB,UAAU,GAAG,KAAK,CAAC;;4BACvB,KAAyB,oCAAW,0GAAE;gCAA3B,UAAU;gCACjB,IAAI,UAAU,CAAC,OAAO,KAAK,aAAa,CAAC,OAAO;oCAC5C,CAAC,UAAU,CAAC,OAAO,IAAI,EAAE,CAAC,KAAK,CAAC,aAAa,CAAC,OAAO,IAAI,EAAE,CAAC;oCAC5D,CAAC,UAAU,CAAC,IAAI,IAAI,EAAE,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,IAAI,EAAE,CAAC,EAAE;oCACxD,QAAQ,GAAG,IAAI,CAAC;oCAChB,UAAU,CAAC,UAAU,GAAG,aAAa,CAAC,UAAU,CAAC;iCACpD;gCACD,IAAI,aAAa,IAAI,UAAU,CAAC,UAAU,KAAK,aAAa;oCACxD,UAAU,CAAC,OAAO,KAAK,GAAG,GAAG,aAAa,CAAC,OAAO;oCAClD,CAAC,UAAU,CAAC,OAAO,IAAI,EAAE,CAAC,KAAK,CAAC,aAAa,CAAC,OAAO,IAAI,EAAE,CAAC;oCAC5D,CAAC,UAAU,CAAC,IAAI,IAAI,EAAE,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,IAAI,EAAE,CAAC,EAAE;oCACxD,UAAU,GAAG,IAAI,CAAC;iCACrB;6BACJ;;;;;;;;;wBACD,IAAI,CAAC,QAAQ,EAAE;4BACX,WAAW,CAAC,IAAI,CAAC;gCACb,OAAO,EAAE,aAAa,CAAC,OAAO;gCAC9B,UAAU,EAAE,aAAa,CAAC,UAAU;gCACpC,OAAO,EAAE,aAAa,CAAC,OAAO;gCAC9B,IAAI,EAAE,aAAa,CAAC,IAAI;gCACxB,IAAI,EAAE,aAAa,CAAC,IAAI;6BAC3B,CAAC,CAAC;yBACN;wBACD,IAAI,CAAC,UAAU,IAAI,aAAa,EAAE;4BAC9B,WAAW,CAAC,IAAI,CAAC;gCACb,OAAO,EAAE,GAAG,GAAG,aAAa,CAAC,OAAO;gCACpC,kFAAkF;gCAClF,UAAU,EAAE,aAAa;gCACzB,OAAO,EAAE,aAAa,CAAC,OAAO;gCAC9B,IAAI,EAAE,aAAa,CAAC,IAAI;gCACxB,IAAI,EAAE,aAAa,CAAC,IAAI;6BAC3B,CAAC,CAAC;yBACN;wBACD,yDAAyD;wBACzD,oCAAoC;wBACpC,uCAAuC;wBACvC,gCAAgC;wBAChC,qBAAM,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;;wBAJ3E,yDAAyD;wBACzD,oCAAoC;wBACpC,uCAAuC;wBACvC,gCAAgC;wBAChC,SAA2E,CAAC;;;;;KAC/E;IAED;;;OAGG;IACG,yCAAgB,GAAtB,UAAuB,SAAiB;;;;;;wBACpC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE;4BAC7B,sBAAO;yBACV;wBACmB,qBAAM,IAAI,CAAC,gBAAgB,EAAE;;wBAA3C,WAAW,GAAG,SAA6B;wBAC3C,cAAc,GAAG,GAAG,GAAG,SAAS,CAAC;wBACjC,QAAQ,GAAG,WAAW,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,OAAO,KAAK,SAAS,IAAI,CAAC,CAAC,OAAO,KAAK,cAAc,EAAvD,CAAuD,CAAC,CAAC;wBAClG,yDAAyD;wBACzD,oCAAoC;wBACpC,uCAAuC;wBACvC,gCAAgC;wBAChC,qBAAM,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;;wBAJxE,yDAAyD;wBACzD,oCAAoC;wBACpC,uCAAuC;wBACvC,gCAAgC;wBAChC,SAAwE,CAAC;;;;;KAC5E;IAnID;QADC,kBAAM,CAAC,2BAAgB,CAAC;;4DAC6B;IAGtD;QADC,kBAAM,CAAC,+BAAkB,CAAC;kCACY,+BAAkB;8DAAC;IAG1D;QADC,kBAAM,CAAC,uBAAa,CAAC;;kDACmB;IAWzC;QADC,yBAAa,EAAE;;;;8CAQf;IA3BQ,cAAc;QAD1B,sBAAU,EAAE;OACA,cAAc,CAwI1B;IAAD,qBAAC;CAAA;AAxIY,wCAAc;;;;;;;;;;;;;AC1B3B,cAAc,mBAAO,CAAC,8IAAkD;;AAExE,4CAA4C,QAAS;;AAErD;AACA;;;;AAIA,eAAe;;AAEf;AACA;;AAEA,aAAa,mBAAO,CAAC,mGAA+C;;AAEpE;;AAEA,GAAG,KAAU,EAAE,E;;;;;;;;;;;;;ACnBf;;;;;;;;;;;;;;kFAckF;;;;;AAElF,sIAAuC;AACvC,wIAAwC;AACxC,8HAAmC;AACnC,4JAAkD;AAClD,sJAA+C;;;;;;;;;;;;ACpB/C,2BAA2B,mBAAO,CAAC,6FAA2C;AAC9E;;;AAGA;AACA,cAAc,QAAS,k2BAAk2B,oBAAoB,6BAA6B,mBAAmB,GAAG,yBAAyB,cAAc,qBAAqB,GAAG,kBAAkB,uBAAuB,mDAAmD,GAAG,iBAAiB,yBAAyB,6BAA6B,GAAG,qBAAqB,yBAAyB,yBAAyB,GAAG,eAAe,wBAAwB,gCAAgC,uDAAuD,kBAAkB,0BAA0B,GAAG,kBAAkB,yCAAyC,GAAG,8DAA8D,uBAAuB,uBAAuB,6BAA6B,0BAA0B,GAAG,8BAA8B,+BAA+B,GAAG,qCAAqC,iCAAiC,GAAG,8FAA8F,iCAAiC,uBAAuB,uBAAuB,8BAA8B,6BAA6B,0BAA0B,GAAG,kBAAkB,4CAA4C,GAAG,uBAAuB,qBAAqB,GAAG,gBAAgB,gCAAgC,GAAG,iCAAiC,kDAAkD,GAAG,8BAA8B,0DAA0D,GAAG,8CAA8C,0BAA0B,0CAA0C,4BAA4B,GAAG,kBAAkB,2BAA2B,0BAA0B,uBAAuB,uBAAuB,6BAA6B,uBAAuB,aAAa,6DAA6D,GAAG,0BAA0B,gBAAgB,GAAG,yBAAyB,iBAAiB,GAAG,8BAA8B,iBAAiB,GAAG,0BAA0B,iBAAiB,GAAG,2BAA2B,iBAAiB,GAAG,YAAY,+DAA+D,GAAG,gBAAgB,mBAAmB,cAAc,GAAG,oBAAoB,6BAA6B,GAAG,0BAA0B,oBAAoB,oBAAoB,GAAG,4EAA4E,iBAAiB,mBAAmB,GAAG,uBAAuB,qBAAqB,iBAAiB,wBAAwB,yBAAyB,GAAG;;AAEp7G","file":"48.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2018 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport React = require('react');\n\nexport type MessageType = keyof AlertMessageIcon;\n\ninterface AlertMessageIcon {\n    INFO: string;\n    SUCCESS: string;\n    WARNING: string;\n    ERROR: string;\n}\n\nconst AlertMessageIcon = {\n    INFO: 'fa fa-info-circle',\n    SUCCESS: 'fa fa-check-circle',\n    WARNING: 'fa fa-exclamation-circle',\n    ERROR: 'fa fa-times-circle'\n};\n\nexport interface AlertMessageProps {\n    type: MessageType;\n    header: string;\n}\n\nexport class AlertMessage extends React.Component<AlertMessageProps> {\n\n    render(): React.ReactNode {\n        return <div className='theia-alert-message-container'>\n            <div className={`theia-${this.props.type.toLowerCase()}-alert`}>\n                <div className='theia-message-header'>\n                    <i className={AlertMessageIcon[this.props.type]}></i>&nbsp;\n                    {this.props.header}\n                </div>\n                <div className='theia-message-content'>{this.props.children}</div>\n            </div>\n        </div>;\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport React = require('react');\nimport debounce = require('lodash.debounce');\nimport * as fuzzy from 'fuzzy';\nimport { injectable, inject, postConstruct } from 'inversify';\nimport { Emitter, Event } from '@theia/core/lib/common/event';\nimport { CommandRegistry, Command } from '@theia/core/lib/common/command';\nimport { ReactWidget } from '@theia/core/lib/browser/widgets/react-widget';\nimport {\n    KeybindingRegistry, SingleTextInputDialog, KeySequence, ConfirmDialog, Message, KeybindingScope, SingleTextInputDialogProps, Key, ScopedKeybinding\n} from '@theia/core/lib/browser';\nimport { KeymapsService } from './keymaps-service';\nimport { AlertMessage } from '@theia/core/lib/browser/widgets/alert-message';\n\n/**\n * Representation of a keybinding item for the view.\n */\nexport interface KeybindingItem {\n    command: Command\n    keybinding?: ScopedKeybinding\n    /** human-readable labels can contain highlighting */\n    labels: {\n        id: string\n        command: string\n        keybinding: string\n        context: string\n        source: string\n    }\n}\n\n/**\n * Representation of an individual table cell.\n */\nexport interface CellData {\n    /**\n     * The cell value.\n     */\n    value: string,\n    /**\n     * Indicates if a cell's value is currently highlighted.\n     */\n    highlighted: boolean,\n}\n\n@injectable()\nexport class KeybindingWidget extends ReactWidget {\n\n    @inject(CommandRegistry)\n    protected readonly commandRegistry: CommandRegistry;\n\n    @inject(KeybindingRegistry)\n    protected readonly keybindingRegistry: KeybindingRegistry;\n\n    @inject(KeymapsService)\n    protected readonly keymapsService: KeymapsService;\n\n    static readonly ID = 'keybindings.view.widget';\n    static readonly LABEL = 'Keyboard Shortcuts';\n\n    /**\n     * The list of all available keybindings.\n     */\n    protected items: KeybindingItem[] = [];\n\n    /**\n     * The current user search query.\n     */\n    protected query: string = '';\n\n    /**\n     * The regular expression used to extract values between fuzzy results.\n     */\n    protected readonly regexp = /<match>(.*?)<\\/match>/g;\n    /**\n     * The regular expression used to extract values between the keybinding separator.\n     */\n    protected readonly keybindingSeparator = /<match>\\+<\\/match>/g;\n\n    /**\n     * The fuzzy search options.\n     * The `pre` and `post` options are used to wrap fuzzy matches.\n     */\n    protected readonly fuzzyOptions = {\n        pre: '<match>',\n        post: '</match>',\n    };\n\n    protected readonly onDidUpdateEmitter = new Emitter<void>();\n    readonly onDidUpdate: Event<void> = this.onDidUpdateEmitter.event;\n\n    /**\n     * Search keybindings.\n     */\n    protected readonly searchKeybindings: () => void = debounce(() => this.doSearchKeybindings(), 50);\n\n    /**\n     * Initialize the widget.\n     */\n    @postConstruct()\n    protected init(): void {\n        this.id = KeybindingWidget.ID;\n        this.title.label = KeybindingWidget.LABEL;\n        this.title.caption = KeybindingWidget.LABEL;\n        this.title.iconClass = 'fa fa-bars';\n        this.title.closable = true;\n        this.update();\n\n        // Initialize the list of keybinding items.\n        this.items = this.getItems();\n\n        // Listen to changes made in the `keymaps.json` and update the view accordingly.\n        if (this.keymapsService.onDidChangeKeymaps) {\n            this.toDispose.push(this.keymapsService.onDidChangeKeymaps(() => {\n                this.doSearchKeybindings();\n                this.update();\n            }));\n        }\n    }\n\n    /**\n     * Determine if there currently is a search term.\n     * @returns `true` if a search term is present.\n     */\n    public hasSearch(): boolean {\n        return !!this.query.length;\n    }\n\n    /**\n     * Clear the search and reset the view.\n     */\n    public clearSearch(): void {\n        const search = this.findSearchField();\n        if (search) {\n            search.value = '';\n            this.query = '';\n            this.doSearchKeybindings();\n        }\n    }\n\n    protected onActivateRequest(msg: Message): void {\n        super.onActivateRequest(msg);\n        this.focusInputField();\n    }\n\n    /**\n     * Perform a search based on the user's search query.\n     */\n    protected doSearchKeybindings(): void {\n        this.onDidUpdateEmitter.fire(undefined);\n        this.items = [];\n        const searchField = this.findSearchField();\n        this.query = searchField ? searchField.value.trim().toLocaleLowerCase() : '';\n        const items = this.getItems();\n        items.forEach(item => {\n            const keys: (keyof KeybindingItem['labels'])[] = ['command', 'keybinding', 'context', 'source'];\n            let matched = false;\n            for (const key of keys) {\n                const string = item.labels[key];\n                if (string) {\n                    const fuzzyMatch = fuzzy.match(this.query, string, this.fuzzyOptions);\n                    if (fuzzyMatch) {\n                        item.labels[key] = fuzzyMatch.rendered;\n                        matched = true;\n                    } else {\n                        // Match identical keybindings that have different orders.\n                        if (key === 'keybinding') {\n                            const queryItems = this.query.split('+');\n\n                            // Handle key chords.\n                            const tempItems = string.split(' ');\n                            // Store positions of `space` in the keybinding string.\n                            const spaceIndexArr = [0];\n                            let bindingItems: string[] = [];\n                            if (tempItems.length > 1) {\n                                tempItems.forEach(tItem => {\n                                    const tKeys = tItem.split('+');\n                                    spaceIndexArr.push(tKeys.length + spaceIndexArr[-1]);\n                                    bindingItems.push(...tKeys);\n                                });\n                            } else {\n                                bindingItems = string.split('+');\n                            }\n                            spaceIndexArr.shift();\n\n                            const renderedResult = [...bindingItems];\n                            let matchCounter = 0;\n\n                            queryItems.forEach(queryItem => {\n                                let keyFuzzyMatch: fuzzy.MatchResult = { rendered: '', score: 0 };\n                                let keyIndex = -1;\n                                if (string) {\n                                    bindingItems.forEach((bindingItem: string) => {\n                                        // Match every key in user query with every key in keybinding string.\n                                        const tempFuzzyMatch = fuzzy.match(queryItem, bindingItem, this.fuzzyOptions);\n                                        // Select the match with the highest matching score.\n                                        if (tempFuzzyMatch && tempFuzzyMatch.score > keyFuzzyMatch.score) {\n                                            keyFuzzyMatch = tempFuzzyMatch;\n                                            // Get index in the keybinding array.\n                                            keyIndex = renderedResult.indexOf(bindingItem);\n                                        }\n                                    });\n\n                                    const keyRendered = keyFuzzyMatch.rendered;\n                                    if (keyRendered) {\n                                        if (keyIndex > -1) {\n                                            renderedResult[keyIndex] = keyRendered;\n                                        }\n                                        // Remove key from keybinding items if it is matched.\n                                        bindingItems.splice(keyIndex, 1, '');\n                                        matchCounter += 1;\n                                    }\n                                }\n                            });\n                            if (matchCounter === queryItems.length) {\n                                // Handle rendering of key chords.\n                                if (spaceIndexArr.length > 0) {\n                                    const chordRenderedResult = '';\n                                    renderedResult.forEach((resultKey, index) => {\n                                        if (index === 0) {\n                                            chordRenderedResult.concat(resultKey);\n                                        } else if (spaceIndexArr.indexOf(index) !== -1) {\n                                            chordRenderedResult.concat(' ' + resultKey);\n                                        } else {\n                                            chordRenderedResult.concat('+' + resultKey);\n                                        }\n                                    });\n                                    item.labels[key] = chordRenderedResult;\n                                }\n\n                                item.labels[key] = renderedResult.join('+');\n                                matched = true;\n                            }\n                        }\n                    }\n                }\n            }\n\n            if (matched) {\n                this.items.push(item);\n            }\n        });\n        this.update();\n    }\n\n    /**\n     * Get the search input if available.\n     * @returns the search input if available.\n     */\n    protected findSearchField(): HTMLInputElement | null {\n        return document.getElementById('search-kb') as HTMLInputElement;\n    }\n\n    /**\n     * Set the focus the search input field if available.\n     */\n    protected focusInputField(): void {\n        const input = document.getElementById('search-kb');\n        if (input) {\n            (input as HTMLInputElement).focus();\n            (input as HTMLInputElement).select();\n        }\n    }\n\n    /**\n     * Render the view.\n     */\n    protected render(): React.ReactNode {\n        return <div id='kb-main-container'>\n            {this.renderSearch()}\n            {(this.items.length > 0) ? this.renderTable() : this.renderMessage()}\n        </div>;\n    }\n\n    /**\n     * Render the search container with the search input.\n     */\n    protected renderSearch(): React.ReactNode {\n        return <div>\n            <div className='search-kb-container'>\n                <input\n                    id='search-kb'\n                    className={`theia-input${(this.items.length > 0) ? '' : ' no-kb'}`}\n                    type='text'\n                    placeholder='Search keybindings'\n                    autoComplete='off'\n                    onKeyUp={this.searchKeybindings}\n                />\n            </div>\n        </div>;\n    }\n\n    /**\n     * Render the warning message when no search results are found.\n     */\n    protected renderMessage(): React.ReactNode {\n        return <AlertMessage\n            type='WARNING'\n            header='No results found!'\n        />;\n    }\n\n    /**\n     * Render the keybindings table.\n     */\n    protected renderTable(): React.ReactNode {\n        return <div id='kb-table-container'>\n            <div className='kb'>\n                <table>\n                    <thead>\n                        <tr>\n                            <th className='th-action'></th>\n                            <th className='th-label'>Command</th>\n                            <th className='th-keybinding'>Keybinding</th>\n                            <th className='th-context'>Context / When</th>\n                            <th className='th-source'>Source</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.renderRows()}\n                    </tbody>\n                </table>\n            </div>\n        </div>;\n    }\n\n    /**\n     * Render the table rows.\n     */\n    protected renderRows(): React.ReactNode {\n        return <React.Fragment>\n            {this.items.map((item, index) => this.renderRow(item, index))}\n        </React.Fragment>;\n    }\n\n    protected renderRow(item: KeybindingItem, index: number): React.ReactNode {\n        const { command, keybinding } = item;\n        // TODO get rid of array functions in event handlers\n        return <tr className='kb-item-row' key={index} onDoubleClick={() => this.editKeybinding(item)}>\n            <td className='kb-actions'>\n                {this.renderActions(item)}\n            </td>\n            <td className='kb-label' title={this.getCommandLabel(command)}>\n                {this.renderMatchedData(item.labels.command)}\n            </td>\n            <td title={this.getKeybindingLabel(keybinding)} className='kb-keybinding monaco-keybinding'>\n                {this.renderKeybinding(item.labels.keybinding)}\n            </td>\n            <td className='kb-context' title={this.getContextLabel(keybinding)}>\n                <code>{this.renderMatchedData(item.labels.context)}</code>\n            </td>\n            <td className='kb-source' title={this.getScopeLabel(keybinding)}>\n                <code className='td-source'>{this.renderMatchedData(item.labels.source)}</code>\n            </td>\n        </tr>;\n    }\n\n    /**\n     * Render the actions container with action icons.\n     * @param item the keybinding item for the row.\n     */\n    protected renderActions(item: KeybindingItem): React.ReactNode {\n        return <span className='kb-actions-icons'>{this.renderEdit(item)}{this.renderReset(item)}</span>;\n    }\n\n    /**\n     * Render the edit action used to update a keybinding.\n     * @param item the keybinding item for the row.\n     */\n    protected renderEdit(item: KeybindingItem): React.ReactNode {\n        return <a title='Edit Keybinding' href='#' onClick={a => this.editKeybinding(item)}><i className='fa fa-pencil kb-action-item'></i></a>;\n    }\n\n    /**\n     * Render the reset action to reset the custom keybinding.\n     * Only visible if a keybinding has a `user` scope.\n     * @param item the keybinding item for the row.\n     */\n    protected renderReset(item: KeybindingItem): React.ReactNode {\n        return (item.keybinding && item.keybinding.scope === KeybindingScope.USER)\n            ? <a title='Reset Keybinding' href='#' onClick={a => this.resetKeybinding(item)}><i className='fa fa-undo kb-action-item'></i></a> : '';\n    }\n\n    /**\n     * Render the keybinding.\n     * @param keybinding the keybinding value.\n     */\n    protected renderKeybinding(keybinding: string): React.ReactNode {\n        if (!keybinding.length) {\n            return undefined;\n        }\n        const regex = new RegExp(this.keybindingSeparator);\n        keybinding = keybinding.replace(regex, '+');\n        const keys = keybinding.split('+');\n\n        return <React.Fragment>\n            {\n                keys.map((key, index) => {\n                    if (index === 0) {\n                        return <span key={index} className='monaco-keybinding-key'>\n                            {this.renderMatchedData(key)}\n                        </span>;\n                    } else if (key.includes(' ')) {\n                        // Handle key chords, which have space as the separator\n                        // Example: `k Ctrl` in key chords `Ctrl+k Ctrl+p`\n                        let chordKeys = key.split('<match> </match>');\n                        if (chordKeys.length === 1) {\n                            chordKeys = key.split(' ');\n                        }\n                        return <React.Fragment key={index}>\n                            <span className='monaco-keybinding-separator'>+</span>\n                            <span className='monaco-keybinding-key'>{this.renderKeybinding(chordKeys[0])}</span>\n                            <span className='monaco-keybinding-separator'>&nbsp;&nbsp;</span>\n                            <span className='monaco-keybinding-key'>{this.renderKeybinding(chordKeys[1])}</span>\n                        </React.Fragment>;\n                    } else {\n                        return <React.Fragment key={index}>\n                            <span className='monaco-keybinding-separator'>+</span>\n                            <span className='monaco-keybinding-key'>{this.renderKeybinding(key)}</span>\n                        </React.Fragment>;\n                    }\n                })\n            }\n        </React.Fragment>;\n    }\n\n    /**\n     * Get the list of keybinding items.\n     *\n     * @returns the list of keybinding items.\n     */\n    protected getItems(): KeybindingItem[] {\n        // Sort the commands alphabetically.\n        const commands = this.commandRegistry.commands;\n        const items: KeybindingItem[] = [];\n        // Build the keybinding items.\n        for (let i = 0; i < commands.length; i++) {\n            const command = commands[i];\n            // Skip internal commands prefixed by `_`.\n            if (command.id.startsWith('_')) {\n                continue;\n            }\n            const keybinding = this.keybindingRegistry.getKeybindingsForCommand(command.id)[0];\n            items.push({\n                command,\n                keybinding,\n                labels: {\n                    id: command.id,\n                    command: this.getCommandLabel(command),\n                    keybinding: this.getKeybindingLabel(keybinding) || '',\n                    context: this.getContextLabel(keybinding) || '',\n                    source: this.getScopeLabel(keybinding) || ''\n                }\n            });\n        }\n        // Sort the keybinding item by label.\n        const sorted: KeybindingItem[] = items.sort((a, b) => this.compareItem(a.labels.id, b.labels.id));\n        // Get the list of keybinding item with keybindings (visually put them at the top of the table).\n        const keyItems: KeybindingItem[] = sorted.filter(a => !!a.labels.keybinding);\n        // Get the remaining keybinding items (without keybindings).\n        const otherItems: KeybindingItem[] = sorted.filter(a => !a.labels.keybinding);\n\n        // Return the list of keybinding items prioritizing those with a defined keybinding.\n        return [...keyItems, ...otherItems];\n    }\n\n    protected getCommandLabel(command: Command): string {\n        return command.label || command.id;\n    }\n\n    protected getKeybindingLabel(keybinding: ScopedKeybinding | undefined): string | undefined {\n        return keybinding && keybinding.keybinding;\n    }\n\n    protected getContextLabel(keybinding: ScopedKeybinding | undefined): string | undefined {\n        return keybinding ? keybinding.context || keybinding.when : undefined;\n    }\n\n    protected getScopeLabel(keybinding: ScopedKeybinding | undefined): string | undefined {\n        let scope = keybinding && keybinding.scope;\n        if (scope !== undefined) {\n            if (scope < KeybindingScope.USER) {\n                scope = KeybindingScope.DEFAULT;\n            }\n            return KeybindingScope[scope].toLocaleLowerCase();\n        }\n        return undefined;\n    }\n\n    /**\n     * Compare two strings.\n     * - Strings are first normalized before comparison (`toLowerCase`).\n     * @param a the optional first string.\n     * @param b the optional second string.\n     *\n     * @returns an integer indicating whether `a` comes before, after or is equivalent to `b`.\n     * - returns `-1` if `a` occurs before `b`.\n     * - returns `1` if `a` occurs after `b`.\n     * - returns `0` if they are equivalent.\n     */\n    protected compareItem(a: string | undefined, b: string | undefined): number {\n        if (a && b) {\n            return (a.toLowerCase()).localeCompare(b.toLowerCase());\n        }\n        return 0;\n    }\n\n    /**\n     * Prompt users to update the keybinding for the given command.\n     * @param item the keybinding item.\n     */\n    protected editKeybinding(item: KeybindingItem): void {\n        const command = item.command.id;\n        const oldKeybinding = item.keybinding && item.keybinding.keybinding;\n        const dialog = new EditKeybindingDialog({\n            title: `Edit Keybinding For ${command}`,\n            initialValue: oldKeybinding,\n            validate: newKeybinding => this.validateKeybinding(command, oldKeybinding, newKeybinding),\n        }, this.keymapsService, item);\n        dialog.open().then(async keybinding => {\n            if (keybinding) {\n                await this.keymapsService.setKeybinding({\n                    ...item.keybinding,\n                    command,\n                    keybinding\n                }, oldKeybinding);\n            }\n        });\n    }\n\n    /**\n     * Prompt users for confirmation before resetting.\n     * @param command the command label.\n     *\n     * @returns a Promise which resolves to `true` if a user accepts resetting.\n     */\n    protected async confirmResetKeybinding(item: KeybindingItem): Promise<boolean> {\n        const dialog = new ConfirmDialog({\n            title: `Reset keybinding for '${this.getCommandLabel(item.command)}'`,\n            msg: 'Do you really want to reset this keybinding to its default value?'\n        });\n        return !!await dialog.open();\n    }\n\n    /**\n     * Reset the keybinding to its default value.\n     * @param item the keybinding item.\n     */\n    protected async resetKeybinding(item: KeybindingItem): Promise<void> {\n        const confirmed = await this.confirmResetKeybinding(item);\n        if (confirmed) {\n            this.keymapsService.removeKeybinding(item.command.id);\n        }\n    }\n\n    /**\n     * Validate the provided keybinding value against its previous value.\n     * @param command the command label.\n     * @param oldKeybinding the old keybinding value.\n     * @param keybinding the new keybinding value.\n     *\n     * @returns the end user message to display.\n     */\n    protected validateKeybinding(command: string, oldKeybinding: string | undefined, keybinding: string): string {\n        if (!keybinding) {\n            return 'keybinding value is required';\n        }\n        try {\n            const binding = { command, keybinding };\n            KeySequence.parse(keybinding);\n            if (oldKeybinding === keybinding) {\n                return ' '; // if old and new keybindings match, quietly reject update\n            }\n            if (this.keybindingRegistry.containsKeybindingInScope(binding)) {\n                return 'keybinding currently collides';\n            }\n            return '';\n        } catch (error) {\n            return error;\n        }\n    }\n\n    /**\n     * Build the cell data with highlights if applicable.\n     * @param raw the raw cell value.\n     *\n     * @returns the list of cell data.\n     */\n    protected buildCellData(raw: string): CellData[] {\n        const data: CellData[] = [];\n\n        if (this.query === '') {\n            return data;\n        }\n\n        let following = raw;\n        let leading;\n        let result;\n\n        const regexp = new RegExp(this.regexp);\n\n        while (result = regexp.exec(raw)) {\n            const splitLeftIndex = following.indexOf(result[0]);\n            const splitRightIndex = splitLeftIndex + result[0].length;\n\n            leading = following.slice(0, splitLeftIndex);\n            following = following.slice(splitRightIndex);\n\n            if (leading) {\n                data.push({ value: leading, highlighted: false });\n            }\n            data.push({ value: result[1], highlighted: true });\n        }\n\n        if (following) {\n            data.push({ value: following, highlighted: false });\n        }\n\n        return data;\n    }\n\n    /**\n     * Render the fuzzy representation of a matched result.\n     * @param property one of the `KeybindingItem` properties.\n     */\n    protected renderMatchedData(property: string): React.ReactNode {\n        if (this.query !== '') {\n            const cellData = this.buildCellData(property);\n            return <React.Fragment>\n                {\n                    cellData.map((data, index) => (data.highlighted) ? <span key={index} className='fuzzy-match'>{data.value}</span> : <span key={index}>{data.value}</span>)\n                }\n            </React.Fragment>;\n        } else {\n            return property;\n        }\n    }\n\n}\n/**\n * Dialog used to edit keybindings, and reset custom keybindings.\n */\nclass EditKeybindingDialog extends SingleTextInputDialog {\n\n    /**\n     * The keybinding item in question.\n     */\n    protected item: KeybindingItem;\n\n    /**\n     * HTMLButtonElement used to reset custom keybindings.\n     * Custom keybindings have a `User` scope (exist in `keymaps.json`).\n     */\n    protected resetButton: HTMLButtonElement | undefined;\n\n    constructor(\n        @inject(SingleTextInputDialogProps) protected readonly props: SingleTextInputDialogProps,\n        @inject(KeymapsService) protected readonly keymapsService: KeymapsService,\n        item: KeybindingItem\n    ) {\n        super(props);\n        this.item = item;\n        // Add the `Reset` button if the command currently has a custom keybinding.\n        if (this.item.keybinding && this.item.keybinding.scope === KeybindingScope.USER) {\n            this.appendResetButton();\n        }\n    }\n\n    protected onAfterAttach(msg: Message): void {\n        super.onAfterAttach(msg);\n        if (this.resetButton) {\n            this.addResetAction(this.resetButton, 'click');\n        }\n    }\n\n    /**\n     * Add `Reset` action used to reset a custom keybinding, and close the dialog.\n     * @param element the HTML element in question.\n     * @param additionalEventTypes additional event types.\n     */\n    protected addResetAction<K extends keyof HTMLElementEventMap>(element: HTMLElement, ...additionalEventTypes: K[]): void {\n        this.addKeyListener(element, Key.ENTER, () => {\n            this.reset();\n            this.close();\n        }, ...additionalEventTypes);\n    }\n\n    /**\n     * Create the `Reset` button, and append it to the dialog.\n     *\n     * @returns the `Reset` button.\n     */\n    protected appendResetButton(): HTMLButtonElement {\n        // Create the `Reset` button.\n        this.resetButton = this.createButton('Reset');\n        // Add the `Reset` button to the dialog control panel, before the `Accept` button.\n        this.controlPanel.insertBefore(this.resetButton, this.acceptButton!);\n        this.resetButton.title = 'Reset Keybinding';\n        this.resetButton.classList.add('secondary');\n        return this.resetButton;\n    }\n\n    /**\n     * Perform keybinding reset.\n     */\n    protected reset(): void {\n        this.keymapsService.removeKeybinding(this.item.command.id);\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from 'inversify';\nimport {\n    CommandContribution,\n    Command,\n    CommandRegistry,\n    MenuContribution,\n    MenuModelRegistry\n} from '@theia/core/lib/common';\nimport { Widget } from '@theia/core/lib/browser';\nimport { CommonMenus } from '@theia/core/lib/browser/common-frontend-contribution';\nimport { KeymapsService } from './keymaps-service';\nimport { KeybindingRegistry } from '@theia/core/lib/browser/keybinding';\nimport { AbstractViewContribution } from '@theia/core/lib/browser';\nimport { KeybindingWidget } from './keybindings-widget';\nimport { TabBarToolbarContribution, TabBarToolbarRegistry } from '@theia/core/lib/browser/shell/tab-bar-toolbar';\n\nexport namespace KeymapsCommands {\n    export const OPEN_KEYMAPS: Command = {\n        id: 'keymaps:open',\n        category: 'Settings',\n        label: 'Open Keyboard Shortcuts',\n    };\n    export const OPEN_KEYMAPS_JSON: Command = {\n        id: 'keymaps:openJson',\n        category: 'Settings',\n        label: 'Open Keyboard Shortcuts (JSON)',\n    };\n    export const OPEN_KEYMAPS_JSON_TOOLBAR: Command = {\n        id: 'keymaps:openJson.toolbar',\n        iconClass: 'theia-open-json-icon'\n    };\n    export const CLEAR_KEYBINDINGS_SEARCH: Command = {\n        id: 'keymaps.clearSearch',\n        iconClass: 'clear-all'\n    };\n}\n\n@injectable()\nexport class KeymapsFrontendContribution extends AbstractViewContribution<KeybindingWidget> implements CommandContribution, MenuContribution, TabBarToolbarContribution {\n\n    @inject(KeymapsService)\n    protected readonly keymaps: KeymapsService;\n\n    constructor() {\n        super({\n            widgetId: KeybindingWidget.ID,\n            widgetName: KeybindingWidget.LABEL,\n            defaultWidgetOptions: {\n                area: 'main'\n            },\n        });\n    }\n\n    registerCommands(commands: CommandRegistry): void {\n        commands.registerCommand(KeymapsCommands.OPEN_KEYMAPS, {\n            isEnabled: () => true,\n            execute: () => this.openView({ activate: true })\n        });\n        commands.registerCommand(KeymapsCommands.OPEN_KEYMAPS_JSON, {\n            isEnabled: () => true,\n            execute: () => this.keymaps.open()\n        });\n        commands.registerCommand(KeymapsCommands.OPEN_KEYMAPS_JSON_TOOLBAR, {\n            isEnabled: w => this.withWidget(w, () => true),\n            isVisible: w => this.withWidget(w, () => true),\n            execute: w => this.withWidget(w, widget => this.keymaps.open(widget)),\n        });\n        commands.registerCommand(KeymapsCommands.CLEAR_KEYBINDINGS_SEARCH, {\n            isEnabled: w => this.withWidget(w, widget => widget.hasSearch()),\n            isVisible: w => this.withWidget(w, () => true),\n            execute: w => this.withWidget(w, widget => widget.clearSearch()),\n        });\n    }\n\n    registerMenus(menus: MenuModelRegistry): void {\n        menus.registerMenuAction(CommonMenus.FILE_SETTINGS_SUBMENU_OPEN, {\n            commandId: KeymapsCommands.OPEN_KEYMAPS.id,\n            order: 'a20'\n        });\n    }\n\n    registerKeybindings(keybindings: KeybindingRegistry): void {\n        keybindings.registerKeybinding({\n            command: KeymapsCommands.OPEN_KEYMAPS.id,\n            keybinding: 'ctrl+alt+,'\n        });\n    }\n\n    async registerToolbarItems(toolbar: TabBarToolbarRegistry): Promise<void> {\n        const widget = await this.widget;\n        const onDidChange = widget.onDidUpdate;\n        toolbar.registerItem({\n            id: KeymapsCommands.OPEN_KEYMAPS_JSON_TOOLBAR.id,\n            command: KeymapsCommands.OPEN_KEYMAPS_JSON_TOOLBAR.id,\n            tooltip: 'Open Keyboard Shortcuts in JSON',\n            priority: 0,\n        });\n        toolbar.registerItem({\n            id: KeymapsCommands.CLEAR_KEYBINDINGS_SEARCH.id,\n            command: KeymapsCommands.CLEAR_KEYBINDINGS_SEARCH.id,\n            tooltip: 'Clear Keybindings Search Input',\n            priority: 1,\n            onDidChange,\n        });\n    }\n\n    /**\n     * Determine if the current widget is the keybindings widget.\n     */\n    protected withWidget<T>(widget: Widget | undefined = this.tryGetWidget(), fn: (widget: KeybindingWidget) => T): T | false {\n        if (widget instanceof KeybindingWidget && widget.id === KeybindingWidget.ID) {\n            return fn(widget);\n        }\n        return false;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule } from 'inversify';\nimport { KeymapsService } from './keymaps-service';\nimport { KeymapsFrontendContribution } from './keymaps-frontend-contribution';\nimport { CommandContribution, MenuContribution } from '@theia/core/lib/common';\nimport { KeybindingContribution } from '@theia/core/lib/browser/keybinding';\nimport { TabBarToolbarContribution } from '@theia/core/lib/browser/shell/tab-bar-toolbar';\n\nimport './keymaps-monaco-contribution';\nimport { WidgetFactory } from '@theia/core/lib/browser';\nimport { KeybindingWidget } from './keybindings-widget';\n\nimport '../../src/browser/style/index.css';\n\nexport default new ContainerModule(bind => {\n    bind(KeymapsService).toSelf().inSingletonScope();\n    bind(KeymapsFrontendContribution).toSelf().inSingletonScope();\n    bind(CommandContribution).toService(KeymapsFrontendContribution);\n    bind(KeybindingContribution).toService(KeymapsFrontendContribution);\n    bind(MenuContribution).toService(KeymapsFrontendContribution);\n    bind(KeybindingWidget).toSelf();\n    bind(TabBarToolbarContribution).toService(KeymapsFrontendContribution);\n    bind(WidgetFactory).toDynamicValue(context => ({\n        id: KeybindingWidget.ID,\n        createWidget: () => context.container.get<KeybindingWidget>(KeybindingWidget),\n    })).inSingletonScope();\n});\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nmonaco.languages.register({\n    id: 'jsonc',\n    'aliases': [\n        'JSON with Comments'\n    ],\n    'filenames': [\n        'keymaps.json'\n    ]\n});\n","/********************************************************************************\n * Copyright (C) 2017 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable, postConstruct } from 'inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { ResourceProvider, Resource } from '@theia/core/lib/common/resource';\nimport { OpenerService, open, WidgetOpenerOptions, Widget } from '@theia/core/lib/browser';\nimport { KeybindingRegistry, KeybindingScope } from '@theia/core/lib/browser/keybinding';\nimport { Keybinding } from '@theia/core/lib/common/keybinding';\nimport { UserStorageUri } from '@theia/userstorage/lib/browser';\nimport * as jsoncparser from 'jsonc-parser';\nimport { Emitter } from '@theia/core/lib/common/event';\n\n@injectable()\nexport class KeymapsService {\n\n    @inject(ResourceProvider)\n    protected readonly resourceProvider: ResourceProvider;\n\n    @inject(KeybindingRegistry)\n    protected readonly keyBindingRegistry: KeybindingRegistry;\n\n    @inject(OpenerService)\n    protected readonly opener: OpenerService;\n\n    protected readonly changeKeymapEmitter = new Emitter<void>();\n    readonly onDidChangeKeymaps = this.changeKeymapEmitter.event;\n\n    protected resource: Resource;\n\n    /**\n     * Initialize the keybinding service.\n     */\n    @postConstruct()\n    protected async init(): Promise<void> {\n        this.resource = await this.resourceProvider(new URI().withScheme(UserStorageUri.SCHEME).withPath('keymaps.json'));\n        this.reconcile();\n        if (this.resource.onDidChangeContents) {\n            this.resource.onDidChangeContents(() => this.reconcile());\n        }\n        this.keyBindingRegistry.onKeybindingsChanged(() => this.changeKeymapEmitter.fire(undefined));\n    }\n\n    /**\n     * Reconcile all the keybindings, registering them to the registry.\n     */\n    protected async reconcile(): Promise<void> {\n        const keybindings = await this.parseKeybindings();\n        this.keyBindingRegistry.setKeymap(KeybindingScope.USER, keybindings);\n        this.changeKeymapEmitter.fire(undefined);\n    }\n\n    /**\n     * Parsed the read keybindings.\n     */\n    protected async parseKeybindings(): Promise<Keybinding[]> {\n        const content = await this.resource.readContents();\n        const keybindings: Keybinding[] = [];\n        const json = jsoncparser.parse(content, undefined, { disallowComments: false });\n        if (Array.isArray(json)) {\n            for (const value of json) {\n                if (Keybinding.is(value)) {\n                    keybindings.push(value);\n                }\n            }\n        }\n        return keybindings;\n    }\n\n    /**\n     * Open the keybindings widget.\n     * @param ref the optional reference for opening the widget.\n     */\n    open(ref?: Widget): void {\n        const options: WidgetOpenerOptions = {\n            widgetOptions: ref ? { area: 'main', mode: 'split-right', ref } : { area: 'main' },\n            mode: 'activate'\n        };\n        open(this.opener, this.resource.uri, options);\n    }\n\n    /**\n     * Set the keybinding in the JSON.\n     * @param newKeybinding the JSON keybindings.\n     */\n    async setKeybinding(newKeybinding: Keybinding, oldKeybinding: string | undefined): Promise<void> {\n        if (!this.resource.saveContents) {\n            return;\n        }\n        const keybindings = await this.parseKeybindings();\n        let newAdded = false;\n        let oldRemoved = false;\n        for (const keybinding of keybindings) {\n            if (keybinding.command === newKeybinding.command &&\n                (keybinding.context || '') === (newKeybinding.context || '') &&\n                (keybinding.when || '') === (newKeybinding.when || '')) {\n                newAdded = true;\n                keybinding.keybinding = newKeybinding.keybinding;\n            }\n            if (oldKeybinding && keybinding.keybinding === oldKeybinding &&\n                keybinding.command === '-' + newKeybinding.command &&\n                (keybinding.context || '') === (newKeybinding.context || '') &&\n                (keybinding.when || '') === (newKeybinding.when || '')) {\n                oldRemoved = true;\n            }\n        }\n        if (!newAdded) {\n            keybindings.push({\n                command: newKeybinding.command,\n                keybinding: newKeybinding.keybinding,\n                context: newKeybinding.context,\n                when: newKeybinding.when,\n                args: newKeybinding.args\n            });\n        }\n        if (!oldRemoved && oldKeybinding) {\n            keybindings.push({\n                command: '-' + newKeybinding.command,\n                // TODO key: oldKeybinding, see https://github.com/eclipse-theia/theia/issues/6879\n                keybinding: oldKeybinding,\n                context: newKeybinding.context,\n                when: newKeybinding.when,\n                args: newKeybinding.args\n            });\n        }\n        // TODO use preference values to get proper json settings\n        // TODO handle dirty models properly\n        // TODO handle race conditions properly\n        // TODO only apply minimal edits\n        await this.resource.saveContents(JSON.stringify(keybindings, undefined, 4));\n    }\n\n    /**\n     * Remove the given keybinding with the given command id from the JSON.\n     * @param commandId the keybinding command id.\n     */\n    async removeKeybinding(commandId: string): Promise<void> {\n        if (!this.resource.saveContents) {\n            return;\n        }\n        const keybindings = await this.parseKeybindings();\n        const removedCommand = '-' + commandId;\n        const filtered = keybindings.filter(a => a.command !== commandId && a.command !== removedCommand);\n        // TODO use preference values to get proper json settings\n        // TODO handle dirty models properly\n        // TODO handle race conditions properly\n        // TODO only apply minimal edits\n        await this.resource.saveContents(JSON.stringify(filtered, undefined, 4));\n    }\n\n}\n","\nvar content = require(\"!!../../../../../css-loader/index.js!./index.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../css-loader/index.js!./index.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../css-loader/index.js!./index.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","/********************************************************************************\n * Copyright (C) 2017 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport * from './user-storage-service';\nexport * from './user-storage-resource';\nexport * from './user-storage-uri';\nexport * from './user-storage-service-filesystem';\nexport * from './user-storage-frontend-module';\n","exports = module.exports = require(\"../../../../../css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/********************************************************************************\\n * Copyright (C) 2018 Ericsson and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n#kb-main-container {\\n    display: flex;\\n    flex-direction: column;\\n    height: 100%;\\n}\\n\\n#kb-table-container {\\n    flex: 1;\\n    overflow: auto;\\n}\\n\\n.fuzzy-match {\\n    font-weight: 600;\\n    color: var(--theia-list-highlightForeground);\\n}\\n\\n.kb-actions {\\n    text-align: center;\\n    vertical-align: middle;\\n}\\n\\n.kb-action-item {\\n    visibility: hidden;\\n    padding-right: 5px;\\n}\\n\\n.kb table {\\n    border-spacing: 0;\\n    border-collapse: separate;\\n    background-color: var(--theia-editor-background);\\n    width: 100%;\\n    table-layout: fixed;\\n}\\n\\n.kb table tr {\\n    min-height: var(--theia-icon-size);\\n}\\n\\n.th-action, .th-keybinding,\\n.kb-actions, .kb-keybinding {\\n    min-height: 18px;\\n    overflow: hidden;\\n    vertical-align: middle;\\n    white-space: nowrap;\\n}\\n\\n.th-action,\\n.kb-actions {\\n    padding: 2px 0px 5px 0px;\\n}\\n\\n.th-keybinding,\\n.kb-keybinding {\\n    padding: 2px 10px 5px 10px;\\n}\\n\\n.th-label, .th-source, .th-context, .th-keybinding, \\n.kb-label, .kb-source, .kb-context {\\n    padding: 2px 10px 5px 10px;\\n    min-height: 18px;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    vertical-align: middle;\\n    white-space: nowrap;\\n}\\n\\n.kb table th {\\n    font-size: var(--theia-ui-font-size1);\\n}\\n\\n.kb table td code {\\n    font-size: 90%;\\n}\\n\\n.td-source {\\n    text-transform: lowercase;\\n}\\n\\n.kb table tr:nth-child(odd) {\\n    background-color: rgba(130, 130, 130, 0.04);\\n}\\n\\n.kb table tbody tr:hover {\\n    background-color: var(--theia-list-focusBackground);\\n}\\n\\n.kb table tbody tr:hover .kb-action-item {\\n    visibility: visible;\\n    color: var(--theia-icon-foreground);\\n    text-decoration: none;\\n}\\n\\n.kb table th {\\n    word-break: keep-all;\\n    padding-bottom: 5px;\\n    padding-top: 5px;\\n    text-align: left;\\n    vertical-align: middle;\\n    position: sticky;\\n    top: 0;\\n    background-color: var(--theia-editorWidget-background);\\n}\\n\\n.kb table .th-action {\\n    width: 4%;\\n}\\n\\n.kb table .th-label {\\n    width: 25%;\\n}\\n\\n.kb table .th-keybinding {\\n    width: 20%;\\n}\\n\\n.kb table .th-source {\\n    width: 10%;\\n}\\n\\n.kb table .th-context {\\n    width: 25%;\\n}\\n\\n.no-kb {\\n    border: 1px solid  var(--theia-editorWarning-foreground);\\n}\\n\\n#search-kb {\\n    height: 25px;\\n    flex: 1;\\n}\\n\\n.vs #search-kb {\\n    border: 1px solid #ddd;\\n}\\n\\n.search-kb-container {\\n    padding: 10px;\\n    display: flex;\\n}\\n\\n.kb-item-row td a,\\n.kb-item-row td a:active,\\n.kb-item-row td a:focus {\\n    outline: 0;\\n    border: none;\\n}\\n\\n.kb-actions-icons {\\n    display: block;\\n    width: 50%;\\n    margin-left: auto;\\n    margin-right: auto;\\n}\\n\", \"\"]);\n\n// exports\n"],"sourceRoot":""}